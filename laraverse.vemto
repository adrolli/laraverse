{"tables":{"basicrelationships":{"basicrelationships":{"count":142,"lastPrimaryKey":296,"index":{"3":{"hasMany":{"basicrelationships.inverseId":[4],"inputs.relationshipId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"basicrelationships.inverseId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"basicrelationships.inverseId":[8],"inputs.relationshipId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"basicrelationships.inverseId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"basicrelationships.inverseId":[10],"inputs.relationshipId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"basicrelationships.inverseId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"basicrelationships.inverseId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"basicrelationships.inverseId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.inverseId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"basicrelationships.inverseId":[13],"inputs.relationshipId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"basicrelationships.inverseId":[16],"inputs.relationshipId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"basicrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"basicrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"basicrelationships.inverseId":[21],"inputs.relationshipId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"basicrelationships.inverseId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"basicrelationships.inverseId":[25],"inputs.relationshipId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"basicrelationships.inverseId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"basicrelationships.inverseId":[27],"inputs.relationshipId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"basicrelationships.inverseId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"basicrelationships.inverseId":[29],"inputs.relationshipId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"basicrelationships.inverseId":[32],"inputs.relationshipId":[68]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{"basicrelationships.inverseId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"basicrelationships.inverseId":[38],"inputs.relationshipId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"basicrelationships.inverseId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"basicrelationships.inverseId":[42],"inputs.relationshipId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"basicrelationships.inverseId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"basicrelationships.inverseId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"basicrelationships.inverseId":[43],"inputs.relationshipId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"basicrelationships.inverseId":[46],"inputs.relationshipId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"basicrelationships.inverseId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"basicrelationships.inverseId":[52],"inputs.relationshipId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"basicrelationships.inverseId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"basicrelationships.inverseId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"basicrelationships.inverseId":[53],"inputs.relationshipId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"basicrelationships.inverseId":[60],"inputs.relationshipId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"basicrelationships.inverseId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"basicrelationships.inverseId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"basicrelationships.inverseId":[61],"inputs.relationshipId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"basicrelationships.inverseId":[70],"inputs.relationshipId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"basicrelationships.inverseId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"basicrelationships.inverseId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"basicrelationships.inverseId":[71],"inputs.relationshipId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"basicrelationships.inverseId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"basicrelationships.inverseId":[73],"inputs.relationshipId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"basicrelationships.inverseId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"basicrelationships.inverseId":[75],"inputs.relationshipId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"basicrelationships.inverseId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"basicrelationships.inverseId":[85],"inputs.relationshipId":[1837]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"basicrelationships.inverseId":[94],"inputs.relationshipId":[1939]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"94":{"hasMany":{"basicrelationships.inverseId":[93]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"basicrelationships.inverseId":[96]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"basicrelationships.inverseId":[95],"inputs.relationshipId":[1836]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"basicrelationships.inverseId":[98],"inputs.relationshipId":[1835]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"basicrelationships.inverseId":[97]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"basicrelationships.inverseId":[102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"basicrelationships.inverseId":[101],"inputs.relationshipId":[1957]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"basicrelationships.inverseId":[104],"inputs.relationshipId":[1940]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"basicrelationships.inverseId":[103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"109":{"hasMany":{"basicrelationships.inverseId":[110],"inputs.relationshipId":[2014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"basicrelationships.inverseId":[109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"basicrelationships.inverseId":[124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"124":{"hasMany":{"basicrelationships.inverseId":[123],"inputs.relationshipId":[1874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"basicrelationships.inverseId":[126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"basicrelationships.inverseId":[125],"inputs.relationshipId":[1875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"basicrelationships.inverseId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"basicrelationships.inverseId":[127],"inputs.relationshipId":[1850]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"basicrelationships.inverseId":[130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"basicrelationships.inverseId":[129],"inputs.relationshipId":[1849]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"basicrelationships.inverseId":[148],"inputs.relationshipId":[2022]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"basicrelationships.inverseId":[147]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{"basicrelationships.inverseId":[150],"inputs.relationshipId":[1725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{"basicrelationships.inverseId":[149]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{"basicrelationships.inverseId":[152]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"152":{"hasMany":{"basicrelationships.inverseId":[151],"inputs.relationshipId":[1728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{"basicrelationships.inverseId":[166]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"basicrelationships.inverseId":[165],"inputs.relationshipId":[1938]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"basicrelationships.inverseId":[172]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"basicrelationships.inverseId":[171],"inputs.relationshipId":[1841]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"basicrelationships.inverseId":[174]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"basicrelationships.inverseId":[173],"inputs.relationshipId":[1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"basicrelationships.inverseId":[176]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"basicrelationships.inverseId":[175],"inputs.relationshipId":[1770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"basicrelationships.inverseId":[184],"inputs.relationshipId":[1851]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"basicrelationships.inverseId":[183]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"185":{"hasMany":{"basicrelationships.inverseId":[186],"inputs.relationshipId":[1861]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{"basicrelationships.inverseId":[185]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{"basicrelationships.inverseId":[188],"inputs.relationshipId":[1863]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{"basicrelationships.inverseId":[187]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"basicrelationships.inverseId":[190]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"basicrelationships.inverseId":[189],"inputs.relationshipId":[1866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"basicrelationships.inverseId":[192],"inputs.relationshipId":[1870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"basicrelationships.inverseId":[191]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"basicrelationships.inverseId":[194]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"basicrelationships.inverseId":[193],"inputs.relationshipId":[1869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"197":{"hasMany":{"basicrelationships.inverseId":[198],"inputs.relationshipId":[1873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"198":{"hasMany":{"basicrelationships.inverseId":[197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"205":{"hasMany":{"basicrelationships.inverseId":[206]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"206":{"hasMany":{"basicrelationships.inverseId":[205],"inputs.relationshipId":[2021]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{"basicrelationships.inverseId":[208]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"208":{"hasMany":{"basicrelationships.inverseId":[207],"inputs.relationshipId":[1892]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{"basicrelationships.inverseId":[210]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{"basicrelationships.inverseId":[209],"inputs.relationshipId":[1912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{"basicrelationships.inverseId":[212]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"212":{"hasMany":{"basicrelationships.inverseId":[211],"inputs.relationshipId":[2020]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{"basicrelationships.inverseId":[218]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{"basicrelationships.inverseId":[217],"inputs.relationshipId":[1876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"basicrelationships.inverseId":[228]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"basicrelationships.inverseId":[227],"inputs.relationshipId":[1946]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"basicrelationships.inverseId":[234]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"basicrelationships.inverseId":[233],"inputs.relationshipId":[1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"basicrelationships.inverseId":[236]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"basicrelationships.inverseId":[235],"inputs.relationshipId":[1947]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"basicrelationships.inverseId":[240],"inputs.relationshipId":[2025]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{"basicrelationships.inverseId":[239]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"basicrelationships.inverseId":[242]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{"basicrelationships.inverseId":[241],"inputs.relationshipId":[2026]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{"basicrelationships.inverseId":[246]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"246":{"hasMany":{"basicrelationships.inverseId":[245],"inputs.relationshipId":[2034]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{"basicrelationships.inverseId":[248]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"248":{"hasMany":{"basicrelationships.inverseId":[247],"inputs.relationshipId":[1783]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"basicrelationships.inverseId":[250]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"basicrelationships.inverseId":[249],"inputs.relationshipId":[1784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{"basicrelationships.inverseId":[252]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{"basicrelationships.inverseId":[251],"inputs.relationshipId":[1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"basicrelationships.inverseId":[254]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"basicrelationships.inverseId":[253],"inputs.relationshipId":[1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"basicrelationships.inverseId":[256]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"256":{"hasMany":{"basicrelationships.inverseId":[255],"inputs.relationshipId":[1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"257":{"hasMany":{"basicrelationships.inverseId":[258]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"basicrelationships.inverseId":[257],"inputs.relationshipId":[2041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"basicrelationships.inverseId":[268]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"basicrelationships.inverseId":[267],"inputs.relationshipId":[2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"basicrelationships.inverseId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"basicrelationships.inverseId":[269],"inputs.relationshipId":[2046]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"basicrelationships.inverseId":[274]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"basicrelationships.inverseId":[273],"inputs.relationshipId":[2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"basicrelationships.inverseId":[290]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"basicrelationships.inverseId":[289],"inputs.relationshipId":[2100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"basicrelationships.inverseId":[294]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"basicrelationships.inverseId":[293],"inputs.relationshipId":[2101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"basicrelationships.inverseId":[296]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"basicrelationships.inverseId":[295],"inputs.relationshipId":[2124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_290":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":121,"inverseId":289,"localModelId":117,"parentKeyId":734,"foreignKeyId":759,"name":"vendor","type":"belongsTo","foreignOriginalName":"vendor_id","hasApi":true,"defaultName":"vendor","usingFirstDefaultName":true,"id":290,"createdAt":"2023-08-05 01:00:16","updatedAt":"2023-08-05 01:00:16"},"item_289":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"inverseId":290,"localModelId":121,"parentKeyId":734,"foreignKeyId":759,"name":"items","type":"hasMany","foreignOriginalName":"vendor_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":289,"createdAt":"2023-08-05 01:00:16","updatedAt":"2023-08-05 01:00:16"},"item_294":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":118,"inverseId":293,"localModelId":117,"parentKeyId":731,"foreignKeyId":763,"name":"type","type":"belongsTo","foreignOriginalName":"type_id","hasApi":true,"defaultName":"type","usingFirstDefaultName":true,"id":294,"createdAt":"2023-08-05 01:03:41","updatedAt":"2023-08-05 01:03:41"},"item_293":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"inverseId":294,"localModelId":118,"parentKeyId":731,"foreignKeyId":763,"name":"items","type":"hasMany","foreignOriginalName":"type_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":293,"createdAt":"2023-08-05 01:03:41","updatedAt":"2023-08-05 01:03:41"},"item_296":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":116,"inverseId":295,"localModelId":133,"parentKeyId":724,"foreignKeyId":805,"name":"created_by","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":296,"createdAt":"2023-08-07 12:34:56","updatedAt":"2023-08-07 12:34:56"},"item_295":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":133,"inverseId":296,"localModelId":116,"parentKeyId":724,"foreignKeyId":805,"name":"stacks","type":"hasMany","foreignOriginalName":"user_id","hasApi":true,"defaultName":"stacks","usingFirstDefaultName":true,"id":295,"createdAt":"2023-08-07 12:34:56","updatedAt":"2023-08-07 12:34:56"}},"cruds":{"cruds":{"count":67,"lastPrimaryKey":325,"index":{"5":{"hasMany":{"inputs.crudId":[10,11,12,13,14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"inputs.crudId":[15,16,17,18,19,20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"inputs.crudId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"inputs.crudId":[22,23,24,25,26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"inputs.crudId":[28,29,30,31,32,33,34,35,36,27],"manytomanycomponents.crudId":[1,2],"manytomanydetails.crudId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"inputs.crudId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"inputs.crudId":[38]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"inputs.crudId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"inputs.crudId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"inputs.crudId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"inputs.crudId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"inputs.crudId":[43,46,47,48,49,50,51,52,53,54,55,56,45,44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"inputs.crudId":[57,58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"inputs.crudId":[59,60,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"inputs.crudId":[62,63,64,65,66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"inputs.crudId":[68,69,70,71,67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"inputs.crudId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"inputs.crudId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"inputs.crudId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"inputs.crudId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"inputs.crudId":[76,86,87,88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"inputs.crudId":[77,78,79,80,85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"inputs.crudId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"266":{"hasMany":{"inputs.crudId":[1725,1726,1727,1728,1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"267":{"hasMany":{"inputs.crudId":[1730,1731,1732]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"268":{"hasMany":{"inputs.crudId":[1733,1734,1735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"inputs.crudId":[1736,1737,1738]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"inputs.crudId":[1739,1740,1741]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{"inputs.crudId":[1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"inputs.crudId":[1756,1757,1758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"inputs.crudId":[1759,1760,1761,1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"inputs.crudId":[1763,1764,1765,1766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"inputs.crudId":[1767,1768,1769,1770,1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"277":{"hasMany":{"inputs.crudId":[1774,1775,1776]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"278":{"hasMany":{"inputs.crudId":[1777,1778,1779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"279":{"hasMany":{"inputs.crudId":[1780,1781,1782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"280":{"hasMany":{"inputs.crudId":[1783,1784,1785,1786,1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"inputs.crudId":[1791,1792,1793]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"283":{"hasMany":{"inputs.crudId":[1794,1795,1796]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"inputs.crudId":[1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"287":{"hasMany":{"inputs.crudId":[1829,1830,1831]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"288":{"hasMany":{"inputs.crudId":[1832,1833,1834]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"inputs.crudId":[1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"290":{"hasMany":{"inputs.crudId":[1887,1888,1889]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"291":{"hasMany":{"inputs.crudId":[1890,1891]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"292":{"hasMany":{"inputs.crudId":[1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"293":{"hasMany":{"inputs.crudId":[1922,1923,1924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"inputs.crudId":[1925,1926,1927,1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"inputs.crudId":[1929,1930,1931]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"inputs.crudId":[1932,1933,1934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"inputs.crudId":[1935,1936,1937]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"inputs.crudId":[1938,1939,1940,1941,1942,1943]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"299":{"hasMany":{"inputs.crudId":[1945,1946,1947,1948,1949,1950,1944]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"inputs.crudId":[1951,1952,1953]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"inputs.crudId":[1954,1955,1956,1957,1958]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"inputs.crudId":[2008,2009,2010]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"inputs.crudId":[2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"inputs.crudId":[2036,2037,2038,2039,2040,2041,2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"inputs.crudId":[2043,2044,2045,2046,2047,2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{"inputs.crudId":[2094,2095,2096]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"318":{"hasMany":{"inputs.crudId":[2097,2098,2100,2101,2099,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{"inputs.crudId":[2116,2117,2118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{"inputs.crudId":[2119,2120,2121,2122,2123,2124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{"inputs.crudId":[2125,2126,2127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"322":{"hasMany":{"inputs.crudId":[2128,2129,2130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"323":{"hasMany":{"inputs.crudId":[2131,2132,2133]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{"inputs.crudId":[2134,2135,2136,2137,2138,2139,2140]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_317":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Categories","url":"categories","modelId":119,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Categories List","create":"Create Category","edit":"Edit Category","update":"Update Category","show":"Show Category","new":"New Category"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":317,"createdAt":"2023-08-07 15:11:03","updatedAt":"2023-08-07 15:11:03"},"item_318":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Items","url":"items","modelId":117,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Items List","create":"Create Item","edit":"Edit Item","update":"Update Item","show":"Show Item","new":"New Item"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":318,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-07 15:11:07"},"item_319":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Platforms","url":"platforms","modelId":120,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Platforms List","create":"Create Platform","edit":"Edit Platform","update":"Update Platform","show":"Show Platform","new":"New Platform"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":319,"createdAt":"2023-08-07 15:11:11","updatedAt":"2023-08-07 15:11:11"},"item_320":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Stacks","url":"stacks","modelId":133,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Stacks List","create":"Create Stack","edit":"Edit Stack","update":"Update Stack","show":"Show Stack","new":"New Stack"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":320,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_321":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tags","url":"tags","modelId":130,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Tags List","create":"Create Tag","edit":"Edit Tag","update":"Update Tag","show":"Show Tag","new":"New Tag"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":321,"createdAt":"2023-08-07 15:11:21","updatedAt":"2023-08-07 15:11:21"},"item_322":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Types","url":"types","modelId":118,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Types List","create":"Create Type","edit":"Edit Type","update":"Update Type","show":"Show Type","new":"New Type"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":322,"createdAt":"2023-08-07 15:11:27","updatedAt":"2023-08-07 15:11:27"},"item_323":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":116,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User","new":"New User"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":323,"createdAt":"2023-08-07 15:11:34","updatedAt":"2023-08-07 15:11:34"},"item_324":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Vendors","url":"vendors","modelId":121,"projectId":7,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Vendors List","create":"Create Vendor","edit":"Edit Vendor","update":"Update Vendor","show":"Show Vendor","new":"New Vendor"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":324,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"}},"entities":{"entities":{"count":93,"lastPrimaryKey":135,"index":{"6":{"hasMany":{"fields.entityId":[37,38,39,40,41,42,43,44,45,46,47,64,82],"projects.authModelId":[4],"cruds.modelId":[5],"basicrelationships.localModelId":[9,11,15,71],"basicrelationships.modelId":[10,12,16,72],"foreigns.relatedEntityId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[48,60,174,175,176],"basicrelationships.localModelId":[7,72,74,76],"basicrelationships.modelId":[8,71,73,75],"cruds.modelId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"fields.entityId":[49,52,107,113,119,141],"foreigns.relatedEntityId":[25,39,47],"basicrelationships.modelId":[4,32,43,42,52,59,76],"basicrelationships.localModelId":[3,31,41,44,51,60,75],"manytomanyrelationships.localModelId":[1],"manytomanyrelationships.modelId":[2],"cruds.modelId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[50,125],"basicrelationships.localModelId":[4],"basicrelationships.modelId":[3],"foreigns.relatedEntityId":[2],"cruds.modelId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"fields.entityId":[54,55,56,57,167,58,65],"foreigns.relatedEntityId":[4,44],"basicrelationships.modelId":[7,13,69],"basicrelationships.localModelId":[8,14,70],"cruds.modelId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"fields.entityId":[61,62,63],"foreigns.relatedEntityId":[5,6,46],"basicrelationships.modelId":[9,11,14,74],"basicrelationships.localModelId":[10,12,13,73],"cruds.modelId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"fields.entityId":[66,67,70,71,72,73,74,75,76,77,78,79,80,69,68],"foreigns.relatedEntityId":[7,21],"basicrelationships.modelId":[15,44],"basicrelationships.localModelId":[16,43],"cruds.modelId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"fields.entityId":[83,114,116,117,118,93,95,96,97,111,115],"foreigns.relatedEntityId":[20,27,29,31],"basicrelationships.localModelId":[22,26,28,30,37,42],"basicrelationships.modelId":[21,25,27,29,38,41],"manytomanyrelationships.localModelId":[3,5,7],"manytomanyrelationships.modelId":[4,6,8],"cruds.modelId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"fields.entityId":[84,103],"foreigns.relatedEntityId":[30],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"manytomanyrelationships.modelId":[7],"manytomanyrelationships.localModelId":[8],"cruds.modelId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"fields.entityId":[85,90],"basicrelationships.modelId":[22],"basicrelationships.localModelId":[21],"foreigns.relatedEntityId":[10],"cruds.modelId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"fields.entityId":[86,101],"foreigns.relatedEntityId":[12],"basicrelationships.localModelId":[25],"basicrelationships.modelId":[26],"cruds.modelId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"fields.entityId":[87,102],"foreigns.relatedEntityId":[28],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"manytomanyrelationships.modelId":[5],"manytomanyrelationships.localModelId":[6],"cruds.modelId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"fields.entityId":[88,99],"foreigns.relatedEntityId":[13],"basicrelationships.localModelId":[27],"basicrelationships.modelId":[28],"cruds.modelId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"fields.entityId":[89,100],"foreigns.relatedEntityId":[14],"basicrelationships.localModelId":[29],"basicrelationships.modelId":[30],"cruds.modelId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"fields.entityId":[104,106],"foreigns.relatedEntityId":[15,18],"basicrelationships.modelId":[31,37],"basicrelationships.localModelId":[32,38],"cruds.modelId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"fields.entityId":[105,108],"foreigns.relatedEntityId":[24,26,34],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.modelId":[1,3,10],"manytomanyrelationships.localModelId":[2,4,9],"cruds.modelId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"fields.entityId":[120,123],"basicrelationships.localModelId":[45,52],"basicrelationships.modelId":[46,51],"foreigns.relatedEntityId":[33,35],"manytomanyrelationships.modelId":[9],"manytomanyrelationships.localModelId":[10],"cruds.modelId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"fields.entityId":[121,122],"foreigns.relatedEntityId":[22],"basicrelationships.modelId":[45],"basicrelationships.localModelId":[46],"cruds.modelId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"fields.entityId":[126,127],"manytomanyrelationships.pivotId":[1,2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"fields.entityId":[128,129],"manytomanyrelationships.pivotId":[3,4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{"fields.entityId":[130,131],"manytomanyrelationships.pivotId":[5,6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{"fields.entityId":[132,133],"manytomanyrelationships.pivotId":[7,8],"cruds.modelId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{"fields.entityId":[135,136],"manytomanyrelationships.pivotId":[9,10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"fields.entityId":[137,147,148,146],"basicrelationships.modelId":[53,62],"basicrelationships.localModelId":[54,61],"foreigns.relatedEntityId":[40],"cruds.modelId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"fields.entityId":[138,139,145,144,142,143],"foreigns.relatedEntityId":[36],"basicrelationships.localModelId":[53],"basicrelationships.modelId":[54],"cruds.modelId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{"fields.entityId":[154,157,158,155,156,159],"basicrelationships.localModelId":[59,62],"basicrelationships.modelId":[60,61],"cruds.modelId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"fields.entityId":[161,173,171,172,166,160],"foreigns.relatedEntityId":[],"basicrelationships.modelId":[70],"basicrelationships.localModelId":[69],"cruds.modelId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{"fields.entityId":[177]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"fields.entityId":[178]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{"fields.entityId":[179]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"fields.entityId":[180]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"fields.entityId":[181,182,411,661],"foreigns.relatedEntityId":[84],"manytomanyrelationships.modelId":[21],"manytomanyrelationships.localModelId":[22],"cruds.modelId":[270]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"fields.entityId":[183,184,648,667],"basicrelationships.modelId":[124],"basicrelationships.localModelId":[123],"foreigns.relatedEntityId":[80],"cruds.modelId":[272]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"fields.entityId":[185,186,410,660],"foreigns.relatedEntityId":[86],"manytomanyrelationships.modelId":[25],"manytomanyrelationships.localModelId":[26],"cruds.modelId":[277]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"fields.entityId":[187,188,647,668],"foreigns.relatedEntityId":[81],"basicrelationships.localModelId":[125],"basicrelationships.modelId":[126],"cruds.modelId":[293]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"fields.entityId":[189,190,632,657],"foreigns.relatedEntityId":[82],"basicrelationships.localModelId":[127],"basicrelationships.modelId":[128],"cruds.modelId":[296]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"fields.entityId":[191,192,633,658],"foreigns.relatedEntityId":[83],"basicrelationships.localModelId":[129],"basicrelationships.modelId":[130],"cruds.modelId":[297]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"fields.entityId":[193,194,641,664],"foreigns.relatedEntityId":[54],"manytomanyrelationships.modelId":[15],"manytomanyrelationships.localModelId":[16],"cruds.modelId":[282]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"fields.entityId":[195,196,413],"foreigns.relatedEntityId":[57],"basicrelationships.modelId":[86],"basicrelationships.localModelId":[85],"cruds.modelId":[291]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"fields.entityId":[214,698,218,215,216,504,452,416,420,421,453,445,446,447,448,300,308,307,455,450,451,301,457,458,459,460,461,462,464,465,467,469,471,468,470,472,477,474,303,304,486,305,306,572,488,489,523,490,491,492,493,494,495,522],"foreigns.relatedEntityId":[63,65,85,87,107,123,137,145,181],"basicrelationships.modelId":[95,85,98,93,123,125,127,129,149,171,176,184,186,189,188,192,193,198,208,217,258],"basicrelationships.localModelId":[96,86,97,94,124,128,130,150,126,175,172,183,185,187,190,191,194,197,207,218,257],"manytomanyrelationships.localModelId":[15,25,21,44],"manytomanyrelationships.modelId":[16,22,26,43],"cruds.modelId":[289]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"fields.entityId":[221,220],"manytomanyrelationships.pivotId":[16,15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"fields.entityId":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"foreigns.relatedEntityId":[69,67,154],"basicrelationships.modelId":[102,97,218],"basicrelationships.localModelId":[101,98,217],"cruds.modelId":[271]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"fields.entityId":[237,238,239,240,241,242,243,244,245,247,249,527],"projects.authModelId":[5],"cruds.modelId":[301],"basicrelationships.localModelId":[102,104,151,171,233,247,249,235],"basicrelationships.modelId":[101,152,172,103,236,234,248,250],"foreigns.relatedEntityId":[70,108,119,161,162,174,175,193],"manytomanyrelationships.modelId":[62],"manytomanyrelationships.localModelId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"fields.entityId":[250,252,579,586,525,597,598,699,251],"foreigns.relatedEntityId":[72,165,192],"basicrelationships.modelId":[109,227,242,235],"basicrelationships.localModelId":[110,228,236,241],"cruds.modelId":[299],"manytomanyrelationships.modelId":[61],"manytomanyrelationships.localModelId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"fields.entityId":[253,254,511,258,255,510,675,680],"basicrelationships.localModelId":[258,268,273],"basicrelationships.modelId":[257,267,274],"cruds.modelId":[306],"foreigns.relatedEntityId":[191],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"fields.entityId":[259,508,260,261,512,681,695],"basicrelationships.modelId":[269,273],"basicrelationships.localModelId":[270,274],"foreigns.relatedEntityId":[],"cruds.modelId":[307]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"fields.entityId":[269,610,270,271,275,272,273,274,395,396,567,530,378,528,529,592,596,593,594,595,692,600,601,602,609,611],"foreigns.relatedEntityId":[114,149,150,151],"basicrelationships.modelId":[166,110,148,205,212,211,240,241,245],"basicrelationships.localModelId":[165,147,109,206,212,211,239,246,242],"cruds.modelId":[305],"manytomanyrelationships.modelId":[50,49],"manytomanyrelationships.localModelId":[50,49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"fields.entityId":[282,286,284,513,514,399,400],"basicrelationships.localModelId":[93,103,166,251],"basicrelationships.modelId":[104,94,165,252],"cruds.modelId":[298],"foreigns.relatedEntityId":[176],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"fields.entityId":[289,628,629,669],"foreigns.relatedEntityId":[188],"manytomanyrelationships.modelId":[59],"manytomanyrelationships.localModelId":[60],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"cruds.modelId":[287]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"fields.entityId":[294,295,636,663,674],"foreigns.relatedEntityId":[177,180],"basicrelationships.modelId":[255,256],"basicrelationships.localModelId":[255,256],"cruds.modelId":[294],"manytomanyrelationships.modelId":[57],"manytomanyrelationships.localModelId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"fields.entityId":[296,297,622,654],"basicrelationships.localModelId":[95,148,205],"basicrelationships.modelId":[96,147,206],"foreigns.relatedEntityId":[66,106,144],"cruds.modelId":[290]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"fields.entityId":[298,317,319,318,435,344,343,342,341,330,329,328,327,326,325,324,320,321,322,323],"foreigns.relatedEntityId":[186,187,189],"manytomanyrelationships.localModelId":[59],"manytomanyrelationships.modelId":[60],"basicrelationships.localModelId":[267,269],"basicrelationships.modelId":[268,270],"cruds.modelId":[286]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"fields.entityId":[310,309],"manytomanyrelationships.pivotId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"fields.entityId":[313,312],"manytomanyrelationships.pivotId":[26,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"fields.entityId":[381,382,383,384,386,651],"basicrelationships.localModelId":[149,152,254],"basicrelationships.modelId":[150,151,253],"foreigns.relatedEntityId":[],"cruds.modelId":[266]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{"fields.entityId":[388,390,645,671],"basicrelationships.localModelId":[253],"basicrelationships.modelId":[254],"cruds.modelId":[267],"foreigns.relatedEntityId":[179]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"fields.entityId":[405,682,406,431,430,683],"basicrelationships.modelId":[173,175],"basicrelationships.localModelId":[176,174],"cruds.modelId":[275],"foreigns.relatedEntityId":[127],"manytomanyrelationships.modelId":[41],"manytomanyrelationships.localModelId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"fields.entityId":[422,684,425,423,424],"foreigns.relatedEntityId":[122],"manytomanyrelationships.localModelId":[],"manytomanyrelationships.modelId":[],"basicrelationships.localModelId":[173],"basicrelationships.modelId":[174],"cruds.modelId":[274]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"fields.entityId":[436,616,617,437,441,618],"basicrelationships.modelId":[247,249,251],"basicrelationships.localModelId":[248,250,252],"foreigns.relatedEntityId":[128],"manytomanyrelationships.localModelId":[41],"manytomanyrelationships.modelId":[42],"cruds.modelId":[280]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"fields.entityId":[443,444],"manytomanyrelationships.pivotId":[41,42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"fields.entityId":[454,456,630,656],"foreigns.relatedEntityId":[129],"basicrelationships.modelId":[183],"basicrelationships.localModelId":[184],"cruds.modelId":[295]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"fields.entityId":[463,487,634,659],"foreigns.relatedEntityId":[130],"basicrelationships.modelId":[185],"basicrelationships.localModelId":[186],"cruds.modelId":[278]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"fields.entityId":[466,475,638,666],"foreigns.relatedEntityId":[131,132],"basicrelationships.modelId":[187,190],"basicrelationships.localModelId":[189,188],"cruds.modelId":[269]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"91":{"hasMany":{"fields.entityId":[473,482,640,665],"foreigns.relatedEntityId":[133,134],"basicrelationships.modelId":[191,194],"basicrelationships.localModelId":[192,193],"cruds.modelId":[279]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"92":{"hasMany":{"fields.entityId":[480,483,639,670],"foreigns.relatedEntityId":[138],"basicrelationships.modelId":[],"basicrelationships.localModelId":[],"manytomanyrelationships.localModelId":[43],"manytomanyrelationships.modelId":[44],"cruds.modelId":[268]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"fields.entityId":[484,485,635,662],"foreigns.relatedEntityId":[136],"basicrelationships.modelId":[197],"basicrelationships.localModelId":[198],"cruds.modelId":[283]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"fields.entityId":[502,503],"manytomanyrelationships.pivotId":[43,44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"98":{"hasMany":{"fields.entityId":[531,532,534,637,533,535,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,556,558,559,672,560,561,562,563,564,565],"basicrelationships.modelId":[207,209],"basicrelationships.localModelId":[208,210],"foreigns.relatedEntityId":[178],"manytomanyrelationships.localModelId":[57],"manytomanyrelationships.modelId":[58],"cruds.modelId":[292]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"fields.entityId":[553,557,642,643],"foreigns.relatedEntityId":[148],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"basicrelationships.localModelId":[209],"basicrelationships.modelId":[210],"cruds.modelId":[288]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"fields.entityId":[568,569],"manytomanyrelationships.pivotId":[50,49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"fields.entityId":[576,580,624,581,585],"basicrelationships.modelId":[228,233],"basicrelationships.localModelId":[227,234],"foreigns.relatedEntityId":[159],"cruds.modelId":[273]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"fields.entityId":[590,591,619,653],"foreigns.relatedEntityId":[164],"basicrelationships.modelId":[239],"basicrelationships.localModelId":[240],"cruds.modelId":[304]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"fields.entityId":[604,606,620,652],"foreigns.relatedEntityId":[169],"basicrelationships.localModelId":[245],"basicrelationships.modelId":[246],"manytomanyrelationships.modelId":[],"manytomanyrelationships.localModelId":[],"cruds.modelId":[300]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"fields.entityId":[649,650],"manytomanyrelationships.pivotId":[57,58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"110":{"hasMany":{"fields.entityId":[690,691],"manytomanyrelationships.pivotId":[59,60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"fields.entityId":[696,697],"manytomanyrelationships.pivotId":[62,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"112":{"hasMany":{"fields.entityId":[700,701,702,703,704,705,706,707,708,709,710],"projects.authModelId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"fields.entityId":[711,713,714,717,715,716,712,718]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"fields.entityId":[720]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"fields.entityId":[721,722,723]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"fields.entityId":[724,725,726,727,728,729],"projects.authModelId":[7],"foreigns.relatedEntityId":[220],"basicrelationships.localModelId":[295],"basicrelationships.modelId":[296],"cruds.modelId":[323]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"fields.entityId":[730,769,770,838,759,763,839,789,795,793,794,790,796,797,812,791,800,801,798,799,792,811],"foreigns.relatedEntityId":[210,215,216,219,221,222],"basicrelationships.localModelId":[290,294],"basicrelationships.modelId":[289,293],"manytomanyrelationships.localModelId":[69,73,76,77,79,80],"manytomanyrelationships.modelId":[70,74,75,78,79,80],"cruds.modelId":[318]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"fields.entityId":[731,826,827,828],"basicrelationships.localModelId":[293],"basicrelationships.modelId":[294],"foreigns.relatedEntityId":[211],"cruds.modelId":[322]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"fields.entityId":[732,773,776,785],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"foreigns.relatedEntityId":[217],"manytomanyrelationships.modelId":[76],"manytomanyrelationships.localModelId":[75],"cruds.modelId":[317]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"fields.entityId":[733,771,772,784],"basicrelationships.localModelId":[],"basicrelationships.modelId":[],"foreigns.relatedEntityId":[209],"manytomanyrelationships.modelId":[69],"manytomanyrelationships.localModelId":[70],"cruds.modelId":[319]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"fields.entityId":[734,777,778,780,779,781,782,783],"basicrelationships.localModelId":[289],"basicrelationships.modelId":[290],"foreigns.relatedEntityId":[207],"cruds.modelId":[324]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"fields.entityId":[761,762],"manytomanyrelationships.pivotId":[69,70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"fields.entityId":[766,786,787,788],"foreigns.relatedEntityId":[214],"manytomanyrelationships.modelId":[73],"manytomanyrelationships.localModelId":[74],"cruds.modelId":[321]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"fields.entityId":[767,768],"manytomanyrelationships.pivotId":[73,74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"fields.entityId":[774,775],"manytomanyrelationships.pivotId":[75,76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"fields.entityId":[802,807,808,809,806,829,805],"foreigns.relatedEntityId":[218],"manytomanyrelationships.modelId":[77],"manytomanyrelationships.localModelId":[78],"basicrelationships.modelId":[295],"basicrelationships.localModelId":[296],"cruds.modelId":[320]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{"fields.entityId":[803,804],"manytomanyrelationships.pivotId":[77,78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"fields.entityId":[813,814,816,817,818,819,820,821,822,823,824,825,830,831,832,834,835,836,837],"manytomanyrelationships.pivotId":[79,80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_119":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Category","type":"model","plural":"Categories","pluralAndSingularAreSame":false,"table":"categories","projectId":7,"top":"20px","left":"1622px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000001_create_categories_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":119,"createdAt":"2023-08-03 15:30:15","updatedAt":"2023-08-07 13:46:13"},"item_132":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"category_item","type":"table","table":"category_item","plural":"","top":"79px","left":"1082px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_08_03_000002_create_category_item_table.php","foreignsMigrationName":"2023_08_03_009001_add_foreigns_to_category_item_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":132,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-07 13:46:13"},"item_117":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Item","type":"model","plural":"Items","pluralAndSingularAreSame":false,"table":"items","projectId":7,"top":"39px","left":"494px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000003_create_items_table.php","foreignsMigrationName":"2023_08_03_009002_add_foreigns_to_items_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":117,"createdAt":"2023-08-03 15:29:37","updatedAt":"2023-08-07 16:21:56"},"item_135":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"item_item","type":"table","table":"item_item","plural":"","top":"598px","left":"-293px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_08_03_000004_create_item_item_table.php","foreignsMigrationName":"2023_08_03_009003_add_foreigns_to_item_item_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":135,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 16:19:12"},"item_128":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"item_platform","type":"table","table":"item_platform","plural":"","top":"360px","left":"1085px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_08_03_000005_create_item_platform_table.php","foreignsMigrationName":"2023_08_03_009004_add_foreigns_to_item_platform_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":128,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-07 13:46:13"},"item_134":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"item_stack","type":"table","table":"item_stack","plural":"","top":"169px","left":"-247px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_08_03_000006_create_item_stack_table.php","foreignsMigrationName":"2023_08_03_009005_add_foreigns_to_item_stack_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":134,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 13:46:13"},"item_131":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"item_tag","type":"table","table":"item_tag","plural":"","top":"-312px","left":"749px","pivot":true,"softDeletes":false,"timestamps":false,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2023_08_03_000007_create_item_tag_table.php","foreignsMigrationName":"2023_08_03_009006_add_foreigns_to_item_tag_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":131,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-07 13:46:13"},"item_120":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Platform","type":"model","plural":"Platforms","pluralAndSingularAreSame":false,"table":"platforms","projectId":7,"top":"430px","left":"1642px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000008_create_platforms_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":120,"createdAt":"2023-08-03 15:30:46","updatedAt":"2023-08-07 13:46:13"},"item_133":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Stack","type":"model","plural":"Stacks","pluralAndSingularAreSame":false,"table":"stacks","projectId":7,"top":"-404px","left":"-243px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000009_create_stacks_table.php","foreignsMigrationName":"2023_08_03_009007_add_foreigns_to_stacks_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":133,"createdAt":"2023-08-07 12:33:01","updatedAt":"2023-08-07 13:46:13"},"item_130":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Tag","type":"model","plural":"Tags","pluralAndSingularAreSame":false,"table":"tags","projectId":7,"top":"-372px","left":"1281px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000010_create_tags_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":130,"createdAt":"2023-08-05 01:08:08","updatedAt":"2023-08-07 13:46:13"},"item_118":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Type","type":"model","plural":"Types","pluralAndSingularAreSame":false,"table":"types","projectId":7,"top":"-429px","left":"252px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000011_create_types_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":118,"createdAt":"2023-08-03 15:29:54","updatedAt":"2023-08-07 14:13:08"},"item_116":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":7,"name":"User","type":"model","table":"users","plural":"Users","top":"-900px","left":"-254px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":116,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-07 13:46:13"},"item_121":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Vendor","type":"model","plural":"Vendors","pluralAndSingularAreSame":false,"table":"vendors","projectId":7,"top":"629px","left":"1081px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_08_03_000012_create_vendors_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":121,"createdAt":"2023-08-03 15:31:06","updatedAt":"2023-08-07 13:46:13"}},"fields":{"fields":{"count":546,"lastPrimaryKey":839,"index":{"37":{"hasMany":{"foreigns.relatedFieldId":[45],"basicrelationships.parentKeyId":[72,71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"inputs.fieldId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"inputs.fieldId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"foreigns.relatedFieldId":[25,39,47],"basicrelationships.parentKeyId":[60,59,76,75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"foreigns.relatedFieldId":[2],"basicrelationships.parentKeyId":[4,3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{"foreigns.fieldId":[2],"basicrelationships.foreignKeyId":[4,3],"inputs.fieldId":[67]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{"foreigns.relatedFieldId":[4,44],"basicrelationships.parentKeyId":[8,7,69,70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{"inputs.fieldId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"inputs.fieldId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"inputs.fieldId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"inputs.fieldId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"foreigns.fieldId":[4],"basicrelationships.foreignKeyId":[8,7],"inputs.fieldId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"foreigns.relatedFieldId":[5,6,46],"basicrelationships.parentKeyId":[10,9,11,12,14,13,74,73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"inputs.fieldId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{"inputs.fieldId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{"foreigns.fieldId":[5],"basicrelationships.foreignKeyId":[10,9,11,12],"inputs.fieldId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{"foreigns.fieldId":[6],"basicrelationships.foreignKeyId":[14,13],"inputs.fieldId":[20]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{"foreigns.relatedFieldId":[7,21],"basicrelationships.parentKeyId":[16,15,44,43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{"inputs.fieldId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{"inputs.fieldId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"inputs.fieldId":[45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"inputs.fieldId":[46]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{"inputs.fieldId":[47]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{"inputs.fieldId":[48]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"inputs.fieldId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"inputs.fieldId":[50]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"inputs.fieldId":[51]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"inputs.fieldId":[52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"inputs.fieldId":[53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"inputs.fieldId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"inputs.fieldId":[55]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"inputs.fieldId":[56]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{"foreigns.fieldId":[7],"basicrelationships.foreignKeyId":[16,15],"inputs.fieldId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{"foreigns.relatedFieldId":[20,27,29,31],"basicrelationships.parentKeyId":[41,42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{"foreigns.relatedFieldId":[30],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{"foreigns.relatedFieldId":[10],"basicrelationships.parentKeyId":[22,21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{"foreigns.relatedFieldId":[12],"basicrelationships.parentKeyId":[26,25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{"foreigns.relatedFieldId":[28],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{"foreigns.relatedFieldId":[13],"basicrelationships.parentKeyId":[28,27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"89":{"hasMany":{"foreigns.relatedFieldId":[14],"basicrelationships.parentKeyId":[30,29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"90":{"hasMany":{"inputs.fieldId":[38]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"93":{"hasMany":{"foreigns.fieldId":[10],"basicrelationships.foreignKeyId":[22,21],"inputs.fieldId":[32]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"95":{"hasMany":{"foreigns.fieldId":[12],"basicrelationships.foreignKeyId":[26,25],"inputs.fieldId":[33]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"96":{"hasMany":{"foreigns.fieldId":[13],"basicrelationships.foreignKeyId":[28,27],"inputs.fieldId":[34]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"97":{"hasMany":{"foreigns.fieldId":[14],"basicrelationships.foreignKeyId":[30,29],"inputs.fieldId":[35]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"99":{"hasMany":{"inputs.fieldId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"100":{"hasMany":{"inputs.fieldId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"101":{"hasMany":{"inputs.fieldId":[40]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"102":{"hasMany":{"inputs.fieldId":[39]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"103":{"hasMany":{"inputs.fieldId":[37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"104":{"hasMany":{"foreigns.relatedFieldId":[15,18],"basicrelationships.parentKeyId":[32,31,38,37]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"105":{"hasMany":{"foreigns.relatedFieldId":[24,26,34],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{"inputs.fieldId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{"foreigns.fieldId":[15],"basicrelationships.foreignKeyId":[32,31],"inputs.fieldId":[68]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{"inputs.fieldId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"111":{"hasMany":{"foreigns.fieldId":[18],"basicrelationships.foreignKeyId":[38,37],"inputs.fieldId":[36]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"113":{"hasMany":{"foreigns.fieldId":[20],"basicrelationships.foreignKeyId":[41,42],"inputs.fieldId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{"inputs.fieldId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"115":{"hasMany":{"inputs.fieldId":[28]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"116":{"hasMany":{"inputs.fieldId":[29]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"117":{"hasMany":{"inputs.fieldId":[30]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"118":{"hasMany":{"inputs.fieldId":[31]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{"foreigns.fieldId":[21],"basicrelationships.foreignKeyId":[44,43],"inputs.fieldId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"120":{"hasMany":{"foreigns.relatedFieldId":[33,35],"basicrelationships.parentKeyId":[51,52]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"121":{"hasMany":{"foreigns.relatedFieldId":[22],"basicrelationships.parentKeyId":[46,45]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{"inputs.fieldId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{"foreigns.fieldId":[22],"basicrelationships.foreignKeyId":[46,45],"inputs.fieldId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"125":{"hasMany":{"inputs.fieldId":[72]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"126":{"hasMany":{"foreigns.fieldId":[24],"manytomanyrelationships.localModelKeyId":[2],"manytomanyrelationships.modelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{"foreigns.fieldId":[25],"manytomanyrelationships.modelKeyId":[2],"manytomanyrelationships.localModelKeyId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{"foreigns.fieldId":[26],"manytomanyrelationships.localModelKeyId":[4],"manytomanyrelationships.modelKeyId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{"foreigns.fieldId":[27],"manytomanyrelationships.modelKeyId":[4],"manytomanyrelationships.localModelKeyId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{"foreigns.fieldId":[28],"manytomanyrelationships.localModelKeyId":[6],"manytomanyrelationships.modelKeyId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{"foreigns.fieldId":[29],"manytomanyrelationships.modelKeyId":[6],"manytomanyrelationships.localModelKeyId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{"foreigns.fieldId":[30],"manytomanyrelationships.localModelKeyId":[8],"manytomanyrelationships.modelKeyId":[7],"inputs.fieldId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{"foreigns.fieldId":[31],"manytomanyrelationships.modelKeyId":[8],"manytomanyrelationships.localModelKeyId":[7],"inputs.fieldId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"135":{"hasMany":{"foreigns.fieldId":[33],"manytomanyrelationships.localModelKeyId":[10],"manytomanyrelationships.modelKeyId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{"foreigns.fieldId":[34],"manytomanyrelationships.modelKeyId":[10],"manytomanyrelationships.localModelKeyId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{"foreigns.relatedFieldId":[40],"basicrelationships.parentKeyId":[62,61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{"foreigns.relatedFieldId":[36],"basicrelationships.parentKeyId":[54,53]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"139":{"hasMany":{"inputs.fieldId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"141":{"hasMany":{"foreigns.fieldId":[35],"basicrelationships.foreignKeyId":[51,52],"inputs.fieldId":[71]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"142":{"hasMany":{"inputs.fieldId":[24]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"143":{"hasMany":{"inputs.fieldId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{"inputs.fieldId":[23]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{"inputs.fieldId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"146":{"hasMany":{"foreigns.fieldId":[36],"basicrelationships.foreignKeyId":[54,53],"inputs.fieldId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"147":{"hasMany":{"inputs.fieldId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{"inputs.fieldId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"155":{"hasMany":{"foreigns.fieldId":[39],"basicrelationships.foreignKeyId":[60,59],"inputs.fieldId":[65]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"156":{"hasMany":{"foreigns.fieldId":[40],"basicrelationships.foreignKeyId":[62,61],"inputs.fieldId":[66]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"157":{"hasMany":{"inputs.fieldId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"158":{"hasMany":{"inputs.fieldId":[64]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{"inputs.fieldId":[63]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"160":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{"inputs.fieldId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"166":{"hasMany":{"foreigns.fieldId":[44],"basicrelationships.foreignKeyId":[69,70],"inputs.fieldId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"167":{"hasMany":{"inputs.fieldId":[18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"171":{"hasMany":{"inputs.fieldId":[78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"172":{"hasMany":{"inputs.fieldId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"173":{"hasMany":{"inputs.fieldId":[85]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{"foreigns.fieldId":[45],"basicrelationships.foreignKeyId":[72,71],"inputs.fieldId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{"foreigns.fieldId":[46],"basicrelationships.foreignKeyId":[74,73],"inputs.fieldId":[87]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{"foreigns.fieldId":[47],"basicrelationships.foreignKeyId":[76,75],"inputs.fieldId":[88]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{"foreigns.relatedFieldId":[84]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"182":{"hasMany":{"inputs.fieldId":[1739]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"183":{"hasMany":{"foreigns.relatedFieldId":[80],"basicrelationships.parentKeyId":[124,123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"184":{"hasMany":{"inputs.fieldId":[1756]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"185":{"hasMany":{"foreigns.relatedFieldId":[86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{"inputs.fieldId":[1774]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{"foreigns.relatedFieldId":[81],"basicrelationships.parentKeyId":[125,126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{"inputs.fieldId":[1922]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{"foreigns.relatedFieldId":[82],"basicrelationships.parentKeyId":[128,127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"190":{"hasMany":{"inputs.fieldId":[1932]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{"foreigns.relatedFieldId":[83],"basicrelationships.parentKeyId":[129,130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{"inputs.fieldId":[1935]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{"foreigns.relatedFieldId":[54]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"194":{"hasMany":{"inputs.fieldId":[1791]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"195":{"hasMany":{"foreigns.relatedFieldId":[57],"basicrelationships.parentKeyId":[85,86]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"196":{"hasMany":{"inputs.fieldId":[1890]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{"foreigns.relatedFieldId":[63,65,85,87,107,123,137,145,181],"basicrelationships.parentKeyId":[93,94,149,150,176,175,208,207,258,257]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{"foreigns.fieldId":[66],"basicrelationships.foreignKeyId":[95,96],"inputs.fieldId":[1836]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{"foreigns.fieldId":[57],"basicrelationships.foreignKeyId":[85,86],"inputs.fieldId":[1837]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{"foreigns.fieldId":[67],"basicrelationships.foreignKeyId":[97,98],"inputs.fieldId":[1835]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{"foreigns.fieldId":[54],"manytomanyrelationships.localModelKeyId":[16],"manytomanyrelationships.modelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{"foreigns.fieldId":[63],"manytomanyrelationships.modelKeyId":[16],"manytomanyrelationships.localModelKeyId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{"foreigns.relatedFieldId":[69,67,154],"basicrelationships.parentKeyId":[101,102,97,98,218,217]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"223":{"hasMany":{"inputs.fieldId":[1742]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"224":{"hasMany":{"inputs.fieldId":[1745]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"225":{"hasMany":{"inputs.fieldId":[1746]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"226":{"hasMany":{"inputs.fieldId":[1747]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"227":{"hasMany":{"inputs.fieldId":[1748]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"228":{"hasMany":{"inputs.fieldId":[1749]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"229":{"hasMany":{"inputs.fieldId":[1750]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"230":{"hasMany":{"inputs.fieldId":[1751]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"231":{"hasMany":{"inputs.fieldId":[1752]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"232":{"hasMany":{"inputs.fieldId":[1753]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"233":{"hasMany":{"inputs.fieldId":[1754]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"234":{"hasMany":{"inputs.fieldId":[1755]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"235":{"hasMany":{"inputs.fieldId":[1744]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"236":{"hasMany":{"inputs.fieldId":[1743]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"237":{"hasMany":{"foreigns.relatedFieldId":[70,108,119,161,162,174,175,193],"basicrelationships.parentKeyId":[104,152,151,171,172,103,233,236,234,248,250,247,249,235]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"238":{"hasMany":{"inputs.fieldId":[1954]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"239":{"hasMany":{"inputs.fieldId":[1955]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"240":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"241":{"hasMany":{"inputs.fieldId":[1956]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"242":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"243":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"244":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"245":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"247":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"249":{"hasMany":{"foreigns.fieldId":[69],"basicrelationships.foreignKeyId":[101,102],"inputs.fieldId":[1957]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"250":{"hasMany":{"foreigns.relatedFieldId":[72,165,192],"basicrelationships.parentKeyId":[109,110,241,242]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"251":{"hasMany":{"inputs.fieldId":[1944]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"252":{"hasMany":{"inputs.fieldId":[1945]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"253":{"hasMany":{"foreigns.relatedFieldId":[191],"basicrelationships.parentKeyId":[274,273]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"254":{"hasMany":{"inputs.fieldId":[2036]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"255":{"hasMany":{"inputs.fieldId":[2038]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"258":{"hasMany":{"inputs.fieldId":[2037]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"259":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"260":{"hasMany":{"inputs.fieldId":[2044]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"261":{"hasMany":{"inputs.fieldId":[2045]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"269":{"hasMany":{"foreigns.relatedFieldId":[114,149,150,151],"basicrelationships.parentKeyId":[165,166,212,211],"basicrelationships.foreignKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"270":{"hasMany":{"inputs.fieldId":[2012]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"271":{"hasMany":{"inputs.fieldId":[2013]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"272":{"hasMany":{"inputs.fieldId":[2015]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"273":{"hasMany":{"inputs.fieldId":[2016]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"274":{"hasMany":{"inputs.fieldId":[2017]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"275":{"hasMany":{"foreigns.fieldId":[72],"basicrelationships.foreignKeyId":[109,110],"inputs.fieldId":[2014]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"282":{"hasMany":{"foreigns.relatedFieldId":[176],"basicrelationships.parentKeyId":[252,251]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"284":{"hasMany":{"foreigns.fieldId":[70],"basicrelationships.foreignKeyId":[104,103],"inputs.fieldId":[1940]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"286":{"hasMany":{"foreigns.fieldId":[65],"basicrelationships.foreignKeyId":[93,94],"inputs.fieldId":[1939]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"289":{"hasMany":{"foreigns.relatedFieldId":[188],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"294":{"hasMany":{"foreigns.relatedFieldId":[177,180],"basicrelationships.parentKeyId":[255,256]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"295":{"hasMany":{"inputs.fieldId":[1925]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"296":{"hasMany":{"foreigns.relatedFieldId":[66,106,144],"basicrelationships.parentKeyId":[95,96,147,206,148,205]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"297":{"hasMany":{"inputs.fieldId":[1887]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"298":{"hasMany":{"foreigns.relatedFieldId":[186,187,189],"basicrelationships.parentKeyId":[268,267,270,269]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"300":{"hasMany":{"inputs.fieldId":[1848]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"301":{"hasMany":{"inputs.fieldId":[1854]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"303":{"hasMany":{"inputs.fieldId":[1871]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"304":{"hasMany":{"inputs.fieldId":[1872]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"305":{"hasMany":{"foreigns.fieldId":[80],"basicrelationships.foreignKeyId":[124,123],"inputs.fieldId":[1874]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"306":{"hasMany":{"foreigns.fieldId":[81],"basicrelationships.foreignKeyId":[125,126],"inputs.fieldId":[1875]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"307":{"hasMany":{"foreigns.fieldId":[82],"basicrelationships.foreignKeyId":[128,127],"inputs.fieldId":[1850]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"308":{"hasMany":{"foreigns.fieldId":[83],"basicrelationships.foreignKeyId":[129,130],"inputs.fieldId":[1849]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"309":{"hasMany":{"foreigns.fieldId":[84],"manytomanyrelationships.localModelKeyId":[22],"manytomanyrelationships.modelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"310":{"hasMany":{"foreigns.fieldId":[85],"manytomanyrelationships.modelKeyId":[22],"manytomanyrelationships.localModelKeyId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"312":{"hasMany":{"foreigns.fieldId":[86],"manytomanyrelationships.localModelKeyId":[26],"manytomanyrelationships.modelKeyId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"313":{"hasMany":{"foreigns.fieldId":[87],"manytomanyrelationships.modelKeyId":[26],"manytomanyrelationships.localModelKeyId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"317":{"hasMany":{"inputs.fieldId":[1810]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"318":{"hasMany":{"inputs.fieldId":[1811]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"319":{"hasMany":{"inputs.fieldId":[1812]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"320":{"hasMany":{"inputs.fieldId":[1813]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"321":{"hasMany":{"inputs.fieldId":[1814]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"322":{"hasMany":{"inputs.fieldId":[1815]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"323":{"hasMany":{"inputs.fieldId":[1816]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"324":{"hasMany":{"inputs.fieldId":[1817]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"325":{"hasMany":{"inputs.fieldId":[1818]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"326":{"hasMany":{"inputs.fieldId":[1819]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"327":{"hasMany":{"inputs.fieldId":[1820]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"328":{"hasMany":{"inputs.fieldId":[1821]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"329":{"hasMany":{"inputs.fieldId":[1822]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"330":{"hasMany":{"inputs.fieldId":[1823]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"341":{"hasMany":{"inputs.fieldId":[1824]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"342":{"hasMany":{"inputs.fieldId":[1825]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"343":{"hasMany":{"inputs.fieldId":[1826]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"344":{"hasMany":{"inputs.fieldId":[1828]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"378":{"hasMany":{"foreigns.fieldId":[106],"basicrelationships.foreignKeyId":[147,148],"inputs.fieldId":[2022]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"381":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"382":{"hasMany":{"foreigns.fieldId":[107],"basicrelationships.foreignKeyId":[149,150],"inputs.fieldId":[1725]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"383":{"hasMany":{"inputs.fieldId":[1726]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"384":{"hasMany":{"inputs.fieldId":[1727]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"386":{"hasMany":{"foreigns.fieldId":[108],"basicrelationships.foreignKeyId":[152,151],"inputs.fieldId":[1728]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"388":{"hasMany":{"foreigns.relatedFieldId":[179],"basicrelationships.parentKeyId":[254,253]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"390":{"hasMany":{"inputs.fieldId":[1730]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"395":{"hasMany":{"inputs.fieldId":[2018]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"396":{"hasMany":{"inputs.fieldId":[2019]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"399":{"hasMany":{"inputs.fieldId":[1943]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"400":{"hasMany":{"foreigns.fieldId":[114],"basicrelationships.foreignKeyId":[165,166],"inputs.fieldId":[1938]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"405":{"hasMany":{"foreigns.relatedFieldId":[127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"406":{"hasMany":{"inputs.fieldId":[1769]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"410":{"hasMany":{"inputs.fieldId":[1775]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"411":{"hasMany":{"inputs.fieldId":[1740]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"413":{"hasMany":{"inputs.fieldId":[1891]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"416":{"hasMany":{"inputs.fieldId":[1840]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"420":{"hasMany":{"foreigns.fieldId":[119],"basicrelationships.foreignKeyId":[171,172],"inputs.fieldId":[1841]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"421":{"hasMany":{"inputs.fieldId":[1842]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"422":{"hasMany":{"foreigns.relatedFieldId":[122],"basicrelationships.parentKeyId":[173,174]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"423":{"hasMany":{"inputs.fieldId":[1763]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"424":{"hasMany":{"inputs.fieldId":[1765]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"425":{"hasMany":{"inputs.fieldId":[1766]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"430":{"hasMany":{"foreigns.fieldId":[122],"basicrelationships.foreignKeyId":[173,174],"inputs.fieldId":[1771]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"431":{"hasMany":{"foreigns.fieldId":[123],"basicrelationships.foreignKeyId":[176,175],"inputs.fieldId":[1770]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"435":{"hasMany":{"inputs.fieldId":[1827]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"436":{"hasMany":{"foreigns.relatedFieldId":[128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"437":{"hasMany":{"inputs.fieldId":[1785]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"441":{"hasMany":{"inputs.fieldId":[1786]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"443":{"hasMany":{"foreigns.fieldId":[127],"manytomanyrelationships.localModelKeyId":[42],"manytomanyrelationships.modelKeyId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"444":{"hasMany":{"foreigns.fieldId":[128],"manytomanyrelationships.modelKeyId":[42],"manytomanyrelationships.localModelKeyId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"445":{"hasMany":{"inputs.fieldId":[1844]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"446":{"hasMany":{"inputs.fieldId":[1845]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"447":{"hasMany":{"inputs.fieldId":[1846]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"448":{"hasMany":{"inputs.fieldId":[1847]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"450":{"hasMany":{"inputs.fieldId":[1852]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"451":{"hasMany":{"inputs.fieldId":[1853]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"452":{"hasMany":{"inputs.fieldId":[1839]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"453":{"hasMany":{"inputs.fieldId":[1843]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"454":{"hasMany":{"foreigns.relatedFieldId":[129],"basicrelationships.parentKeyId":[184,183]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"455":{"hasMany":{"foreigns.fieldId":[129],"basicrelationships.foreignKeyId":[184,183],"inputs.fieldId":[1851]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"456":{"hasMany":{"inputs.fieldId":[1929]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"457":{"hasMany":{"inputs.fieldId":[1855]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"458":{"hasMany":{"inputs.fieldId":[1856]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"459":{"hasMany":{"inputs.fieldId":[1857]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"460":{"hasMany":{"inputs.fieldId":[1858]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"461":{"hasMany":{"inputs.fieldId":[1859]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"462":{"hasMany":{"inputs.fieldId":[1860]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"463":{"hasMany":{"foreigns.relatedFieldId":[130],"basicrelationships.parentKeyId":[186,185]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"464":{"hasMany":{"foreigns.fieldId":[130],"basicrelationships.foreignKeyId":[186,185],"inputs.fieldId":[1861]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"465":{"hasMany":{"inputs.fieldId":[1862]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"466":{"hasMany":{"foreigns.relatedFieldId":[131,132],"basicrelationships.parentKeyId":[187,190,189,188]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"467":{"hasMany":{"foreigns.fieldId":[131],"basicrelationships.foreignKeyId":[187,188],"inputs.fieldId":[1863]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"468":{"hasMany":{"foreigns.fieldId":[132],"basicrelationships.foreignKeyId":[190,189],"inputs.fieldId":[1866]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"469":{"hasMany":{"inputs.fieldId":[1864]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"470":{"hasMany":{"inputs.fieldId":[1867]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"471":{"hasMany":{"inputs.fieldId":[1865]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"472":{"hasMany":{"inputs.fieldId":[1868]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"473":{"hasMany":{"foreigns.relatedFieldId":[133,134],"basicrelationships.parentKeyId":[191,194,192,193]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"474":{"hasMany":{"foreigns.fieldId":[133],"basicrelationships.foreignKeyId":[191,192],"inputs.fieldId":[1870]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"475":{"hasMany":{"inputs.fieldId":[1736]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"477":{"hasMany":{"foreigns.fieldId":[134],"basicrelationships.foreignKeyId":[194,193],"inputs.fieldId":[1869]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"480":{"hasMany":{"foreigns.relatedFieldId":[138],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"482":{"hasMany":{"inputs.fieldId":[1780]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"483":{"hasMany":{"inputs.fieldId":[1733]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"484":{"hasMany":{"foreigns.relatedFieldId":[136],"basicrelationships.parentKeyId":[198,197]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"485":{"hasMany":{"inputs.fieldId":[1794]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"486":{"hasMany":{"foreigns.fieldId":[136],"basicrelationships.foreignKeyId":[198,197],"inputs.fieldId":[1873]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"487":{"hasMany":{"inputs.fieldId":[1777]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"488":{"hasMany":{"inputs.fieldId":[1877]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"489":{"hasMany":{"inputs.fieldId":[1878]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"490":{"hasMany":{"inputs.fieldId":[1880]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"491":{"hasMany":{"inputs.fieldId":[1881]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"492":{"hasMany":{"inputs.fieldId":[1882]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"493":{"hasMany":{"inputs.fieldId":[1883]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"494":{"hasMany":{"inputs.fieldId":[1884]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"495":{"hasMany":{"inputs.fieldId":[1885]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"502":{"hasMany":{"foreigns.fieldId":[137],"manytomanyrelationships.localModelKeyId":[44],"manytomanyrelationships.modelKeyId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"503":{"hasMany":{"foreigns.fieldId":[138],"manytomanyrelationships.modelKeyId":[44],"manytomanyrelationships.localModelKeyId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"504":{"hasMany":{"inputs.fieldId":[1838]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"508":{"hasMany":{"inputs.fieldId":[2043]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"510":{"hasMany":{"inputs.fieldId":[2039]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"511":{"hasMany":{"inputs.fieldId":[2040]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"512":{"hasMany":{"inputs.fieldId":[2047]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"513":{"hasMany":{"inputs.fieldId":[1941]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"514":{"hasMany":{"inputs.fieldId":[1942]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"522":{"hasMany":{"inputs.fieldId":[1886]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"523":{"hasMany":{"inputs.fieldId":[1879]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"525":{"hasMany":{"inputs.fieldId":[1948]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"527":{"hasMany":{"inputs.fieldId":[1958]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"528":{"hasMany":{"inputs.fieldId":[2023]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"529":{"hasMany":{"inputs.fieldId":[2024]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"530":{"hasMany":{"foreigns.fieldId":[144],"basicrelationships.foreignKeyId":[206,205],"inputs.fieldId":[2021]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"531":{"hasMany":{"foreigns.relatedFieldId":[178]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"532":{"hasMany":{"foreigns.fieldId":[145],"basicrelationships.foreignKeyId":[208,207],"inputs.fieldId":[1892]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"533":{"hasMany":{"inputs.fieldId":[1895]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"534":{"hasMany":{"inputs.fieldId":[1893]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"535":{"hasMany":{"inputs.fieldId":[1896]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"536":{"hasMany":{"inputs.fieldId":[1897]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"537":{"hasMany":{"inputs.fieldId":[1898]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"538":{"hasMany":{"inputs.fieldId":[1899]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"539":{"hasMany":{"inputs.fieldId":[1900]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"541":{"hasMany":{"inputs.fieldId":[1901]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"542":{"hasMany":{"inputs.fieldId":[1902]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"543":{"hasMany":{"inputs.fieldId":[1903]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"544":{"hasMany":{"inputs.fieldId":[1904]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"545":{"hasMany":{"inputs.fieldId":[1905]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"546":{"hasMany":{"inputs.fieldId":[1906]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"547":{"hasMany":{"inputs.fieldId":[1907]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"548":{"hasMany":{"inputs.fieldId":[1908]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"549":{"hasMany":{"inputs.fieldId":[1909]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"550":{"hasMany":{"inputs.fieldId":[1910]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"551":{"hasMany":{"inputs.fieldId":[1911]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"553":{"hasMany":{"foreigns.relatedFieldId":[148],"basicrelationships.parentKeyId":[210,209]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"556":{"hasMany":{"foreigns.fieldId":[148],"basicrelationships.foreignKeyId":[210,209],"inputs.fieldId":[1912]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"557":{"hasMany":{"inputs.fieldId":[1832]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"558":{"hasMany":{"inputs.fieldId":[1913]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"559":{"hasMany":{"inputs.fieldId":[1914]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"560":{"hasMany":{"inputs.fieldId":[1916]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"561":{"hasMany":{"inputs.fieldId":[1917]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"562":{"hasMany":{"inputs.fieldId":[1918]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"563":{"hasMany":{"inputs.fieldId":[1919]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"564":{"hasMany":{"inputs.fieldId":[1920]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"565":{"hasMany":{"inputs.fieldId":[1921]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"567":{"hasMany":{"foreigns.fieldId":[149],"basicrelationships.foreignKeyId":[212,211],"inputs.fieldId":[2020]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"568":{"hasMany":{"foreigns.fieldId":[150],"manytomanyrelationships.localModelKeyId":[50],"manytomanyrelationships.modelKeyId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"569":{"hasMany":{"foreigns.fieldId":[151],"manytomanyrelationships.modelKeyId":[50],"manytomanyrelationships.localModelKeyId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"572":{"hasMany":{"foreigns.fieldId":[154],"basicrelationships.foreignKeyId":[218,217],"inputs.fieldId":[1876]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"576":{"hasMany":{"foreigns.relatedFieldId":[159],"basicrelationships.parentKeyId":[228,227]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"579":{"hasMany":{"foreigns.fieldId":[159],"basicrelationships.foreignKeyId":[228,227],"inputs.fieldId":[1946]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"580":{"hasMany":{"inputs.fieldId":[1759]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"581":{"hasMany":{"inputs.fieldId":[1761]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"585":{"hasMany":{"foreigns.fieldId":[161],"basicrelationships.foreignKeyId":[233,234],"inputs.fieldId":[1762]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"586":{"hasMany":{"foreigns.fieldId":[162],"basicrelationships.foreignKeyId":[236,235],"inputs.fieldId":[1947]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"590":{"hasMany":{"foreigns.relatedFieldId":[164],"basicrelationships.parentKeyId":[240,239]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"591":{"hasMany":{"inputs.fieldId":[2008]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"592":{"hasMany":{"foreigns.fieldId":[164],"basicrelationships.foreignKeyId":[240,239],"inputs.fieldId":[2025]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"593":{"hasMany":{"inputs.fieldId":[2027]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"594":{"hasMany":{"inputs.fieldId":[2028]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"595":{"hasMany":{"inputs.fieldId":[2029]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"596":{"hasMany":{"foreigns.fieldId":[165],"basicrelationships.foreignKeyId":[241,242],"inputs.fieldId":[2026]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"597":{"hasMany":{"inputs.fieldId":[1949]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"598":{"hasMany":{"inputs.fieldId":[1950]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"600":{"hasMany":{"inputs.fieldId":[2031]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"601":{"hasMany":{"inputs.fieldId":[2032]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"602":{"hasMany":{"inputs.fieldId":[2033]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"604":{"hasMany":{"foreigns.relatedFieldId":[169],"basicrelationships.parentKeyId":[246,245]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"606":{"hasMany":{"inputs.fieldId":[1951]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"609":{"hasMany":{"foreigns.fieldId":[169],"basicrelationships.foreignKeyId":[246,245],"inputs.fieldId":[2034]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"610":{"hasMany":{"inputs.fieldId":[2011]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"611":{"hasMany":{"inputs.fieldId":[2035]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"616":{"hasMany":{"foreigns.fieldId":[174],"basicrelationships.foreignKeyId":[248,247],"inputs.fieldId":[1783]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"617":{"hasMany":{"foreigns.fieldId":[175],"basicrelationships.foreignKeyId":[250,249],"inputs.fieldId":[1784]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"618":{"hasMany":{"foreigns.fieldId":[176],"basicrelationships.foreignKeyId":[252,251],"inputs.fieldId":[1787]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"619":{"hasMany":{"inputs.fieldId":[2009]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"620":{"hasMany":{"inputs.fieldId":[1952]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"622":{"hasMany":{"inputs.fieldId":[1888]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"624":{"hasMany":{"inputs.fieldId":[1760]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"628":{"hasMany":{"inputs.fieldId":[1829]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"629":{"hasMany":{"inputs.fieldId":[1830]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"630":{"hasMany":{"inputs.fieldId":[1930]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"632":{"hasMany":{"inputs.fieldId":[1933]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"633":{"hasMany":{"inputs.fieldId":[1936]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"634":{"hasMany":{"inputs.fieldId":[1778]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"635":{"hasMany":{"inputs.fieldId":[1795]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"636":{"hasMany":{"inputs.fieldId":[1926]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"637":{"hasMany":{"inputs.fieldId":[1894]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"638":{"hasMany":{"inputs.fieldId":[1737]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"639":{"hasMany":{"inputs.fieldId":[1734]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"640":{"hasMany":{"inputs.fieldId":[1781]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"641":{"hasMany":{"inputs.fieldId":[1792]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"642":{"hasMany":{"inputs.fieldId":[1833]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"643":{"hasMany":{"inputs.fieldId":[1834]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"645":{"hasMany":{"inputs.fieldId":[1731]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"647":{"hasMany":{"inputs.fieldId":[1923]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"648":{"hasMany":{"inputs.fieldId":[1757]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"649":{"hasMany":{"foreigns.fieldId":[177],"manytomanyrelationships.localModelKeyId":[58],"manytomanyrelationships.modelKeyId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"650":{"hasMany":{"foreigns.fieldId":[178],"manytomanyrelationships.modelKeyId":[58],"manytomanyrelationships.localModelKeyId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"651":{"hasMany":{"foreigns.fieldId":[179],"basicrelationships.foreignKeyId":[254,253],"inputs.fieldId":[1729]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"652":{"hasMany":{"inputs.fieldId":[1953]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"653":{"hasMany":{"inputs.fieldId":[2010]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"654":{"hasMany":{"inputs.fieldId":[1889]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"656":{"hasMany":{"inputs.fieldId":[1931]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"657":{"hasMany":{"inputs.fieldId":[1934]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"658":{"hasMany":{"inputs.fieldId":[1937]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"659":{"hasMany":{"inputs.fieldId":[1779]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"660":{"hasMany":{"inputs.fieldId":[1776]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"661":{"hasMany":{"inputs.fieldId":[1741]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"662":{"hasMany":{"inputs.fieldId":[1796]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"663":{"hasMany":{"inputs.fieldId":[1927]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"664":{"hasMany":{"inputs.fieldId":[1793]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"665":{"hasMany":{"inputs.fieldId":[1782]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"666":{"hasMany":{"inputs.fieldId":[1738]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"667":{"hasMany":{"inputs.fieldId":[1758]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"668":{"hasMany":{"inputs.fieldId":[1924]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"669":{"hasMany":{"inputs.fieldId":[1831]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"670":{"hasMany":{"inputs.fieldId":[1735]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"671":{"hasMany":{"inputs.fieldId":[1732]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"672":{"hasMany":{"inputs.fieldId":[1915]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"674":{"hasMany":{"foreigns.fieldId":[180],"basicrelationships.foreignKeyId":[255,256],"inputs.fieldId":[1928]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"675":{"hasMany":{"foreigns.fieldId":[181],"basicrelationships.foreignKeyId":[258,257],"inputs.fieldId":[2041]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"680":{"hasMany":{"foreigns.fieldId":[186],"basicrelationships.foreignKeyId":[268,267],"inputs.fieldId":[2042]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"681":{"hasMany":{"foreigns.fieldId":[187],"basicrelationships.foreignKeyId":[270,269],"inputs.fieldId":[2046]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"682":{"hasMany":{"inputs.fieldId":[1767]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"683":{"hasMany":{"inputs.fieldId":[1768]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"684":{"hasMany":{"inputs.fieldId":[1764]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"690":{"hasMany":{"foreigns.fieldId":[188],"manytomanyrelationships.localModelKeyId":[60],"manytomanyrelationships.modelKeyId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"691":{"hasMany":{"foreigns.fieldId":[189],"manytomanyrelationships.modelKeyId":[60],"manytomanyrelationships.localModelKeyId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"692":{"hasMany":{"inputs.fieldId":[2030]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"695":{"hasMany":{"foreigns.fieldId":[191],"basicrelationships.foreignKeyId":[274,273],"inputs.fieldId":[2048]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"696":{"hasMany":{"foreigns.fieldId":[192],"manytomanyrelationships.localModelKeyId":[62],"manytomanyrelationships.modelKeyId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"697":{"hasMany":{"foreigns.fieldId":[193],"manytomanyrelationships.modelKeyId":[62],"manytomanyrelationships.localModelKeyId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"698":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"699":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"700":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"701":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"702":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"703":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"704":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"705":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"706":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"707":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"708":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"709":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"710":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"711":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"712":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"713":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"714":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"715":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"716":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"717":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"718":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"720":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"721":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"722":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"723":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"724":{"hasMany":{"foreigns.relatedFieldId":[220],"basicrelationships.parentKeyId":[296,295]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"725":{"hasMany":{"inputs.fieldId":[2131]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"726":{"hasMany":{"inputs.fieldId":[2132]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"728":{"hasMany":{"inputs.fieldId":[2133]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"730":{"hasMany":{"foreigns.relatedFieldId":[210,215,216,219,221,222],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"731":{"hasMany":{"foreigns.relatedFieldId":[211],"basicrelationships.parentKeyId":[294,293]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"732":{"hasMany":{"foreigns.relatedFieldId":[217],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"733":{"hasMany":{"foreigns.relatedFieldId":[209]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"734":{"hasMany":{"foreigns.relatedFieldId":[207],"basicrelationships.parentKeyId":[290,289]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"759":{"hasMany":{"foreigns.fieldId":[207],"basicrelationships.foreignKeyId":[290,289],"inputs.fieldId":[2100]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"761":{"hasMany":{"foreigns.fieldId":[209],"manytomanyrelationships.localModelKeyId":[70],"manytomanyrelationships.modelKeyId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"762":{"hasMany":{"foreigns.fieldId":[210],"manytomanyrelationships.modelKeyId":[70],"manytomanyrelationships.localModelKeyId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"763":{"hasMany":{"foreigns.fieldId":[211],"basicrelationships.foreignKeyId":[294,293],"inputs.fieldId":[2101]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"766":{"hasMany":{"foreigns.relatedFieldId":[214]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"767":{"hasMany":{"foreigns.fieldId":[214],"manytomanyrelationships.localModelKeyId":[74],"manytomanyrelationships.modelKeyId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"768":{"hasMany":{"foreigns.fieldId":[215],"manytomanyrelationships.modelKeyId":[74],"manytomanyrelationships.localModelKeyId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"769":{"hasMany":{"inputs.fieldId":[2097]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"770":{"hasMany":{"inputs.fieldId":[2098]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"771":{"hasMany":{"inputs.fieldId":[2116]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"772":{"hasMany":{"inputs.fieldId":[2117]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"773":{"hasMany":{"inputs.fieldId":[2094]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"774":{"hasMany":{"foreigns.fieldId":[216],"manytomanyrelationships.localModelKeyId":[76],"manytomanyrelationships.modelKeyId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"775":{"hasMany":{"foreigns.fieldId":[217],"manytomanyrelationships.modelKeyId":[76],"manytomanyrelationships.localModelKeyId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"776":{"hasMany":{"inputs.fieldId":[2095]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"777":{"hasMany":{"inputs.fieldId":[2134]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"778":{"hasMany":{"inputs.fieldId":[2135]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"779":{"hasMany":{"inputs.fieldId":[2136]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"780":{"hasMany":{"inputs.fieldId":[2137]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"781":{"hasMany":{"inputs.fieldId":[2138]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"782":{"hasMany":{"inputs.fieldId":[2139]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"783":{"hasMany":{"inputs.fieldId":[2140]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"784":{"hasMany":{"inputs.fieldId":[2118]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"785":{"hasMany":{"inputs.fieldId":[2096]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"786":{"hasMany":{"inputs.fieldId":[2125]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"787":{"hasMany":{"inputs.fieldId":[2126]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"788":{"hasMany":{"inputs.fieldId":[2127]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"789":{"hasMany":{"inputs.fieldId":[2099]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"790":{"hasMany":{"inputs.fieldId":[2105]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"791":{"hasMany":{"inputs.fieldId":[2109]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"792":{"hasMany":{"inputs.fieldId":[2114]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"793":{"hasMany":{"inputs.fieldId":[2103]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"794":{"hasMany":{"inputs.fieldId":[2104]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"795":{"hasMany":{"inputs.fieldId":[2102]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"796":{"hasMany":{"inputs.fieldId":[2106]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"797":{"hasMany":{"inputs.fieldId":[2107]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"798":{"hasMany":{"inputs.fieldId":[2112]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"799":{"hasMany":{"inputs.fieldId":[2113]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"800":{"hasMany":{"inputs.fieldId":[2110]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"801":{"hasMany":{"inputs.fieldId":[2111]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"802":{"hasMany":{"foreigns.relatedFieldId":[218]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"803":{"hasMany":{"foreigns.fieldId":[218],"manytomanyrelationships.localModelKeyId":[78],"manytomanyrelationships.modelKeyId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"804":{"hasMany":{"foreigns.fieldId":[219],"manytomanyrelationships.modelKeyId":[78],"manytomanyrelationships.localModelKeyId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"805":{"hasMany":{"foreigns.fieldId":[220],"basicrelationships.foreignKeyId":[296,295],"inputs.fieldId":[2124]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"806":{"hasMany":{"inputs.fieldId":[2122]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"807":{"hasMany":{"inputs.fieldId":[2119]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"808":{"hasMany":{"inputs.fieldId":[2120]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"809":{"hasMany":{"inputs.fieldId":[2121]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"811":{"hasMany":{"inputs.fieldId":[2115]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"812":{"hasMany":{"inputs.fieldId":[2108]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"813":{"hasMany":{"foreigns.fieldId":[221],"manytomanyrelationships.localModelKeyId":[80],"manytomanyrelationships.modelKeyId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"814":{"hasMany":{"foreigns.fieldId":[222],"manytomanyrelationships.modelKeyId":[80],"manytomanyrelationships.localModelKeyId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"816":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"817":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"818":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"819":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"820":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"821":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"822":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"823":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"824":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"825":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"826":{"hasMany":{"inputs.fieldId":[2128]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"827":{"hasMany":{"inputs.fieldId":[2129]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"828":{"hasMany":{"inputs.fieldId":[2130]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"829":{"hasMany":{"inputs.fieldId":[2123]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"830":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"831":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"832":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"834":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"835":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"836":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"837":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"838":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"839":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_732":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":119,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":732,"createdAt":"2023-08-03 15:30:15","updatedAt":"2023-08-03 15:30:15","order":0},"item_773":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":119,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":773,"createdAt":"2023-08-05 01:10:32","updatedAt":"2023-08-05 01:10:34"},"item_776":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":119,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":776,"createdAt":"2023-08-05 01:11:14","updatedAt":"2023-08-05 01:11:16"},"item_785":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":119,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":785,"createdAt":"2023-08-05 01:14:21","updatedAt":"2023-08-05 01:14:26"},"item_774":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"item_id","entityId":132,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":774,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57","order":0},"item_775":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"category_id","entityId":132,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":775,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57","order":1},"item_730":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":117,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":730,"createdAt":"2023-08-03 15:29:37","updatedAt":"2023-08-07 16:23:08","order":0},"item_769":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":117,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":769,"createdAt":"2023-08-05 01:09:19","updatedAt":"2023-08-07 16:23:08"},"item_770":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":117,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":770,"createdAt":"2023-08-05 01:09:32","updatedAt":"2023-08-07 16:23:08"},"item_789":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":117,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":789,"createdAt":"2023-08-05 01:33:41","updatedAt":"2023-08-08 00:25:53"},"item_839":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"version","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":839,"createdAt":"2023-08-07 16:22:48","updatedAt":"2023-08-08 00:25:52"},"item_838":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_latest","entityId":117,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":838,"createdAt":"2023-08-07 16:21:59","updatedAt":"2023-08-07 16:23:08"},"item_759":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"vendor_id","entityId":117,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":759,"createdAt":"2023-08-05 01:00:16","updatedAt":"2023-08-07 16:23:08","order":6},"item_763":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"type_id","entityId":117,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":763,"createdAt":"2023-08-05 01:03:41","updatedAt":"2023-08-07 16:23:08","order":7},"item_795":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"website","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":795,"createdAt":"2023-08-05 01:36:00","updatedAt":"2023-08-08 00:25:57"},"item_793":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"rating","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":793,"createdAt":"2023-08-05 01:35:01","updatedAt":"2023-08-08 00:26:03"},"item_794":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"health","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":794,"createdAt":"2023-08-05 01:35:14","updatedAt":"2023-08-08 00:26:05"},"item_790":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github_url","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":11,"id":790,"createdAt":"2023-08-05 01:33:53","updatedAt":"2023-08-08 00:26:06"},"item_796":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github_stars","entityId":117,"type":"integer","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber(0)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":12,"id":796,"createdAt":"2023-08-07 12:20:14","updatedAt":"2023-08-08 00:26:08"},"item_797":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github_forks","entityId":117,"type":"integer","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber(0)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":13,"id":797,"createdAt":"2023-08-07 12:23:05","updatedAt":"2023-08-08 00:26:10"},"item_812":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github_json","entityId":117,"type":"json","pk":false,"fk":false,"params":{"options":null},"faker":"[]","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":14,"id":812,"createdAt":"2023-08-07 12:40:47","updatedAt":"2023-08-08 00:26:12"},"item_791":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist_url","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":15,"id":791,"createdAt":"2023-08-05 01:34:26","updatedAt":"2023-08-08 00:26:13"},"item_800":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist_name","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":16,"id":800,"createdAt":"2023-08-07 12:26:42","updatedAt":"2023-08-08 00:26:14"},"item_801":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist_description","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":17,"id":801,"createdAt":"2023-08-07 12:29:08","updatedAt":"2023-08-08 00:26:16"},"item_798":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist_downloads","entityId":117,"type":"integer","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber(0)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":18,"id":798,"createdAt":"2023-08-07 12:25:48","updatedAt":"2023-08-08 00:26:17"},"item_799":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist_favers","entityId":117,"type":"integer","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber(0)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":19,"id":799,"createdAt":"2023-08-07 12:26:06","updatedAt":"2023-08-08 00:26:19"},"item_792":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"npm_url","entityId":117,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":20,"id":792,"createdAt":"2023-08-05 01:34:34","updatedAt":"2023-08-08 00:26:20"},"item_811":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github_maintainers","entityId":117,"type":"integer","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->randomNumber(0)","nullable":true,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":21,"id":811,"createdAt":"2023-08-07 12:40:33","updatedAt":"2023-08-08 00:26:24"},"item_813":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"dep_item_id","entityId":135,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":813,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 16:14:40","order":0},"item_814":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"item_id","entityId":135,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":814,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 16:14:40","order":1},"item_816":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_require","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":816,"createdAt":"2023-08-07 13:35:09","updatedAt":"2023-08-07 16:14:40"},"item_817":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_require_dev","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":817,"createdAt":"2023-08-07 13:36:03","updatedAt":"2023-08-07 16:14:40"},"item_818":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_conflict","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":818,"createdAt":"2023-08-07 13:36:15","updatedAt":"2023-08-07 16:14:40"},"item_819":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_replace","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":819,"createdAt":"2023-08-07 13:36:28","updatedAt":"2023-08-07 16:14:40"},"item_820":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_provide","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":820,"createdAt":"2023-08-07 13:36:38","updatedAt":"2023-08-07 16:14:40"},"item_821":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"composer_suggest","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":821,"createdAt":"2023-08-07 13:36:50","updatedAt":"2023-08-07 16:14:40"},"item_822":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"npm_dependency","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":8,"id":822,"createdAt":"2023-08-07 13:39:58","updatedAt":"2023-08-07 16:14:40"},"item_823":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"npm_dev_dependendy","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":9,"id":823,"createdAt":"2023-08-07 13:40:43","updatedAt":"2023-08-07 16:14:40"},"item_824":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"npm_peer_dependency","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":10,"id":824,"createdAt":"2023-08-07 13:40:54","updatedAt":"2023-08-07 16:14:40"},"item_825":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"other_dependency","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":11,"id":825,"createdAt":"2023-08-07 13:41:30","updatedAt":"2023-08-07 16:14:40"},"item_830":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_related","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":12,"id":830,"createdAt":"2023-08-07 16:09:01","updatedAt":"2023-08-07 16:14:52"},"item_831":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_predecessor","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":13,"id":831,"createdAt":"2023-08-07 16:13:24","updatedAt":"2023-08-07 16:14:55"},"item_832":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_successor","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":14,"id":832,"createdAt":"2023-08-07 16:13:57","updatedAt":"2023-08-07 16:14:57"},"item_834":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_alternative","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":15,"id":834,"createdAt":"2023-08-07 16:15:34","updatedAt":"2023-08-07 16:15:42"},"item_835":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_release","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":16,"id":835,"createdAt":"2023-08-07 16:20:33","updatedAt":"2023-08-07 16:21:05"},"item_836":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_version","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":17,"id":836,"createdAt":"2023-08-07 16:21:07","updatedAt":"2023-08-07 16:21:18"},"item_837":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"is_patch","entityId":135,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":18,"id":837,"createdAt":"2023-08-07 16:21:19","updatedAt":"2023-08-07 16:21:25"},"item_761":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"platform_id","entityId":128,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":761,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11","order":0},"item_762":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"item_id","entityId":128,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":762,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11","order":1},"item_803":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"stack_id","entityId":134,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":803,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07","order":0},"item_804":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"item_id","entityId":134,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":804,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07","order":1},"item_767":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"tag_id","entityId":131,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":767,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23","order":0},"item_768":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"item_id","entityId":131,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":768,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23","order":1},"item_733":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":120,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":733,"createdAt":"2023-08-03 15:30:46","updatedAt":"2023-08-03 15:30:46","order":0},"item_771":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":120,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":771,"createdAt":"2023-08-05 01:10:10","updatedAt":"2023-08-05 01:10:17"},"item_772":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":120,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":772,"createdAt":"2023-08-05 01:10:19","updatedAt":"2023-08-05 01:10:22"},"item_784":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":120,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":784,"createdAt":"2023-08-05 01:14:07","updatedAt":"2023-08-05 01:14:11"},"item_802":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":133,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":802,"createdAt":"2023-08-07 12:33:01","updatedAt":"2023-08-07 15:03:36","order":0},"item_807":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":133,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":807,"createdAt":"2023-08-07 12:35:46","updatedAt":"2023-08-07 15:03:36"},"item_808":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":133,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":808,"createdAt":"2023-08-07 12:35:50","updatedAt":"2023-08-07 15:03:36"},"item_809":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":133,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":809,"createdAt":"2023-08-07 12:35:53","updatedAt":"2023-08-07 15:03:36"},"item_806":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"public","entityId":133,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":806,"createdAt":"2023-08-07 12:35:29","updatedAt":"2023-08-07 15:03:36"},"item_829":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"major","entityId":133,"type":"boolean","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->boolean()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":829,"createdAt":"2023-08-07 15:03:22","updatedAt":"2023-08-07 15:03:36"},"item_805":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":133,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":805,"createdAt":"2023-08-07 12:34:56","updatedAt":"2023-08-07 15:03:36","order":6},"item_766":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":130,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":766,"createdAt":"2023-08-05 01:08:08","updatedAt":"2023-08-05 01:08:08","order":0},"item_786":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":130,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":786,"createdAt":"2023-08-05 01:14:34","updatedAt":"2023-08-05 01:14:36"},"item_787":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":130,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":787,"createdAt":"2023-08-05 01:14:38","updatedAt":"2023-08-05 01:14:40"},"item_788":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":130,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":788,"createdAt":"2023-08-05 01:14:41","updatedAt":"2023-08-05 01:14:49"},"item_731":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":118,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":731,"createdAt":"2023-08-03 15:29:54","updatedAt":"2023-08-03 15:29:54","order":0},"item_826":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":118,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":826,"createdAt":"2023-08-07 14:12:11","updatedAt":"2023-08-07 14:12:14"},"item_827":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":118,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":827,"createdAt":"2023-08-07 14:12:16","updatedAt":"2023-08-07 14:12:17"},"item_828":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":118,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":828,"createdAt":"2023-08-07 14:12:24","updatedAt":"2023-08-07 14:12:28"},"item_724":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":116,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":724,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":0},"item_725":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":116,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":725,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":1},"item_726":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":116,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->unique->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":726,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":2},"item_727":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":116,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":727,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":3},"item_728":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":116,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":728,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":4},"item_729":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":116,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":729,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-03 15:25:05","order":5},"item_734":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":121,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":734,"createdAt":"2023-08-03 15:31:06","updatedAt":"2023-08-03 15:31:06","order":0},"item_777":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"title","entityId":121,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(10)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":777,"createdAt":"2023-08-05 01:11:23","updatedAt":"2023-08-05 01:11:25"},"item_778":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"slug","entityId":121,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->slug()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":778,"createdAt":"2023-08-05 01:11:28","updatedAt":"2023-08-05 01:11:30"},"item_779":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"github","entityId":121,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":3,"id":779,"createdAt":"2023-08-05 01:11:31","updatedAt":"2023-08-05 01:13:03"},"item_780":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"packagist","entityId":121,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":4,"id":780,"createdAt":"2023-08-05 01:11:46","updatedAt":"2023-08-05 01:11:55"},"item_781":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"npm","entityId":121,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":5,"id":781,"createdAt":"2023-08-05 01:13:18","updatedAt":"2023-08-05 01:13:26"},"item_782":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"website","entityId":121,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":6,"id":782,"createdAt":"2023-08-05 01:13:29","updatedAt":"2023-08-05 01:13:35"},"item_783":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"description","entityId":121,"type":"text","pk":false,"fk":false,"params":{},"faker":"$faker->sentence(15)","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":7,"id":783,"createdAt":"2023-08-05 01:13:44","updatedAt":"2023-08-05 01:13:50"}},"foreigns":{"foreigns":{"count":108,"lastPrimaryKey":222,"index":{"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{"inputs.foreignId":[83]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{"inputs.foreignId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"81":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"82":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"84":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"107":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"108":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"114":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"119":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"127":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"128":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"129":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"130":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"131":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"132":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"133":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"134":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"136":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"137":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"138":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"144":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"145":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"148":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"149":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"150":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"151":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"154":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"159":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"161":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"162":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"164":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"165":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"169":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"174":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"175":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"176":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"177":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"178":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"179":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"180":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"181":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"186":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"187":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"188":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"189":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"191":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"192":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"193":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"207":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"209":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"210":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"211":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"214":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"215":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"216":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"217":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"218":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"219":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"220":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"221":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"222":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_217":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":775,"relatedEntityId":119,"relatedFieldId":732,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"category_item_category_id_foreign","defaultIndexName":"category_item_category_id_foreign","id":217,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57"},"item_216":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":774,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"category_item_item_id_foreign","defaultIndexName":"category_item_item_id_foreign","id":216,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57"},"item_210":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":762,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_platform_item_id_foreign","defaultIndexName":"item_platform_item_id_foreign","id":210,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11"},"item_215":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":768,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_tag_item_id_foreign","defaultIndexName":"item_tag_item_id_foreign","id":215,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23"},"item_219":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":804,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_stack_item_id_foreign","defaultIndexName":"item_stack_item_id_foreign","id":219,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07"},"item_221":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":813,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_item_dep_item_id_foreign","defaultIndexName":"item_item_dep_item_id_foreign","id":221,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 13:33:50"},"item_222":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":814,"relatedEntityId":117,"relatedFieldId":730,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_item_item_id_foreign","defaultIndexName":"item_item_item_id_foreign","id":222,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 13:33:50"},"item_207":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":759,"relatedEntityId":121,"relatedFieldId":734,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_vendor_id_foreign","defaultIndexName":"item_vendor_id_foreign","id":207,"createdAt":"2023-08-05 01:00:16","updatedAt":"2023-08-05 01:00:16"},"item_211":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":763,"relatedEntityId":118,"relatedFieldId":731,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_type_id_foreign","defaultIndexName":"item_type_id_foreign","id":211,"createdAt":"2023-08-05 01:03:41","updatedAt":"2023-08-05 01:03:41"},"item_209":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":761,"relatedEntityId":120,"relatedFieldId":733,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_platform_platform_id_foreign","defaultIndexName":"item_platform_platform_id_foreign","id":209,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11"},"item_218":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":803,"relatedEntityId":133,"relatedFieldId":802,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_stack_stack_id_foreign","defaultIndexName":"item_stack_stack_id_foreign","id":218,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07"},"item_214":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":767,"relatedEntityId":130,"relatedFieldId":766,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"item_tag_tag_id_foreign","defaultIndexName":"item_tag_tag_id_foreign","id":214,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23"},"item_220":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":805,"relatedEntityId":116,"relatedFieldId":724,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"stack_user_id_foreign","defaultIndexName":"stack_user_id_foreign","id":220,"createdAt":"2023-08-07 12:34:56","updatedAt":"2023-08-07 12:34:56"}},"inputs":{"inputs":{"count":380,"lastPrimaryKey":2142,"index":{"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"27":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"29":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"30":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"31":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"32":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"33":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"35":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"37":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"63":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"64":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"65":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"66":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"67":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"68":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"71":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"72":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"83":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"85":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"86":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"87":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"88":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1725":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1726":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1727":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1728":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1729":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1730":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1731":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1732":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1733":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1734":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1735":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1736":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1737":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1738":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1739":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1740":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1741":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1742":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1743":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1744":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1745":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1746":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1747":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1748":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1749":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1750":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1751":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1752":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1753":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1754":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1755":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1756":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1757":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1758":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1759":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1760":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1761":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1762":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1763":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1764":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1765":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1766":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1767":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1768":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1769":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1770":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1771":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1774":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1775":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1776":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1777":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1778":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1779":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1780":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1781":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1782":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1783":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1784":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1785":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1786":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1787":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1791":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1792":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1793":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1794":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1795":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1796":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1810":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1811":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1812":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1813":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1814":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1815":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1816":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1817":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1818":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1819":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1820":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1821":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1822":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1823":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1824":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1825":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1826":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1827":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1828":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1829":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1830":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1831":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1832":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1833":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1834":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1835":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1836":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1837":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1838":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1839":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1840":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1841":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1842":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1843":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1844":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1845":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1846":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1847":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1848":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1849":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1850":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1851":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1852":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1853":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1854":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1855":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1856":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1857":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1858":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1859":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1860":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1861":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1862":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1863":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1864":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1865":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1866":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1867":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1868":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1869":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1870":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1871":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1872":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1873":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1874":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1875":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1876":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1877":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1878":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1879":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1880":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1881":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1882":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1883":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1884":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1885":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1886":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1887":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1888":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1889":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1890":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1891":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1892":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1893":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1894":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1895":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1896":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1897":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1898":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1899":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1900":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1901":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1902":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1903":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1904":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1905":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1906":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1907":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1908":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1909":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1910":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1911":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1912":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1913":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1914":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1915":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1916":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1917":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1918":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1919":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1920":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1921":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1922":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1923":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1924":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1925":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1926":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1927":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1928":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1929":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1930":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1931":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1932":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1933":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1934":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1935":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1936":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1937":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1938":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1939":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1940":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1941":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1942":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1943":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1944":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1945":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1946":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1947":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1948":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1949":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1950":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1951":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1952":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1953":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1954":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1955":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1956":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1957":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"1958":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2008":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2009":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2010":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2011":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2012":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2013":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2014":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2015":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2016":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2017":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2018":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2019":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2020":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2021":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2022":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2023":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2024":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2025":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2026":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2027":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2028":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2029":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2030":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2031":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2032":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2033":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2034":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2035":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2036":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2037":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2038":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2039":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2040":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2041":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2042":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2043":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2044":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2045":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2046":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2047":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2048":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2094":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2095":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2096":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2097":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2098":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2099":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2100":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2101":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2102":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2103":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2104":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2105":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2106":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2107":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2108":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2109":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2110":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2111":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2112":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2113":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2114":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2115":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2116":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2117":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2118":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2119":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2120":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2121":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2122":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2123":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2124":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2125":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2126":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2127":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2128":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2129":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2130":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2131":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2132":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2133":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2134":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2135":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2136":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2137":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2138":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2139":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2140":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_2094":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":317,"fieldId":773,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2094,"createdAt":"2023-08-07 15:11:03","updatedAt":"2023-08-07 15:11:03"},"item_2095":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":317,"fieldId":776,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2095,"createdAt":"2023-08-07 15:11:03","updatedAt":"2023-08-07 15:11:03"},"item_2096":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":317,"fieldId":785,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2096,"createdAt":"2023-08-07 15:11:03","updatedAt":"2023-08-07 15:11:03"},"item_2097":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":769,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2097,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-07 16:23:08"},"item_2098":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":770,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2098,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-07 16:23:08"},"item_2099":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":789,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2099,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:25:53"},"item_2100":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":759,"relationshipId":290,"relationshipCollectionName":"vendors","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"vendorsForSelect","name":"vendor_id","label":"Vendor","placeholder":"Vendor","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Vendor","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:vendors,id"],"updateValidation":["required","exists:vendors,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2100,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-07 16:23:08"},"item_2101":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":763,"relationshipId":294,"relationshipCollectionName":"types","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"typesForSelect","name":"type_id","label":"Type","placeholder":"Type","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Type","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:types,id"],"updateValidation":["required","exists:types,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2101,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-07 16:23:08"},"item_2102":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":795,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"website","label":"Website","placeholder":"Website","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2102,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:25:57"},"item_2103":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":793,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"rating","label":"Rating","placeholder":"Rating","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2103,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:03"},"item_2104":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":794,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"health","label":"Health","placeholder":"Health","order":8,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2104,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:05"},"item_2105":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":790,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github_url","label":"Github Url","placeholder":"Github Url","order":9,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2105,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:06"},"item_2106":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":796,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github_stars","label":"Github Stars","placeholder":"Github Stars","order":10,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2106,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:08"},"item_2107":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":797,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github_forks","label":"Github Forks","placeholder":"Github Forks","order":11,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2107,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:10"},"item_2108":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":812,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github_json","label":"Github Json","placeholder":"Github Json","order":12,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","json"],"updateValidation":["nullable","max:255","json"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2108,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:12"},"item_2109":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":791,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist_url","label":"Packagist Url","placeholder":"Packagist Url","order":13,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2109,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:13"},"item_2110":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":800,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist_name","label":"Packagist Name","placeholder":"Packagist Name","order":14,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2110,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:14"},"item_2111":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":801,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist_description","label":"Packagist Description","placeholder":"Packagist Description","order":15,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2111,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:16"},"item_2112":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":798,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist_downloads","label":"Packagist Downloads","placeholder":"Packagist Downloads","order":16,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2112,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:17"},"item_2113":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":799,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist_favers","label":"Packagist Favers","placeholder":"Packagist Favers","order":17,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2113,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:19"},"item_2114":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":792,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"npm_url","label":"Npm Url","placeholder":"Npm Url","order":18,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","max:255","string"],"updateValidation":["nullable","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2114,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:20"},"item_2115":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":318,"fieldId":811,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github_maintainers","label":"Github Maintainers","placeholder":"Github Maintainers","order":19,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"number","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["nullable","numeric"],"updateValidation":["nullable","numeric"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2115,"createdAt":"2023-08-07 15:11:07","updatedAt":"2023-08-08 00:26:24"},"item_2116":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":319,"fieldId":771,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2116,"createdAt":"2023-08-07 15:11:11","updatedAt":"2023-08-07 15:11:11"},"item_2117":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":319,"fieldId":772,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2117,"createdAt":"2023-08-07 15:11:11","updatedAt":"2023-08-07 15:11:11"},"item_2118":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":319,"fieldId":784,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2118,"createdAt":"2023-08-07 15:11:11","updatedAt":"2023-08-07 15:11:11"},"item_2119":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":807,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2119,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2120":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":808,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2120,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2121":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":809,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2121,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2122":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":806,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"public","label":"Public","placeholder":"Public","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","boolean"],"updateValidation":["required","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2122,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2123":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":829,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"major","label":"Major","placeholder":"Major","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"checkbox","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","boolean"],"updateValidation":["required","boolean"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2123,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2124":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":320,"fieldId":805,"relationshipId":296,"relationshipCollectionName":"users","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"usersForSelect","name":"user_id","label":"Created By","placeholder":"Created By","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the User","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:users,id"],"updateValidation":["required","exists:users,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2124,"createdAt":"2023-08-07 15:11:16","updatedAt":"2023-08-07 15:11:16"},"item_2125":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":321,"fieldId":786,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2125,"createdAt":"2023-08-07 15:11:21","updatedAt":"2023-08-07 15:11:21"},"item_2126":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":321,"fieldId":787,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2126,"createdAt":"2023-08-07 15:11:21","updatedAt":"2023-08-07 15:11:21"},"item_2127":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":321,"fieldId":788,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2127,"createdAt":"2023-08-07 15:11:21","updatedAt":"2023-08-07 15:11:21"},"item_2128":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":322,"fieldId":826,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2128,"createdAt":"2023-08-07 15:11:27","updatedAt":"2023-08-07 15:11:27"},"item_2129":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":322,"fieldId":827,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2129,"createdAt":"2023-08-07 15:11:27","updatedAt":"2023-08-07 15:11:27"},"item_2130":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":322,"fieldId":828,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2130,"createdAt":"2023-08-07 15:11:27","updatedAt":"2023-08-07 15:11:27"},"item_2131":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":323,"fieldId":725,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2131,"createdAt":"2023-08-07 15:11:34","updatedAt":"2023-08-07 15:11:34"},"item_2132":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":323,"fieldId":726,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","unique:users,email","email"],"updateValidation":["required","unique:users,email","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2132,"createdAt":"2023-08-07 15:11:34","updatedAt":"2023-08-07 15:11:34"},"item_2133":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":323,"fieldId":728,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required"],"updateValidation":["nullable"],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"onForms":true,"dependentSelectId":null,"id":2133,"createdAt":"2023-08-07 15:11:34","updatedAt":"2023-08-07 15:11:34"},"item_2134":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":777,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"title","label":"Title","placeholder":"Title","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2134,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2135":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":778,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"slug","label":"Slug","placeholder":"Slug","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2135,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2136":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":779,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"github","label":"Github","placeholder":"Github","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2136,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2137":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":780,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"packagist","label":"Packagist","placeholder":"Packagist","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2137,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2138":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":781,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"npm","label":"Npm","placeholder":"Npm","order":5,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2138,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2139":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":782,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"website","label":"Website","placeholder":"Website","order":6,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2139,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"},"item_2140":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":324,"fieldId":783,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"description","label":"Description","placeholder":"Description","order":7,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"textarea","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2140,"createdAt":"2023-08-07 15:11:39","updatedAt":"2023-08-07 15:11:39"}},"manytomanycomponents":{"manytomanycomponents":{"count":2,"lastPrimaryKey":4,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"manytomanydetails":{"manytomanydetails":{"count":1,"lastPrimaryKey":4,"index":{"1":{"hasMany":{"cruds.manyToManyDetailId":[27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"manytomanyrelationships":{"manytomanyrelationships":{"count":38,"lastPrimaryKey":80,"index":{"1":{"hasMany":{"manytomanyrelationships.inverseId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"manytomanyrelationships.inverseId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"manytomanyrelationships.inverseId":[4],"manytomanycomponents.relationshipId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"manytomanyrelationships.inverseId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"manytomanyrelationships.inverseId":[6],"manytomanycomponents.relationshipId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"manytomanyrelationships.inverseId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"manytomanyrelationships.inverseId":[8],"manytomanydetails.relationshipId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"manytomanyrelationships.inverseId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"manytomanyrelationships.inverseId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"manytomanyrelationships.inverseId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"manytomanyrelationships.inverseId":[16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"manytomanyrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"21":{"hasMany":{"manytomanyrelationships.inverseId":[22]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"22":{"hasMany":{"manytomanyrelationships.inverseId":[21]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"manytomanyrelationships.inverseId":[26]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{"manytomanyrelationships.inverseId":[25]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{"manytomanyrelationships.inverseId":[42]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{"manytomanyrelationships.inverseId":[41]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{"manytomanyrelationships.inverseId":[44]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"manytomanyrelationships.inverseId":[43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"manytomanyrelationships.inverseId":[50]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"manytomanyrelationships.inverseId":[49]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"manytomanyrelationships.inverseId":[58]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"manytomanyrelationships.inverseId":[57]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"manytomanyrelationships.inverseId":[60]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"60":{"hasMany":{"manytomanyrelationships.inverseId":[59]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"61":{"hasMany":{"manytomanyrelationships.inverseId":[62]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"62":{"hasMany":{"manytomanyrelationships.inverseId":[61]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"69":{"hasMany":{"manytomanyrelationships.inverseId":[70]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"70":{"hasMany":{"manytomanyrelationships.inverseId":[69]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"73":{"hasMany":{"manytomanyrelationships.inverseId":[74]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"74":{"hasMany":{"manytomanyrelationships.inverseId":[73]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"75":{"hasMany":{"manytomanyrelationships.inverseId":[76]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"76":{"hasMany":{"manytomanyrelationships.inverseId":[75]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"77":{"hasMany":{"manytomanyrelationships.inverseId":[78]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"78":{"hasMany":{"manytomanyrelationships.inverseId":[77]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"79":{"hasMany":{"manytomanyrelationships.inverseId":[80]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"80":{"hasMany":{"manytomanyrelationships.inverseId":[79]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_75":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":132,"inverseId":76,"localModelId":119,"modelKeyId":774,"localModelKeyId":775,"name":"items","type":"belongsToMany","pivotOriginalName":"category_item","modelKeyOriginalName":"item_id","localModelKeyOriginalName":"category_id","hasApi":true,"defaultName":"items2","usingFirstDefaultName":false,"id":75,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57"},"item_76":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":119,"pivotId":132,"inverseId":75,"localModelId":117,"modelKeyId":775,"localModelKeyId":774,"name":"categories","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"categories","usingFirstDefaultName":true,"id":76,"createdAt":"2023-08-05 01:10:57","updatedAt":"2023-08-05 01:10:57"},"item_69":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":120,"pivotId":128,"inverseId":70,"localModelId":117,"modelKeyId":761,"localModelKeyId":762,"name":"platforms","type":"belongsToMany","pivotOriginalName":"item_platform","modelKeyOriginalName":"platform_id","localModelKeyOriginalName":"item_id","hasApi":true,"defaultName":"platforms2","usingFirstDefaultName":false,"id":69,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11"},"item_70":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":128,"inverseId":69,"localModelId":120,"modelKeyId":762,"localModelKeyId":761,"name":"items","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":70,"createdAt":"2023-08-05 01:03:11","updatedAt":"2023-08-05 01:03:11"},"item_73":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":130,"pivotId":131,"inverseId":74,"localModelId":117,"modelKeyId":767,"localModelKeyId":768,"name":"tags","type":"belongsToMany","pivotOriginalName":"item_tag","modelKeyOriginalName":"tag_id","localModelKeyOriginalName":"item_id","hasApi":true,"defaultName":"tags2","usingFirstDefaultName":false,"id":73,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23"},"item_74":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":131,"inverseId":73,"localModelId":130,"modelKeyId":768,"localModelKeyId":767,"name":"items","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":74,"createdAt":"2023-08-05 01:08:23","updatedAt":"2023-08-05 01:08:23"},"item_77":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":133,"pivotId":134,"inverseId":78,"localModelId":117,"modelKeyId":803,"localModelKeyId":804,"name":"stacks","type":"belongsToMany","pivotOriginalName":"item_stack","modelKeyOriginalName":"stack_id","localModelKeyOriginalName":"item_id","hasApi":true,"defaultName":"stacks2","usingFirstDefaultName":false,"id":77,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07"},"item_78":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":134,"inverseId":77,"localModelId":133,"modelKeyId":804,"localModelKeyId":803,"name":"items","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":78,"createdAt":"2023-08-07 12:34:07","updatedAt":"2023-08-07 12:34:07"},"item_79":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":135,"inverseId":80,"localModelId":117,"modelKeyId":813,"localModelKeyId":814,"name":"dependencies","type":"belongsToMany","pivotOriginalName":"item_item","modelKeyOriginalName":"dep_item_id","localModelKeyOriginalName":"item_id","hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":79,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 13:33:50"},"item_80":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":117,"pivotId":135,"inverseId":79,"localModelId":117,"modelKeyId":814,"localModelKeyId":813,"name":"items","type":"belongsToMany","pivotOriginalName":null,"modelKeyOriginalName":null,"localModelKeyOriginalName":null,"hasApi":true,"defaultName":"items","usingFirstDefaultName":true,"id":80,"createdAt":"2023-08-07 13:33:50","updatedAt":"2023-08-07 13:33:50"}},"morphrelationships":{"morphrelationships":{"count":0,"lastPrimaryKey":2,"index":{},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"}},"projects":{"projects":{"count":4,"lastPrimaryKey":7,"index":{"4":{"hasMany":{"entities.projectId":[15,16,18,17,19,20,22,21,14,28,27,26,8,25,13,6,12,33,30,31,11,34,7,35,36,37,29,23,24,9,38],"cruds.projectId":[5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,10,27]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"entities.projectId":[46,92,91,90,95,45,40,99,89,44,42,70,39,71,41,52,108,98,68,104,103,101,69,81,79,110,67,64,87,86,84,57,61,83,111,102,59,53,93,56,43,88,51,55,54],"cruds.projectId":[266,267,268,269,270,271,272,273,274,275,277,278,279,280,282,283,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,305,306,307]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"entities.projectId":[112,113,114,115]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"entities.projectId":[119,120,130,116,121,132,128,134,131,133,118,135,117],"cruds.projectId":[317,318,319,320,321,322,323,324]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_7":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Laraverse","url":"https://laraverse.test","mode":"draft","folder":"/Users/alfdrollinger/Herd","authModelId":116,"tenancyModelId":null,"settings":{"cssFramework":"tailwind","theme":"default","uiTemplate":"jetstream","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":0.6000000000000001,"schemaScrollTop":4065.19677734375,"schemaScrollLeft":4092.582763671875,"turbolinks":false,"modules":[]},"codeSettings":{"options":{"forceGeneration":false,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":false,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"317":{"crudId":317,"name":"Categories","requests":true,"controller":true,"views":true,"tests":true,"api":true},"318":{"crudId":318,"name":"Items","requests":true,"controller":true,"views":true,"tests":true,"api":true},"319":{"crudId":319,"name":"Platforms","requests":true,"controller":true,"views":true,"tests":true,"api":true},"320":{"crudId":320,"name":"Stacks","requests":true,"controller":true,"views":true,"tests":true,"api":true},"321":{"crudId":321,"name":"Tags","requests":true,"controller":true,"views":true,"tests":true,"api":true},"322":{"crudId":322,"name":"Types","requests":true,"controller":true,"views":true,"tests":true,"api":true},"323":{"crudId":323,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"324":{"crudId":324,"name":"Vendors","requests":true,"controller":true,"views":true,"tests":true,"api":true},"325":{"crudId":325,"name":"Versions","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":false,"permissions":true,"uiTemplate":true},"generationCommands":{"checkDependencies":true,"gitClone":true,"composerInstall":true,"storageLink":true,"npmInstall":true,"compileAssets":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":3306,"database":"laraverse","username":"root","password":""},"modules":["auth","permissions","multiTenancy"],"version":"1.3.2","laravelVersion":10,"repositoryUrl":null,"repositoryBranch":null,"files":{".env":{"deleteOnGeneration":true,"content":"APP_NAME=\"Laraverse\"\nAPP_ENV=local\nAPP_KEY=base64:DdMcGrugIE0Ie+HEqKdrYeKjHXkJpEb6eHfX0hBFrME=\nAPP_DEBUG=true\nAPP_URL=https://laraverse.test\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=laraverse\nDB_USERNAME=root\nDB_PASSWORD=\"\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=database\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=hello@example.com\nMAIL_FROM_NAME=${APP_NAME}\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_HOST=\nPUSHER_PORT=443\nPUSHER_SCHEME=https\nPUSHER_APP_CLUSTER=mt1\nVITE_APP_NAME=${APP_NAME}\nVITE_PUSHER_APP_KEY=${PUSHER_APP_KEY}\nVITE_PUSHER_HOST=${PUSHER_HOST}\nVITE_PUSHER_PORT=${PUSHER_PORT}\nVITE_PUSHER_SCHEME=${PUSHER_SCHEME}\nVITE_PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}\n","module":"base","path":".env"},"/app/Providers/AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     */\n    public function boot(): void\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n\n        // Implicitly grant \"Super Admin\" role all permission checks using can()\n        Gate::before(function ($user, $ability) {\n            if ($user->isSuperAdmin()) {\n                return true;\n            }\n        });\n    }\n}\n","module":"base","path":"/app/Providers/AuthServiceProvider.php"},"/app/Providers/AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n","module":"base","path":"/app/Providers/AppServiceProvider.php"},"/config/auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_reset_tokens',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"/config/auth.php"},"/app/Http/Controllers/Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n","module":"base","path":"/app/Http/Controllers/Controller.php"},"/app/Http/Resources/CategoryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass CategoryResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:119","path":"/app/Http/Resources/CategoryResource.php"},"/app/Http/Resources/CategoryCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass CategoryCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:119","path":"/app/Http/Resources/CategoryCollection.php"},"/app/Http/Resources/ItemResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ItemResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:117","path":"/app/Http/Resources/ItemResource.php"},"/app/Http/Resources/ItemCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ItemCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:117","path":"/app/Http/Resources/ItemCollection.php"},"/app/Http/Resources/VersionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass VersionResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:123","path":"/app/Http/Resources/VersionResource.php"},"/app/Http/Resources/VersionCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass VersionCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:123","path":"/app/Http/Resources/VersionCollection.php"},"/app/Http/Resources/PlatformResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass PlatformResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:120","path":"/app/Http/Resources/PlatformResource.php"},"/app/Http/Resources/PlatformCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass PlatformCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:120","path":"/app/Http/Resources/PlatformCollection.php"},"/app/Http/Resources/TagResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass TagResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:130","path":"/app/Http/Resources/TagResource.php"},"/app/Http/Resources/TagCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass TagCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:130","path":"/app/Http/Resources/TagCollection.php"},"/app/Http/Resources/StackResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass StackResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:133","path":"/app/Http/Resources/StackResource.php"},"/app/Http/Resources/StackCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass StackCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:133","path":"/app/Http/Resources/StackCollection.php"},"/app/Http/Resources/TypeResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass TypeResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:118","path":"/app/Http/Resources/TypeResource.php"},"/app/Http/Resources/TypeCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass TypeCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:118","path":"/app/Http/Resources/TypeCollection.php"},"/app/Http/Resources/UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:116","path":"/app/Http/Resources/UserResource.php"},"/app/Http/Resources/UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:116","path":"/app/Http/Resources/UserCollection.php"},"/app/Http/Resources/VendorResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass VendorResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:121","path":"/app/Http/Resources/VendorResource.php"},"/app/Http/Resources/VendorCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass VendorCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:121","path":"/app/Http/Resources/VendorCollection.php"},"/lang/en/crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'categories' => [\n        'name' => 'Categories',\n        'index_title' => 'Categories List',\n        'new_title' => 'New Category',\n        'create_title' => 'Create Category',\n        'edit_title' => 'Edit Category',\n        'show_title' => 'Show Category',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n        ],\n    ],\n\n    'items' => [\n        'name' => 'Items',\n        'index_title' => 'Items List',\n        'new_title' => 'New Item',\n        'create_title' => 'Create Item',\n        'edit_title' => 'Edit Item',\n        'show_title' => 'Show Item',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n            'vendor_id' => 'Vendor',\n            'type_id' => 'Type',\n            'website' => 'Website',\n            'rating' => 'Rating',\n            'health' => 'Health',\n            'github_url' => 'Github Url',\n            'github_stars' => 'Github Stars',\n            'github_forks' => 'Github Forks',\n            'github_json' => 'Github Json',\n            'packagist_url' => 'Packagist Url',\n            'packagist_name' => 'Packagist Name',\n            'packagist_description' => 'Packagist Description',\n            'packagist_downloads' => 'Packagist Downloads',\n            'packagist_favers' => 'Packagist Favers',\n            'npm_url' => 'Npm Url',\n            'github_maintainers' => 'Github Maintainers',\n        ],\n    ],\n\n    'platforms' => [\n        'name' => 'Platforms',\n        'index_title' => 'Platforms List',\n        'new_title' => 'New Platform',\n        'create_title' => 'Create Platform',\n        'edit_title' => 'Edit Platform',\n        'show_title' => 'Show Platform',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n        ],\n    ],\n\n    'stacks' => [\n        'name' => 'Stacks',\n        'index_title' => 'Stacks List',\n        'new_title' => 'New Stack',\n        'create_title' => 'Create Stack',\n        'edit_title' => 'Edit Stack',\n        'show_title' => 'Show Stack',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n            'public' => 'Public',\n            'major' => 'Major',\n            'user_id' => 'Created By',\n        ],\n    ],\n\n    'tags' => [\n        'name' => 'Tags',\n        'index_title' => 'Tags List',\n        'new_title' => 'New Tag',\n        'create_title' => 'Create Tag',\n        'edit_title' => 'Edit Tag',\n        'show_title' => 'Show Tag',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n        ],\n    ],\n\n    'types' => [\n        'name' => 'Types',\n        'index_title' => 'Types List',\n        'new_title' => 'New Type',\n        'create_title' => 'Create Type',\n        'edit_title' => 'Edit Type',\n        'show_title' => 'Show Type',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'description' => 'Description',\n        ],\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n        ],\n    ],\n\n    'vendors' => [\n        'name' => 'Vendors',\n        'index_title' => 'Vendors List',\n        'new_title' => 'New Vendor',\n        'create_title' => 'Create Vendor',\n        'edit_title' => 'Edit Vendor',\n        'show_title' => 'Show Vendor',\n        'inputs' => [\n            'title' => 'Title',\n            'slug' => 'Slug',\n            'github' => 'Github',\n            'packagist' => 'Packagist',\n            'npm' => 'Npm',\n            'website' => 'Website',\n            'description' => 'Description',\n        ],\n    ],\n\n    'versions' => [\n        'name' => 'Versions',\n        'index_title' => 'Versions List',\n        'new_title' => 'New Version',\n        'create_title' => 'Create Version',\n        'edit_title' => 'Edit Version',\n        'show_title' => 'Show Version',\n        'inputs' => [\n            'version' => 'Version',\n            'item_id' => 'Item',\n        ],\n    ],\n\n    'roles' => [\n        'name' => 'Roles',\n        'index_title' => 'Roles List',\n        'create_title' => 'Create Role',\n        'edit_title' => 'Edit Role',\n        'show_title' => 'Show Role',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n\n    'permissions' => [\n        'name' => 'Permissions',\n        'index_title' => 'Permissions List',\n        'create_title' => 'Create Permission',\n        'edit_title' => 'Edit Permission',\n        'show_title' => 'Show Permission',\n        'inputs' => [\n            'name' => 'Name',\n        ],\n    ],\n];\n","module":"base","path":"/lang/en/crud.php"},"/routes/api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\TagController;\nuse App\\Http\\Controllers\\Api\\ItemController;\nuse App\\Http\\Controllers\\Api\\TypeController;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\RoleController;\nuse App\\Http\\Controllers\\Api\\StackController;\nuse App\\Http\\Controllers\\Api\\VendorController;\nuse App\\Http\\Controllers\\Api\\VersionController;\nuse App\\Http\\Controllers\\Api\\CategoryController;\nuse App\\Http\\Controllers\\Api\\ItemTagsController;\nuse App\\Http\\Controllers\\Api\\PlatformController;\nuse App\\Http\\Controllers\\Api\\TagItemsController;\nuse App\\Http\\Controllers\\Api\\ItemItemsController;\nuse App\\Http\\Controllers\\Api\\TypeItemsController;\nuse App\\Http\\Controllers\\Api\\ItemStacksController;\nuse App\\Http\\Controllers\\Api\\StackItemsController;\nuse App\\Http\\Controllers\\Api\\UserStacksController;\nuse App\\Http\\Controllers\\Api\\PermissionController;\nuse App\\Http\\Controllers\\Api\\VendorItemsController;\nuse App\\Http\\Controllers\\Api\\ItemVersionsController;\nuse App\\Http\\Controllers\\Api\\CategoryItemsController;\nuse App\\Http\\Controllers\\Api\\ItemPlatformsController;\nuse App\\Http\\Controllers\\Api\\PlatformItemsController;\nuse App\\Http\\Controllers\\Api\\ItemCategoriesController;\nuse App\\Http\\Controllers\\Api\\VersionVersionsController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('roles', RoleController::class);\n        Route::apiResource('permissions', PermissionController::class);\n\n        Route::apiResource('categories', CategoryController::class);\n\n        // Category Items\n        Route::get('/categories/{category}/items', [\n            CategoryItemsController::class,\n            'index',\n        ])->name('categories.items.index');\n        Route::post('/categories/{category}/items/{item}', [\n            CategoryItemsController::class,\n            'store',\n        ])->name('categories.items.store');\n        Route::delete('/categories/{category}/items/{item}', [\n            CategoryItemsController::class,\n            'destroy',\n        ])->name('categories.items.destroy');\n\n        Route::apiResource('items', ItemController::class);\n\n        // Item Versions\n        Route::get('/items/{item}/versions', [\n            ItemVersionsController::class,\n            'index',\n        ])->name('items.versions.index');\n        Route::post('/items/{item}/versions', [\n            ItemVersionsController::class,\n            'store',\n        ])->name('items.versions.store');\n\n        // Item Platforms\n        Route::get('/items/{item}/platforms', [\n            ItemPlatformsController::class,\n            'index',\n        ])->name('items.platforms.index');\n        Route::post('/items/{item}/platforms/{platform}', [\n            ItemPlatformsController::class,\n            'store',\n        ])->name('items.platforms.store');\n        Route::delete('/items/{item}/platforms/{platform}', [\n            ItemPlatformsController::class,\n            'destroy',\n        ])->name('items.platforms.destroy');\n\n        // Item Tags\n        Route::get('/items/{item}/tags', [\n            ItemTagsController::class,\n            'index',\n        ])->name('items.tags.index');\n        Route::post('/items/{item}/tags/{tag}', [\n            ItemTagsController::class,\n            'store',\n        ])->name('items.tags.store');\n        Route::delete('/items/{item}/tags/{tag}', [\n            ItemTagsController::class,\n            'destroy',\n        ])->name('items.tags.destroy');\n\n        // Item Categories\n        Route::get('/items/{item}/categories', [\n            ItemCategoriesController::class,\n            'index',\n        ])->name('items.categories.index');\n        Route::post('/items/{item}/categories/{category}', [\n            ItemCategoriesController::class,\n            'store',\n        ])->name('items.categories.store');\n        Route::delete('/items/{item}/categories/{category}', [\n            ItemCategoriesController::class,\n            'destroy',\n        ])->name('items.categories.destroy');\n\n        // Item Stacks\n        Route::get('/items/{item}/stacks', [\n            ItemStacksController::class,\n            'index',\n        ])->name('items.stacks.index');\n        Route::post('/items/{item}/stacks/{stack}', [\n            ItemStacksController::class,\n            'store',\n        ])->name('items.stacks.store');\n        Route::delete('/items/{item}/stacks/{stack}', [\n            ItemStacksController::class,\n            'destroy',\n        ])->name('items.stacks.destroy');\n\n        // Item Dependencies\n        Route::get('/items/{item}/items', [\n            ItemItemsController::class,\n            'index',\n        ])->name('items.items.index');\n        Route::post('/items/{item}/items/{item}', [\n            ItemItemsController::class,\n            'store',\n        ])->name('items.items.store');\n        Route::delete('/items/{item}/items/{item}', [\n            ItemItemsController::class,\n            'destroy',\n        ])->name('items.items.destroy');\n\n        // Item Items\n        Route::get('/items/{item}/items', [\n            ItemItemsController::class,\n            'index',\n        ])->name('items.items.index');\n        Route::post('/items/{item}/items/{item}', [\n            ItemItemsController::class,\n            'store',\n        ])->name('items.items.store');\n        Route::delete('/items/{item}/items/{item}', [\n            ItemItemsController::class,\n            'destroy',\n        ])->name('items.items.destroy');\n\n        Route::apiResource('platforms', PlatformController::class);\n\n        // Platform Items\n        Route::get('/platforms/{platform}/items', [\n            PlatformItemsController::class,\n            'index',\n        ])->name('platforms.items.index');\n        Route::post('/platforms/{platform}/items/{item}', [\n            PlatformItemsController::class,\n            'store',\n        ])->name('platforms.items.store');\n        Route::delete('/platforms/{platform}/items/{item}', [\n            PlatformItemsController::class,\n            'destroy',\n        ])->name('platforms.items.destroy');\n\n        Route::apiResource('stacks', StackController::class);\n\n        // Stack Items\n        Route::get('/stacks/{stack}/items', [\n            StackItemsController::class,\n            'index',\n        ])->name('stacks.items.index');\n        Route::post('/stacks/{stack}/items/{item}', [\n            StackItemsController::class,\n            'store',\n        ])->name('stacks.items.store');\n        Route::delete('/stacks/{stack}/items/{item}', [\n            StackItemsController::class,\n            'destroy',\n        ])->name('stacks.items.destroy');\n\n        Route::apiResource('tags', TagController::class);\n\n        // Tag Items\n        Route::get('/tags/{tag}/items', [\n            TagItemsController::class,\n            'index',\n        ])->name('tags.items.index');\n        Route::post('/tags/{tag}/items/{item}', [\n            TagItemsController::class,\n            'store',\n        ])->name('tags.items.store');\n        Route::delete('/tags/{tag}/items/{item}', [\n            TagItemsController::class,\n            'destroy',\n        ])->name('tags.items.destroy');\n\n        Route::apiResource('types', TypeController::class);\n\n        // Type Items\n        Route::get('/types/{type}/items', [\n            TypeItemsController::class,\n            'index',\n        ])->name('types.items.index');\n        Route::post('/types/{type}/items', [\n            TypeItemsController::class,\n            'store',\n        ])->name('types.items.store');\n\n        Route::apiResource('users', UserController::class);\n\n        // User Stacks\n        Route::get('/users/{user}/stacks', [\n            UserStacksController::class,\n            'index',\n        ])->name('users.stacks.index');\n        Route::post('/users/{user}/stacks', [\n            UserStacksController::class,\n            'store',\n        ])->name('users.stacks.store');\n\n        Route::apiResource('vendors', VendorController::class);\n\n        // Vendor Items\n        Route::get('/vendors/{vendor}/items', [\n            VendorItemsController::class,\n            'index',\n        ])->name('vendors.items.index');\n        Route::post('/vendors/{vendor}/items', [\n            VendorItemsController::class,\n            'store',\n        ])->name('vendors.items.store');\n\n        Route::apiResource('versions', VersionController::class);\n\n        // Version Dependencies\n        Route::get('/versions/{version}/versions', [\n            VersionVersionsController::class,\n            'index',\n        ])->name('versions.versions.index');\n        Route::post('/versions/{version}/versions/{version}', [\n            VersionVersionsController::class,\n            'store',\n        ])->name('versions.versions.store');\n        Route::delete('/versions/{version}/versions/{version}', [\n            VersionVersionsController::class,\n            'destroy',\n        ])->name('versions.versions.destroy');\n\n        // Version Versions\n        Route::get('/versions/{version}/versions', [\n            VersionVersionsController::class,\n            'index',\n        ])->name('versions.versions.index');\n        Route::post('/versions/{version}/versions/{version}', [\n            VersionVersionsController::class,\n            'store',\n        ])->name('versions.versions.store');\n        Route::delete('/versions/{version}/versions/{version}', [\n            VersionVersionsController::class,\n            'destroy',\n        ])->name('versions.versions.destroy');\n    });\n","module":"base","path":"/routes/api.php"},"/routes/web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\TagController;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\ItemController;\nuse App\\Http\\Controllers\\TypeController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\RoleController;\nuse App\\Http\\Controllers\\StackController;\nuse App\\Http\\Controllers\\VendorController;\nuse App\\Http\\Controllers\\VersionController;\nuse App\\Http\\Controllers\\CategoryController;\nuse App\\Http\\Controllers\\PlatformController;\nuse App\\Http\\Controllers\\PermissionController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::middleware(['auth:sanctum', 'verified'])\n    ->get('/dashboard', function () {\n        return view('dashboard');\n    })\n    ->name('dashboard');\n\nRoute::prefix('/')\n    ->middleware(['auth:sanctum', 'verified'])\n    ->group(function () {\n        Route::resource('roles', RoleController::class);\n        Route::resource('permissions', PermissionController::class);\n\n        Route::resource('categories', CategoryController::class);\n        Route::resource('items', ItemController::class);\n        Route::resource('platforms', PlatformController::class);\n        Route::resource('stacks', StackController::class);\n        Route::resource('tags', TagController::class);\n        Route::resource('types', TypeController::class);\n        Route::resource('users', UserController::class);\n        Route::resource('vendors', VendorController::class);\n        Route::resource('versions', VersionController::class);\n    });\n","module":"base","path":"/routes/web.php"},"/resources/views/components/form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action'\n])\n\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\n    <div>\n        <button type=\"submit\" {{ $attributes }}>\n            {{ $slot }}\n        </button>\n    </div>\n</x-form>","module":"base","path":"/resources/views/components/form-button.blade.php"},"/resources/views/components/form.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'method' => 'POST',\n    'action',\n    'hasFiles' => false,\n    'model'\n])\n\n@php\n    $method = strtoupper($method);\n@endphp\n\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\n    @csrf\n    @if (!in_array($method, ['POST', 'GET']))\n        @method($method)\n    @endif\n    {{ $slot }}\n</form>","module":"base","path":"/resources/views/components/form.blade.php"},"/resources/views/components/inputs/basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'type' => 'text',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<input\n    type=\"{{ $type }}\"\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    value=\"{{ old($name, $value ?? '') }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    {{ $min ? \"min={$min}\" : '' }}\n    {{ $max ? \"max={$max}\" : '' }}\n    {{ $step ? \"step={$step}\" : '' }}\n    autocomplete=\"off\"\n>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/basic.blade.php"},"/resources/views/components/inputs/checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'id',\n    'name',\n    'label',\n    'value',\n    'checked' => false,\n    'addHiddenValue' => true,\n    'hiddenValue' => 0,\n])\n\n@php\n    $checked = !! $checked\n@endphp\n\n<div class=\"relative block mb-2\">\n\n    {{-- Adds a hidden default value to be send if checked is false --}}\n    @if($addHiddenValue)\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\n    @endif\n\n    <input\n        type=\"checkbox\"\n        id=\"{{ $id ?? $name }}\"\n        name=\"{{ $name }}\"\n        value=\"{{ $value ?? 1 }}\"\n        {{ $checked ? 'checked' : '' }}\n        {{ $attributes->merge(['class' => '']) }}\n    >\n\n    @if($label ?? null)\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $id ?? $name }}\">\n            {{ $label }}\n        </label>\n    @endif\n</div>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/checkbox.blade.php"},"/resources/views/components/inputs/date.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/date.blade.php"},"/resources/views/components/inputs/datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/datetime.blade.php"},"/resources/views/components/inputs/email.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/email.blade.php"},"/resources/views/components/inputs/group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\n    {{ $slot }}\n</div>","module":"base","path":"/resources/views/components/inputs/group.blade.php"},"/resources/views/components/inputs/hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'value',\n])\n\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/hidden.blade.php"},"/resources/views/components/inputs/number.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n    'min' => null,\n    'max' => null,\n    'step' => null,\n])\n\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/number.blade.php"},"/resources/views/components/inputs/partials/error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>","module":"base","path":"/resources/views/components/inputs/partials/error.blade.php"},"/resources/views/components/inputs/partials/label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\n    {{ $label }}\n</label>","module":"base","path":"/resources/views/components/inputs/partials/label.blade.php"},"/resources/views/components/inputs/password.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value' => '',\n])\n\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/password.blade.php"},"/resources/views/components/inputs/select.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'type' => 'text',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<select\n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{ $slot }}</select>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/select.blade.php"},"/resources/views/components/inputs/text.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/text.blade.php"},"/resources/views/components/inputs/textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n])\n\n@if($label ?? null)\n    @include('components.inputs.partials.label')\n@endif\n\n<textarea \n    id=\"{{ $name }}\"\n    name=\"{{ $name }}\" \n    rows=\"3\"\n    {{ ($required ?? false) ? 'required' : '' }}\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\n    autocomplete=\"off\"\n>{{$slot}}</textarea>\n\n@error($name)\n    @include('components.inputs.partials.error')\n@enderror","module":"base","path":"/resources/views/components/inputs/textarea.blade.php"},"/resources/views/components/inputs/url.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'name',\n    'label',\n    'value',\n])\n\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"/resources/views/components/inputs/url.blade.php"},"/resources/views/components/dropdown-link.blade.php":{"deleteOnGeneration":true,"content":"<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-left text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\n","module":"base","path":"/resources/views/components/dropdown-link.blade.php"},"/resources/views/components/dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white', 'dropdownClasses' => ''])\n\n@php\nswitch ($align) {\n    case 'left':\n        $alignmentClasses = 'origin-top-left left-0';\n        break;\n    case 'top':\n        $alignmentClasses = 'origin-top';\n        break;\n    case 'none':\n    case 'false':\n        $alignmentClasses = '';\n        break;\n    case 'right':\n    default:\n        $alignmentClasses = 'origin-top-right right-0';\n        break;\n}\n\nswitch ($width) {\n    case '48':\n        $width = 'w-48';\n        break;\n}\n@endphp\n\n<div class=\"relative\" x-data=\"{ open: false }\" @click.away=\"open = false\" @close.stop=\"open = false\">\n    <div @click=\"open = ! open\">\n        {{ $trigger }}\n    </div>\n\n    <div x-show=\"open\"\n            x-transition:enter=\"transition ease-out duration-200\"\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\n            x-transition:leave=\"transition ease-in duration-75\"\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }} {{ $dropdownClasses }}\"\n            style=\"display: none;\"\n            @click=\"open = false\">\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\n            {{ $content }}\n        </div>\n    </div>\n</div>\n","module":"base","path":"/resources/views/components/dropdown.blade.php"},"/resources/views/components/modal.blade.php":{"deleteOnGeneration":true,"content":"{{-- This modal modal was copied from Jetstream components --}}\n\n@props(['id', 'maxWidth'])\n\n@php\n$id = $id ?? md5($attributes->wire('model'));\n\n$maxWidth = [\n    'sm' => 'sm:max-w-sm',\n    'md' => 'sm:max-w-md',\n    'lg' => 'sm:max-w-lg',\n    'xl' => 'sm:max-w-xl',\n    '2xl' => 'sm:max-w-2xl',\n][$maxWidth ?? '2xl'];\n@endphp\n\n<div\n    x-data=\"{ show: @entangle($attributes->wire('model')).defer }\"\n    x-on:close.stop=\"show = false\"\n    x-on:keydown.escape.window=\"show = false\"\n    x-show=\"show\"\n    id=\"{{ $id }}\"\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\n    style=\"display: none;\"\n>\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0\"\n                    x-transition:enter-end=\"opacity-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100\"\n                    x-transition:leave-end=\"opacity-0\">\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n    </div>\n\n    <div x-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\n                    x-trap.inert.noscroll=\"show\"\n                    x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\n                    x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n        {{ $slot }}\n    </div>\n</div>\n","module":"base","path":"/resources/views/components/modal.blade.php"},"/resources/views/components/nav-dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'title'\n])\n\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <x-dropdown align=\"right\" width=\"48\">\n        <x-slot name=\"trigger\">\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\n                <div>{{ $title ?? '' }}</div>\n\n                <div class=\"ml-1\">\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n            </button>\n        </x-slot>\n\n        <x-slot name=\"content\">\n            {{ $slot }}\n        </x-slot>\n    </x-dropdown>\n</div>","module":"base","path":"/resources/views/components/nav-dropdown.blade.php"},"/resources/views/components/nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/nav-link.blade.php"},"/resources/views/components/partials/card.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'bodyClasses' => 'flex-auto p-6',\n])\n\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\n    <div class=\"{{ $bodyClasses }}\">\n        \n        @if(isset($title))\n        <h4 class=\"text-lg font-bold mb-3\">\n            {{ $title }}\n        </h4>\n        @endif\n\n        @if(isset($subtitle))\n        <h5 class=\"text-gray-600 text-sm\">\n            {{ $subtitle }}\n        </h5>\n        @endif\n\n        {{ $slot }}\n    </div>\n</div>","module":"base","path":"/resources/views/components/partials/card.blade.php"},"/resources/views/components/partials/thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\n    'src',\n    'size' => 50,\n])\n\n@if($src)\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\n@else\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\n@endif","module":"base","path":"/resources/views/components/partials/thumbnail.blade.php"},"/resources/views/components/responsive-nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\n\n@php\n$classes = ($active ?? false)\n            ? 'block w-full pl-3 pr-4 py-2 border-l-4 border-indigo-400 text-left text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'\n            : 'block w-full pl-3 pr-4 py-2 border-l-4 border-transparent text-left text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\n@endphp\n\n<a {{ $attributes->merge(['class' => $classes]) }}>\n    {{ $slot }}\n</a>\n","module":"base","path":"/resources/views/components/responsive-nav-link.blade.php"},"/resources/css/app.css":{"deleteOnGeneration":true,"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.button {\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\n}\n\n.button:hover {\n    @apply bg-gray-200;\n}\n\n.button:active, .button:focus {\n    @apply bg-gray-300 ring;\n}\n\n.button.button-primary {\n    @apply bg-indigo-500 text-white !important;\n}\n\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\n    @apply bg-indigo-600 !important;\n}\n\n.button.button-primary:disabled {\n    @apply bg-indigo-200 !important;\n}\n\n.button.button-danger {\n    @apply bg-red-500 text-white !important;\n}\n\n.button-danger:hover, .button.button-danger:active, .button.button-danger:focus {\n    @apply bg-red-600 !important;\n}\n\n.button.button-danger:disabled {\n    @apply bg-red-200 !important;\n}","module":"base","path":"/resources/css/app.css"},"/resources/views/layouts/app.blade.php":{"deleteOnGeneration":true,"content":"<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n        \n        <title>Laraverse</title>\n        \n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\n        \n        <!-- Styles -->\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\n        \n        <!-- Icons -->\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\n        \n        <!-- Scripts -->\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\n\n        \n        @livewireStyles\n    </head>\n    <body class=\"font-sans antialiased\">\n        <x-banner />\n\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('navigation-menu')\n        \n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n        \n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n        \n        @livewireScripts\n        \n        @stack('scripts')\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\n        \n        @if (session()->has('success')) \n        <script>\n            var notyf = new Notyf({dismissible: true})\n            notyf.success('{{ session('success') }}')\n        </script> \n        @endif\n        \n        <script>\n            /* Simple Alpine Image Viewer */\n            document.addEventListener('alpine:init', () => {\n                Alpine.data('imageViewer', (src = '') => {\n                    return {\n                        imageUrl: src,\n        \n                        refreshUrl() {\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\n                        },\n        \n                        fileChosen(event) {\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\n                        },\n        \n                        fileToDataUrl(event, callback) {\n                            if (! event.target.files.length) return\n        \n                            let file = event.target.files[0],\n                                reader = new FileReader()\n        \n                            reader.readAsDataURL(file)\n                            reader.onload = e => callback(e.target.result)\n                        },\n                    }\n                })\n            })\n        </script>\n    </body>\n</html>\n","module":"base","path":"/resources/views/layouts/app.blade.php"},"/resources/views/navigation-menu.blade.php":{"deleteOnGeneration":true,"content":"<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\">\n                        <x-application-mark class=\"block h-9 w-auto\" />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\n                    <x-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                        {{ __('Dashboard') }}\n                    </x-nav-link>\n                </div>\n\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\n                        @can('view-any', App\\Models\\Category::class)\n                        <x-dropdown-link href=\"{{ route('categories.index') }}\">\n                        Categories\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Item::class)\n                        <x-dropdown-link href=\"{{ route('items.index') }}\">\n                        Items\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Platform::class)\n                        <x-dropdown-link href=\"{{ route('platforms.index') }}\">\n                        Platforms\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Stack::class)\n                        <x-dropdown-link href=\"{{ route('stacks.index') }}\">\n                        Stacks\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Tag::class)\n                        <x-dropdown-link href=\"{{ route('tags.index') }}\">\n                        Tags\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Type::class)\n                        <x-dropdown-link href=\"{{ route('types.index') }}\">\n                        Types\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\User::class)\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\n                        Users\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Vendor::class)\n                        <x-dropdown-link href=\"{{ route('vendors.index') }}\">\n                        Vendors\n                        </x-dropdown-link>\n                        @endcan\n                        @can('view-any', App\\Models\\Version::class)\n                        <x-dropdown-link href=\"{{ route('versions.index') }}\">\n                        Versions\n                        </x-dropdown-link>\n                        @endcan\n                </x-nav-dropdown>\n\n                    @if (Auth::user()->can('view-any', Spatie\\Permission\\Models\\Role::class) || \n                        Auth::user()->can('view-any', Spatie\\Permission\\Models\\Permission::class))\n                    <x-nav-dropdown title=\"Access Management\" align=\"right\" width=\"48\">\n                        \n                        @can('view-any', Spatie\\Permission\\Models\\Role::class)\n                        <x-dropdown-link href=\"{{ route('roles.index') }}\">Roles</x-dropdown-link>\n                        @endcan\n                    \n                        @can('view-any', Spatie\\Permission\\Models\\Permission::class)\n                        <x-dropdown-link href=\"{{ route('permissions.index') }}\">Permissions</x-dropdown-link>\n                        @endcan\n                        \n                    </x-nav-dropdown>\n                    @endif\n            </div>\n\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                <!-- Teams Dropdown -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"60\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\">\n                                        {{ Auth::user()->currentTeam->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <div class=\"w-60\">\n                                    <!-- Team Management -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Manage Team') }}\n                                    </div>\n\n                                    <!-- Team Settings -->\n                                    <x-dropdown-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\">\n                                        {{ __('Team Settings') }}\n                                    </x-dropdown-link>\n\n                                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                                        <x-dropdown-link href=\"{{ route('teams.create') }}\">\n                                            {{ __('Create New Team') }}\n                                        </x-dropdown-link>\n                                    @endcan\n\n                                    <div class=\"border-t border-gray-100\"></div>\n\n                                    <!-- Team Switcher -->\n                                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                        {{ __('Switch Teams') }}\n                                    </div>\n\n                                    @foreach (Auth::user()->allTeams() as $team)\n                                        <x-switchable-team :team=\"$team\" />\n                                    @endforeach\n                                </div>\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                @endif\n\n                <!-- Settings Dropdown -->\n                <div class=\"ml-3 relative\">\n                    <x-dropdown align=\"right\" width=\"48\">\n                        <x-slot name=\"trigger\">\n                            @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                                <button class=\"flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out\">\n                                    <img class=\"h-8 w-8 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                                </button>\n                            @else\n                                <span class=\"inline-flex rounded-md\">\n                                    <button type=\"button\" class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\">\n                                        {{ Auth::user()->name }}\n\n                                        <svg class=\"ml-2 -mr-0.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </button>\n                                </span>\n                            @endif\n                        </x-slot>\n\n                        <x-slot name=\"content\">\n                            <!-- Account Management -->\n                            <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                                {{ __('Manage Account') }}\n                            </div>\n\n                            <x-dropdown-link href=\"{{ route('profile.show') }}\">\n                                {{ __('Profile') }}\n                            </x-dropdown-link>\n\n                            @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                                <x-dropdown-link href=\"{{ route('api-tokens.index') }}\">\n                                    {{ __('API Tokens') }}\n                                </x-dropdown-link>\n                            @endif\n\n                            <div class=\"border-t border-gray-100\"></div>\n\n                            <!-- Authentication -->\n                            <form method=\"POST\" action=\"{{ route('logout') }}\">\n                                @csrf\n\n                                <x-dropdown-link href=\"{{ route('logout') }}\"\n                                         onclick=\"event.preventDefault();\n                                                this.closest('form').submit();\">\n                                    {{ __('Log Out') }}\n                                </x-dropdown-link>\n                            </form>\n                        </x-slot>\n                    </x-dropdown>\n                </div>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-mr-2 flex items-center sm:hidden\">\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            <x-responsive-nav-link href=\"{{ route('dashboard') }}\" :active=\"request()->routeIs('dashboard')\">\n                {{ __('Dashboard') }}\n            </x-responsive-nav-link>\n            \n                @can('view-any', App\\Models\\Category::class)\n                <x-responsive-nav-link href=\"{{ route('categories.index') }}\">\n                Categories\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Item::class)\n                <x-responsive-nav-link href=\"{{ route('items.index') }}\">\n                Items\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Platform::class)\n                <x-responsive-nav-link href=\"{{ route('platforms.index') }}\">\n                Platforms\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Stack::class)\n                <x-responsive-nav-link href=\"{{ route('stacks.index') }}\">\n                Stacks\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Tag::class)\n                <x-responsive-nav-link href=\"{{ route('tags.index') }}\">\n                Tags\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Type::class)\n                <x-responsive-nav-link href=\"{{ route('types.index') }}\">\n                Types\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\User::class)\n                <x-responsive-nav-link href=\"{{ route('users.index') }}\">\n                Users\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Vendor::class)\n                <x-responsive-nav-link href=\"{{ route('vendors.index') }}\">\n                Vendors\n                </x-responsive-nav-link>\n                @endcan\n                @can('view-any', App\\Models\\Version::class)\n                <x-responsive-nav-link href=\"{{ route('versions.index') }}\">\n                Versions\n                </x-responsive-nav-link>\n                @endcan\n\n                @if (Auth::user()->can('view-any', Spatie\\Permission\\Models\\Role::class) || \n                    Auth::user()->can('view-any', Spatie\\Permission\\Models\\Permission::class))\n                    \n                    @can('view-any', Spatie\\Permission\\Models\\Role::class)\n                    <x-responsive-nav-link href=\"{{ route('roles.index') }}\">Roles</x-responsive-nav-link>\n                    @endcan\n                \n                    @can('view-any', Spatie\\Permission\\Models\\Permission::class)\n                    <x-responsive-nav-link href=\"{{ route('permissions.index') }}\">Permissions</x-responsive-nav-link>\n                    @endcan\n                    \n                @endif\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"flex items-center px-4\">\n                @if (Laravel\\Jetstream\\Jetstream::managesProfilePhotos())\n                    <div class=\"shrink-0 mr-3\">\n                        <img class=\"h-10 w-10 rounded-full object-cover\" src=\"{{ Auth::user()->profile_photo_url }}\" alt=\"{{ Auth::user()->name }}\" />\n                    </div>\n                @endif\n\n                <div>\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <!-- Account Management -->\n                <x-responsive-nav-link href=\"{{ route('profile.show') }}\" :active=\"request()->routeIs('profile.show')\">\n                    {{ __('Profile') }}\n                </x-responsive-nav-link>\n\n                @if (Laravel\\Jetstream\\Jetstream::hasApiFeatures())\n                    <x-responsive-nav-link href=\"{{ route('api-tokens.index') }}\" :active=\"request()->routeIs('api-tokens.index')\">\n                        {{ __('API Tokens') }}\n                    </x-responsive-nav-link>\n                @endif\n\n                <!-- Authentication -->\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\n                    @csrf\n\n                    <x-responsive-nav-link href=\"{{ route('logout') }}\"\n                                   onclick=\"event.preventDefault();\n                                    this.closest('form').submit();\">\n                        {{ __('Log Out') }}\n                    </x-responsive-nav-link>\n                </form>\n\n                <!-- Team Management -->\n                @if (Laravel\\Jetstream\\Jetstream::hasTeamFeatures())\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Manage Team') }}\n                    </div>\n\n                    <!-- Team Settings -->\n                    <x-responsive-nav-link href=\"{{ route('teams.show', Auth::user()->currentTeam->id) }}\" :active=\"request()->routeIs('teams.show')\">\n                        {{ __('Team Settings') }}\n                    </x-responsive-nav-link>\n\n                    @can('create', Laravel\\Jetstream\\Jetstream::newTeamModel())\n                        <x-responsive-nav-link href=\"{{ route('teams.create') }}\" :active=\"request()->routeIs('teams.create')\">\n                            {{ __('Create New Team') }}\n                        </x-responsive-nav-link>\n                    @endcan\n\n                    <div class=\"border-t border-gray-200\"></div>\n\n                    <!-- Team Switcher -->\n                    <div class=\"block px-4 py-2 text-xs text-gray-400\">\n                        {{ __('Switch Teams') }}\n                    </div>\n\n                    @foreach (Auth::user()->allTeams() as $team)\n                        <x-switchable-team :team=\"$team\" component=\"responsive-nav-link\" />\n                    @endforeach\n                @endif\n            </div>\n        </div>\n    </div>\n</nav>","module":"base","path":"/resources/views/navigation-menu.blade.php"},"/database/factories/CategoryFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Category;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CategoryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Category::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:119","path":"/database/factories/CategoryFactory.php"},"/database/factories/ItemFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Item;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ItemFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Item::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'website' => $this->faker->text(255),\n            'rating' => $this->faker->text(255),\n            'health' => $this->faker->text(255),\n            'github_url' => $this->faker->text(255),\n            'github_stars' => $this->faker->randomNumber(0),\n            'github_forks' => $this->faker->randomNumber(0),\n            'github_json' => [],\n            'packagist_url' => $this->faker->text(255),\n            'packagist_name' => $this->faker->text(255),\n            'packagist_description' => $this->faker->text(255),\n            'packagist_downloads' => $this->faker->randomNumber(0),\n            'packagist_favers' => $this->faker->randomNumber(0),\n            'npm_url' => $this->faker->text(255),\n            'github_maintainers' => $this->faker->randomNumber(0),\n            'vendor_id' => \\App\\Models\\Vendor::factory(),\n            'type_id' => \\App\\Models\\Type::factory(),\n        ];\n    }\n}\n","module":"entity:117","path":"/database/factories/ItemFactory.php"},"/database/factories/PlatformFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Platform;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PlatformFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Platform::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:120","path":"/database/factories/PlatformFactory.php"},"/database/factories/StackFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Stack;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass StackFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Stack::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'public' => $this->faker->boolean(),\n            'major' => $this->faker->boolean(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n","module":"entity:133","path":"/database/factories/StackFactory.php"},"/database/factories/TagFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TagFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Tag::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:130","path":"/database/factories/TagFactory.php"},"/database/factories/TypeFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Type;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TypeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Type::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:118","path":"/database/factories/TypeFactory.php"},"/database/factories/UserFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n","module":"entity:116","path":"/database/factories/UserFactory.php"},"/database/factories/VendorFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Vendor;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass VendorFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Vendor::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'github' => $this->faker->text(255),\n            'packagist' => $this->faker->text(255),\n            'npm' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n    }\n}\n","module":"entity:121","path":"/database/factories/VendorFactory.php"},"/database/factories/VersionFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Version;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass VersionFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Version::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'version' => $this->faker->text(255),\n            'item_id' => \\App\\Models\\Item::factory(),\n        ];\n    }\n}\n","module":"entity:123","path":"/database/factories/VersionFactory.php"},"/database/seeders/CategorySeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Category;\nuse Illuminate\\Database\\Seeder;\n\nclass CategorySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Category::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:119","path":"/database/seeders/CategorySeeder.php"},"/database/seeders/ItemSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Item;\nuse Illuminate\\Database\\Seeder;\n\nclass ItemSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Item::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:117","path":"/database/seeders/ItemSeeder.php"},"/database/seeders/PlatformSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Platform;\nuse Illuminate\\Database\\Seeder;\n\nclass PlatformSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Platform::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:120","path":"/database/seeders/PlatformSeeder.php"},"/database/seeders/StackSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Stack;\nuse Illuminate\\Database\\Seeder;\n\nclass StackSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Stack::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:133","path":"/database/seeders/StackSeeder.php"},"/database/seeders/TagSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Database\\Seeder;\n\nclass TagSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Tag::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:130","path":"/database/seeders/TagSeeder.php"},"/database/seeders/TypeSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Type;\nuse Illuminate\\Database\\Seeder;\n\nclass TypeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Type::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:118","path":"/database/seeders/TypeSeeder.php"},"/database/seeders/UserSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:116","path":"/database/seeders/UserSeeder.php"},"/database/seeders/VendorSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Vendor;\nuse Illuminate\\Database\\Seeder;\n\nclass VendorSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Vendor::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:121","path":"/database/seeders/VendorSeeder.php"},"/database/seeders/VersionSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Version;\nuse Illuminate\\Database\\Seeder;\n\nclass VersionSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Version::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:123","path":"/database/seeders/VersionSeeder.php"},"/database/seeders/DatabaseSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n        $this->call(PermissionsSeeder::class);\n\n        $this->call(CategorySeeder::class);\n        $this->call(ItemSeeder::class);\n        $this->call(PlatformSeeder::class);\n        $this->call(StackSeeder::class);\n        $this->call(TagSeeder::class);\n        $this->call(TypeSeeder::class);\n        $this->call(UserSeeder::class);\n        $this->call(VendorSeeder::class);\n        $this->call(VersionSeeder::class);\n    }\n}\n","module":"base","path":"/database/seeders/DatabaseSeeder.php"},"/app/Policies/CategoryPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass CategoryPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the category can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list categories');\n    }\n\n    /**\n     * Determine whether the category can view the model.\n     */\n    public function view(User $user, Category $model): bool\n    {\n        return $user->hasPermissionTo('view categories');\n    }\n\n    /**\n     * Determine whether the category can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create categories');\n    }\n\n    /**\n     * Determine whether the category can update the model.\n     */\n    public function update(User $user, Category $model): bool\n    {\n        return $user->hasPermissionTo('update categories');\n    }\n\n    /**\n     * Determine whether the category can delete the model.\n     */\n    public function delete(User $user, Category $model): bool\n    {\n        return $user->hasPermissionTo('delete categories');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete categories');\n    }\n\n    /**\n     * Determine whether the category can restore the model.\n     */\n    public function restore(User $user, Category $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the category can permanently delete the model.\n     */\n    public function forceDelete(User $user, Category $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:119","path":"/app/Policies/CategoryPolicy.php"},"/app/Policies/ItemPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Item;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ItemPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the item can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list items');\n    }\n\n    /**\n     * Determine whether the item can view the model.\n     */\n    public function view(User $user, Item $model): bool\n    {\n        return $user->hasPermissionTo('view items');\n    }\n\n    /**\n     * Determine whether the item can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create items');\n    }\n\n    /**\n     * Determine whether the item can update the model.\n     */\n    public function update(User $user, Item $model): bool\n    {\n        return $user->hasPermissionTo('update items');\n    }\n\n    /**\n     * Determine whether the item can delete the model.\n     */\n    public function delete(User $user, Item $model): bool\n    {\n        return $user->hasPermissionTo('delete items');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete items');\n    }\n\n    /**\n     * Determine whether the item can restore the model.\n     */\n    public function restore(User $user, Item $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the item can permanently delete the model.\n     */\n    public function forceDelete(User $user, Item $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:117","path":"/app/Policies/ItemPolicy.php"},"/app/Policies/PlatformPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Platform;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass PlatformPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the platform can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list platforms');\n    }\n\n    /**\n     * Determine whether the platform can view the model.\n     */\n    public function view(User $user, Platform $model): bool\n    {\n        return $user->hasPermissionTo('view platforms');\n    }\n\n    /**\n     * Determine whether the platform can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create platforms');\n    }\n\n    /**\n     * Determine whether the platform can update the model.\n     */\n    public function update(User $user, Platform $model): bool\n    {\n        return $user->hasPermissionTo('update platforms');\n    }\n\n    /**\n     * Determine whether the platform can delete the model.\n     */\n    public function delete(User $user, Platform $model): bool\n    {\n        return $user->hasPermissionTo('delete platforms');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete platforms');\n    }\n\n    /**\n     * Determine whether the platform can restore the model.\n     */\n    public function restore(User $user, Platform $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the platform can permanently delete the model.\n     */\n    public function forceDelete(User $user, Platform $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:120","path":"/app/Policies/PlatformPolicy.php"},"/app/Policies/StackPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Stack;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass StackPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the stack can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list stacks');\n    }\n\n    /**\n     * Determine whether the stack can view the model.\n     */\n    public function view(User $user, Stack $model): bool\n    {\n        return $user->hasPermissionTo('view stacks');\n    }\n\n    /**\n     * Determine whether the stack can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create stacks');\n    }\n\n    /**\n     * Determine whether the stack can update the model.\n     */\n    public function update(User $user, Stack $model): bool\n    {\n        return $user->hasPermissionTo('update stacks');\n    }\n\n    /**\n     * Determine whether the stack can delete the model.\n     */\n    public function delete(User $user, Stack $model): bool\n    {\n        return $user->hasPermissionTo('delete stacks');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete stacks');\n    }\n\n    /**\n     * Determine whether the stack can restore the model.\n     */\n    public function restore(User $user, Stack $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the stack can permanently delete the model.\n     */\n    public function forceDelete(User $user, Stack $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:133","path":"/app/Policies/StackPolicy.php"},"/app/Policies/TagPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass TagPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the tag can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list tags');\n    }\n\n    /**\n     * Determine whether the tag can view the model.\n     */\n    public function view(User $user, Tag $model): bool\n    {\n        return $user->hasPermissionTo('view tags');\n    }\n\n    /**\n     * Determine whether the tag can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create tags');\n    }\n\n    /**\n     * Determine whether the tag can update the model.\n     */\n    public function update(User $user, Tag $model): bool\n    {\n        return $user->hasPermissionTo('update tags');\n    }\n\n    /**\n     * Determine whether the tag can delete the model.\n     */\n    public function delete(User $user, Tag $model): bool\n    {\n        return $user->hasPermissionTo('delete tags');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete tags');\n    }\n\n    /**\n     * Determine whether the tag can restore the model.\n     */\n    public function restore(User $user, Tag $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the tag can permanently delete the model.\n     */\n    public function forceDelete(User $user, Tag $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:130","path":"/app/Policies/TagPolicy.php"},"/app/Policies/TypePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Type;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass TypePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the type can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list types');\n    }\n\n    /**\n     * Determine whether the type can view the model.\n     */\n    public function view(User $user, Type $model): bool\n    {\n        return $user->hasPermissionTo('view types');\n    }\n\n    /**\n     * Determine whether the type can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create types');\n    }\n\n    /**\n     * Determine whether the type can update the model.\n     */\n    public function update(User $user, Type $model): bool\n    {\n        return $user->hasPermissionTo('update types');\n    }\n\n    /**\n     * Determine whether the type can delete the model.\n     */\n    public function delete(User $user, Type $model): bool\n    {\n        return $user->hasPermissionTo('delete types');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete types');\n    }\n\n    /**\n     * Determine whether the type can restore the model.\n     */\n    public function restore(User $user, Type $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the type can permanently delete the model.\n     */\n    public function forceDelete(User $user, Type $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:118","path":"/app/Policies/TypePolicy.php"},"/app/Policies/UserPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list users');\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('view users');\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create users');\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('update users');\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete users');\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:116","path":"/app/Policies/UserPolicy.php"},"/app/Policies/VendorPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Vendor;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass VendorPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the vendor can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list vendors');\n    }\n\n    /**\n     * Determine whether the vendor can view the model.\n     */\n    public function view(User $user, Vendor $model): bool\n    {\n        return $user->hasPermissionTo('view vendors');\n    }\n\n    /**\n     * Determine whether the vendor can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create vendors');\n    }\n\n    /**\n     * Determine whether the vendor can update the model.\n     */\n    public function update(User $user, Vendor $model): bool\n    {\n        return $user->hasPermissionTo('update vendors');\n    }\n\n    /**\n     * Determine whether the vendor can delete the model.\n     */\n    public function delete(User $user, Vendor $model): bool\n    {\n        return $user->hasPermissionTo('delete vendors');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete vendors');\n    }\n\n    /**\n     * Determine whether the vendor can restore the model.\n     */\n    public function restore(User $user, Vendor $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the vendor can permanently delete the model.\n     */\n    public function forceDelete(User $user, Vendor $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:121","path":"/app/Policies/VendorPolicy.php"},"/app/Policies/VersionPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Version;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass VersionPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the version can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->hasPermissionTo('list versions');\n    }\n\n    /**\n     * Determine whether the version can view the model.\n     */\n    public function view(User $user, Version $model): bool\n    {\n        return $user->hasPermissionTo('view versions');\n    }\n\n    /**\n     * Determine whether the version can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->hasPermissionTo('create versions');\n    }\n\n    /**\n     * Determine whether the version can update the model.\n     */\n    public function update(User $user, Version $model): bool\n    {\n        return $user->hasPermissionTo('update versions');\n    }\n\n    /**\n     * Determine whether the version can delete the model.\n     */\n    public function delete(User $user, Version $model): bool\n    {\n        return $user->hasPermissionTo('delete versions');\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->hasPermissionTo('delete versions');\n    }\n\n    /**\n     * Determine whether the version can restore the model.\n     */\n    public function restore(User $user, Version $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the version can permanently delete the model.\n     */\n    public function forceDelete(User $user, Version $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:123","path":"/app/Policies/VersionPolicy.php"},"/database/migrations/2023_08_03_000001_create_categories_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('categories', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('categories');\n    }\n};\n","module":"entity:119","path":"/database/migrations/2023_08_03_000001_create_categories_table.php"},"/database/migrations/2023_08_03_000002_create_category_item_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('category_item', function (Blueprint $table) {\n            $table->unsignedBigInteger('item_id');\n            $table->unsignedBigInteger('category_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('category_item');\n    }\n};\n","module":"entity:132","path":"/database/migrations/2023_08_03_000002_create_category_item_table.php"},"/database/migrations/2023_08_03_000003_create_items_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('items', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n            $table->unsignedBigInteger('vendor_id');\n            $table->unsignedBigInteger('type_id');\n            $table->string('website');\n            $table->string('rating');\n            $table->string('health');\n            $table->string('github_url');\n            $table->integer('github_stars');\n            $table->integer('github_forks');\n            $table->json('github_json');\n            $table->string('packagist_url');\n            $table->string('packagist_name');\n            $table->string('packagist_description');\n            $table->integer('packagist_downloads');\n            $table->integer('packagist_favers');\n            $table->string('npm_url');\n            $table->integer('github_maintainers');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('items');\n    }\n};\n","module":"entity:117","path":"/database/migrations/2023_08_03_000003_create_items_table.php"},"/database/migrations/2023_08_03_000004_create_item_item_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('item_item', function (Blueprint $table) {\n            $table->unsignedBigInteger('dep_item_id');\n            $table->unsignedBigInteger('item_id');\n            $table->boolean('composer_require')->nullable();\n            $table->boolean('composer_require_dev')->nullable();\n            $table->boolean('composer_conflict')->nullable();\n            $table->boolean('composer_replace')->nullable();\n            $table->boolean('composer_provide')->nullable();\n            $table->boolean('composer_suggest')->nullable();\n            $table->boolean('npm_dependency')->nullable();\n            $table->boolean('npm_dev_dependendy')->nullable();\n            $table->boolean('npm_peer_dependency')->nullable();\n            $table->boolean('other_dependency');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('item_item');\n    }\n};\n","module":"entity:135","path":"/database/migrations/2023_08_03_000004_create_item_item_table.php"},"/database/migrations/2023_08_03_000005_create_item_platform_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('item_platform', function (Blueprint $table) {\n            $table->unsignedBigInteger('platform_id');\n            $table->unsignedBigInteger('item_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('item_platform');\n    }\n};\n","module":"entity:128","path":"/database/migrations/2023_08_03_000005_create_item_platform_table.php"},"/database/migrations/2023_08_03_000006_create_item_stack_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('item_stack', function (Blueprint $table) {\n            $table->unsignedBigInteger('stack_id');\n            $table->unsignedBigInteger('item_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('item_stack');\n    }\n};\n","module":"entity:134","path":"/database/migrations/2023_08_03_000006_create_item_stack_table.php"},"/database/migrations/2023_08_03_000007_create_item_tag_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('item_tag', function (Blueprint $table) {\n            $table->unsignedBigInteger('tag_id');\n            $table->unsignedBigInteger('item_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('item_tag');\n    }\n};\n","module":"entity:131","path":"/database/migrations/2023_08_03_000007_create_item_tag_table.php"},"/database/migrations/2023_08_03_000008_create_platforms_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('platforms', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('platforms');\n    }\n};\n","module":"entity:120","path":"/database/migrations/2023_08_03_000008_create_platforms_table.php"},"/database/migrations/2023_08_03_000009_create_stacks_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('stacks', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n            $table->boolean('public');\n            $table->boolean('major');\n            $table->unsignedBigInteger('user_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('stacks');\n    }\n};\n","module":"entity:133","path":"/database/migrations/2023_08_03_000009_create_stacks_table.php"},"/database/migrations/2023_08_03_000010_create_tags_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('tags', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('tags');\n    }\n};\n","module":"entity:130","path":"/database/migrations/2023_08_03_000010_create_tags_table.php"},"/database/migrations/2023_08_03_000011_create_types_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('types', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('types');\n    }\n};\n","module":"entity:118","path":"/database/migrations/2023_08_03_000011_create_types_table.php"},"/database/migrations/2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n","module":"entity:116","path":"/database/migrations/2014_10_12_000000_create_users_table.php"},"/database/migrations/2023_08_03_000012_create_vendors_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('vendors', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title');\n            $table->string('slug');\n            $table->string('github');\n            $table->string('packagist');\n            $table->string('npm');\n            $table->string('website');\n            $table->text('description');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('vendors');\n    }\n};\n","module":"entity:121","path":"/database/migrations/2023_08_03_000012_create_vendors_table.php"},"/database/migrations/2023_08_03_000013_create_versions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('versions', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('version');\n            $table->unsignedBigInteger('item_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('versions');\n    }\n};\n","module":"entity:123","path":"/database/migrations/2023_08_03_000013_create_versions_table.php"},"/database/migrations/2023_08_03_000014_create_version_version_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('version_version', function (Blueprint $table) {\n            $table->unsignedBigInteger('version_id');\n            $table->unsignedBigInteger('dep_version_id');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('version_version');\n    }\n};\n","module":"entity:126","path":"/database/migrations/2023_08_03_000014_create_version_version_table.php"},"/database/migrations/2023_08_03_009001_add_foreigns_to_category_item_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('category_item', function (Blueprint $table) {\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('category_id')\n                ->references('id')\n                ->on('categories')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('category_item', function (Blueprint $table) {\n            $table->dropForeign(['item_id']);\n            $table->dropForeign(['category_id']);\n        });\n    }\n};\n","module":"entity:132|entity:117|entity:119","path":"/database/migrations/2023_08_03_009001_add_foreigns_to_category_item_table.php"},"/database/migrations/2023_08_03_009002_add_foreigns_to_items_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('items', function (Blueprint $table) {\n            $table\n                ->foreign('vendor_id')\n                ->references('id')\n                ->on('vendors')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('type_id')\n                ->references('id')\n                ->on('types')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('items', function (Blueprint $table) {\n            $table->dropForeign(['vendor_id']);\n            $table->dropForeign(['type_id']);\n        });\n    }\n};\n","module":"entity:117|entity:121|entity:118","path":"/database/migrations/2023_08_03_009002_add_foreigns_to_items_table.php"},"/database/migrations/2023_08_03_009003_add_foreigns_to_item_item_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('item_item', function (Blueprint $table) {\n            $table\n                ->foreign('dep_item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('item_item', function (Blueprint $table) {\n            $table->dropForeign(['dep_item_id']);\n            $table->dropForeign(['item_id']);\n        });\n    }\n};\n","module":"entity:135|entity:117|entity:117","path":"/database/migrations/2023_08_03_009003_add_foreigns_to_item_item_table.php"},"/database/migrations/2023_08_03_009004_add_foreigns_to_item_platform_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('item_platform', function (Blueprint $table) {\n            $table\n                ->foreign('platform_id')\n                ->references('id')\n                ->on('platforms')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('item_platform', function (Blueprint $table) {\n            $table->dropForeign(['platform_id']);\n            $table->dropForeign(['item_id']);\n        });\n    }\n};\n","module":"entity:128|entity:120|entity:117","path":"/database/migrations/2023_08_03_009004_add_foreigns_to_item_platform_table.php"},"/database/migrations/2023_08_03_009005_add_foreigns_to_item_stack_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('item_stack', function (Blueprint $table) {\n            $table\n                ->foreign('stack_id')\n                ->references('id')\n                ->on('stacks')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('item_stack', function (Blueprint $table) {\n            $table->dropForeign(['stack_id']);\n            $table->dropForeign(['item_id']);\n        });\n    }\n};\n","module":"entity:134|entity:133|entity:117","path":"/database/migrations/2023_08_03_009005_add_foreigns_to_item_stack_table.php"},"/database/migrations/2023_08_03_009006_add_foreigns_to_item_tag_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('item_tag', function (Blueprint $table) {\n            $table\n                ->foreign('tag_id')\n                ->references('id')\n                ->on('tags')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('item_tag', function (Blueprint $table) {\n            $table->dropForeign(['tag_id']);\n            $table->dropForeign(['item_id']);\n        });\n    }\n};\n","module":"entity:131|entity:130|entity:117","path":"/database/migrations/2023_08_03_009006_add_foreigns_to_item_tag_table.php"},"/database/migrations/2023_08_03_009007_add_foreigns_to_stacks_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('stacks', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('stacks', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n        });\n    }\n};\n","module":"entity:133|entity:116","path":"/database/migrations/2023_08_03_009007_add_foreigns_to_stacks_table.php"},"/database/migrations/2023_08_03_009008_add_foreigns_to_versions_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('versions', function (Blueprint $table) {\n            $table\n                ->foreign('item_id')\n                ->references('id')\n                ->on('items')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('versions', function (Blueprint $table) {\n            $table->dropForeign(['item_id']);\n        });\n    }\n};\n","module":"entity:123|entity:117","path":"/database/migrations/2023_08_03_009008_add_foreigns_to_versions_table.php"},"/database/migrations/2023_08_03_009009_add_foreigns_to_version_version_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('version_version', function (Blueprint $table) {\n            $table\n                ->foreign('version_id')\n                ->references('id')\n                ->on('versions')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('dep_version_id')\n                ->references('id')\n                ->on('versions')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('version_version', function (Blueprint $table) {\n            $table->dropForeign(['version_id']);\n            $table->dropForeign(['dep_version_id']);\n        });\n    }\n};\n","module":"entity:126|entity:123|entity:123","path":"/database/migrations/2023_08_03_009009_add_foreigns_to_version_version_table.php"},"/app/Models/Category.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Category extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['title', 'slug', 'description'];\n\n    protected $searchableFields = ['*'];\n\n    public function items()\n    {\n        return $this->belongsToMany(Item::class);\n    }\n}\n","module":"entity:119","path":"/app/Models/Category.php"},"/app/Models/Item.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Item extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'title',\n        'slug',\n        'description',\n        'vendor_id',\n        'type_id',\n        'website',\n        'rating',\n        'health',\n        'github_url',\n        'github_stars',\n        'github_forks',\n        'github_json',\n        'packagist_url',\n        'packagist_name',\n        'packagist_description',\n        'packagist_downloads',\n        'packagist_favers',\n        'npm_url',\n        'github_maintainers',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'github_json' => 'array',\n    ];\n\n    public function versions()\n    {\n        return $this->hasMany(Version::class);\n    }\n\n    public function vendor()\n    {\n        return $this->belongsTo(Vendor::class);\n    }\n\n    public function type()\n    {\n        return $this->belongsTo(Type::class);\n    }\n\n    public function platforms()\n    {\n        return $this->belongsToMany(Platform::class);\n    }\n\n    public function tags()\n    {\n        return $this->belongsToMany(Tag::class);\n    }\n\n    public function categories()\n    {\n        return $this->belongsToMany(Category::class);\n    }\n\n    public function stacks()\n    {\n        return $this->belongsToMany(Stack::class);\n    }\n\n    public function dependencies()\n    {\n        return $this->belongsToMany(\n            Item::class,\n            'item_item',\n            'item_id',\n            'dep_item_id'\n        );\n    }\n\n    public function items()\n    {\n        return $this->belongsToMany(Item::class, 'item_item', 'dep_item_id');\n    }\n}\n","module":"entity:117","path":"/app/Models/Item.php"},"/app/Models/Platform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Platform extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['title', 'slug', 'description'];\n\n    protected $searchableFields = ['*'];\n\n    public function items()\n    {\n        return $this->belongsToMany(Item::class);\n    }\n}\n","module":"entity:120","path":"/app/Models/Platform.php"},"/app/Models/Stack.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Stack extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'title',\n        'slug',\n        'description',\n        'public',\n        'major',\n        'user_id',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'public' => 'boolean',\n        'major' => 'boolean',\n    ];\n\n    public function created_by()\n    {\n        return $this->belongsTo(User::class, 'user_id');\n    }\n\n    public function items()\n    {\n        return $this->belongsToMany(Item::class);\n    }\n}\n","module":"entity:133","path":"/app/Models/Stack.php"},"/app/Models/Tag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Tag extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['title', 'slug', 'description'];\n\n    protected $searchableFields = ['*'];\n\n    public function items()\n    {\n        return $this->belongsToMany(Item::class);\n    }\n}\n","module":"entity:130","path":"/app/Models/Tag.php"},"/app/Models/Type.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Type extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['title', 'slug', 'description'];\n\n    protected $searchableFields = ['*'];\n\n    public function items()\n    {\n        return $this->hasMany(Item::class);\n    }\n}\n","module":"entity:118","path":"/app/Models/Type.php"},"app/Models/Traits/FilamentTrait.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Traits;\n\ntrait FilamentTrait\n{\n    /*\n     * Returns whether the user is allowed to access Filament\n     */\n    public function canAccessFilament(): bool\n    {\n        return $this->isSuperAdmin();\n    }\n}\n","module":"plugin:app.vemto.filament","path":"app/Models/Traits/FilamentTrait.php"},"/app/Models/User.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse Spatie\\Permission\\Traits\\HasRoles;\nuse Laravel\\Jetstream\\HasProfilePhoto;\nuse Illuminate\\Notifications\\Notifiable;\nuse Laravel\\Fortify\\TwoFactorAuthenticatable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use HasRoles;\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n    use HasProfilePhoto;\n    use TwoFactorAuthenticatable;\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = ['password', 'remember_token'];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n\n    public function stacks()\n    {\n        return $this->hasMany(Stack::class);\n    }\n\n    public function isSuperAdmin(): bool\n    {\n        return $this->hasRole('super-admin');\n    }\n}\n","module":"entity:116","path":"/app/Models/User.php"},"/app/Models/Vendor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Vendor extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = [\n        'title',\n        'slug',\n        'github',\n        'packagist',\n        'npm',\n        'website',\n        'description',\n    ];\n\n    protected $searchableFields = ['*'];\n\n    public function items()\n    {\n        return $this->hasMany(Item::class);\n    }\n}\n","module":"entity:121","path":"/app/Models/Vendor.php"},"/app/Models/Version.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Version extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['version', 'item_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function item()\n    {\n        return $this->belongsTo(Item::class);\n    }\n\n    public function dependencies()\n    {\n        return $this->belongsToMany(\n            Version::class,\n            'version_version',\n            'dep_version_id'\n        );\n    }\n\n    public function versions()\n    {\n        return $this->belongsToMany(\n            Version::class,\n            'version_version',\n            'version_id',\n            'dep_version_id'\n        );\n    }\n}\n","module":"entity:123","path":"/app/Models/Version.php"},"/app/Models/Scopes/Searchable.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Scopes;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     */\n    public function scopeSearchLatestPaginated(\n        Builder $query,\n        string $search,\n        int $paginationQuantity = 10\n    ): Builder {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     */\n    public function scopeSearch(Builder $query, string $search): Builder\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     */\n    protected function getSearchableFields(): array\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     */\n    protected function getAllModelTableFields(): array\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n","module":"base","path":"/app/Models/Scopes/Searchable.php"},"/app/Http/Controllers/Api/AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"/app/Http/Controllers/Api/AuthController.php"},"/database/seeders/PermissionsSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Spatie\\Permission\\Models\\Role;\nuse Spatie\\Permission\\Models\\Permission;\nuse Spatie\\Permission\\PermissionRegistrar;\n\nclass PermissionsSeeder extends Seeder\n{\n    public function run(): void\n    {\n        // Reset cached roles and permissions\n        app()[PermissionRegistrar::class]->forgetCachedPermissions();\n\n        // Create default permissions\n        Permission::create(['name' => 'list categories']);\n        Permission::create(['name' => 'view categories']);\n        Permission::create(['name' => 'create categories']);\n        Permission::create(['name' => 'update categories']);\n        Permission::create(['name' => 'delete categories']);\n\n        Permission::create(['name' => 'list items']);\n        Permission::create(['name' => 'view items']);\n        Permission::create(['name' => 'create items']);\n        Permission::create(['name' => 'update items']);\n        Permission::create(['name' => 'delete items']);\n\n        Permission::create(['name' => 'list platforms']);\n        Permission::create(['name' => 'view platforms']);\n        Permission::create(['name' => 'create platforms']);\n        Permission::create(['name' => 'update platforms']);\n        Permission::create(['name' => 'delete platforms']);\n\n        Permission::create(['name' => 'list stacks']);\n        Permission::create(['name' => 'view stacks']);\n        Permission::create(['name' => 'create stacks']);\n        Permission::create(['name' => 'update stacks']);\n        Permission::create(['name' => 'delete stacks']);\n\n        Permission::create(['name' => 'list tags']);\n        Permission::create(['name' => 'view tags']);\n        Permission::create(['name' => 'create tags']);\n        Permission::create(['name' => 'update tags']);\n        Permission::create(['name' => 'delete tags']);\n\n        Permission::create(['name' => 'list types']);\n        Permission::create(['name' => 'view types']);\n        Permission::create(['name' => 'create types']);\n        Permission::create(['name' => 'update types']);\n        Permission::create(['name' => 'delete types']);\n\n        Permission::create(['name' => 'list vendors']);\n        Permission::create(['name' => 'view vendors']);\n        Permission::create(['name' => 'create vendors']);\n        Permission::create(['name' => 'update vendors']);\n        Permission::create(['name' => 'delete vendors']);\n\n        Permission::create(['name' => 'list versions']);\n        Permission::create(['name' => 'view versions']);\n        Permission::create(['name' => 'create versions']);\n        Permission::create(['name' => 'update versions']);\n        Permission::create(['name' => 'delete versions']);\n\n        // Create user role and assign existing permissions\n        $currentPermissions = Permission::all();\n        $userRole = Role::create(['name' => 'user']);\n        $userRole->givePermissionTo($currentPermissions);\n\n        // Create admin exclusive permissions\n        Permission::create(['name' => 'list roles']);\n        Permission::create(['name' => 'view roles']);\n        Permission::create(['name' => 'create roles']);\n        Permission::create(['name' => 'update roles']);\n        Permission::create(['name' => 'delete roles']);\n\n        Permission::create(['name' => 'list permissions']);\n        Permission::create(['name' => 'view permissions']);\n        Permission::create(['name' => 'create permissions']);\n        Permission::create(['name' => 'update permissions']);\n        Permission::create(['name' => 'delete permissions']);\n\n        Permission::create(['name' => 'list users']);\n        Permission::create(['name' => 'view users']);\n        Permission::create(['name' => 'create users']);\n        Permission::create(['name' => 'update users']);\n        Permission::create(['name' => 'delete users']);\n\n        // Create admin role and assign all permissions\n        $allPermissions = Permission::all();\n        $adminRole = Role::create(['name' => 'super-admin']);\n        $adminRole->givePermissionTo($allPermissions);\n\n        $user = \\App\\Models\\User::whereEmail('admin@admin.com')->first();\n\n        if ($user) {\n            $user->assignRole($adminRole);\n        }\n    }\n}\n","module":"permissions","path":"/database/seeders/PermissionsSeeder.php"},"/app/Http/Controllers/RoleController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Laravel\\Sanctum\\Sanctum;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Http\\RedirectResponse;\nuse Spatie\\Permission\\Models\\Permission;\n\nclass RoleController extends Controller {\n\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('list', Role::class);\n\n        $search = $request->get('search', '');\n        $roles = Role::where('name', 'like', \"%{$search}%\")->paginate(10);\n\n        return view('app.roles.index')\n            ->with('roles', $roles)\n            ->with('search', $search);\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(): View\n    {\n        $this->authorize('create', Role::class);\n\n        $permissions = Permission::all();\n\n        return view('app.roles.create')->with('permissions', $permissions);\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request): RedirectResponse\n    {\n        Sanctum::actingAs(request()->user(), [], 'web');\n\n        $this->authorize('create', Role::class);\n\n        $data = $this->validate($request, [\n            'name' => 'required|unique:roles|max:32',\n            'permissions' => 'array',\n        ]);\n\n        $role = Role::create($data);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return redirect()\n            ->route('roles.edit', $role->id)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Role $role): View\n    {\n        $this->authorize('view', Role::class);\n\n        return view('app.roles.show')->with('role', $role);\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Role $role): View\n    {\n        $this->authorize('update', $role);\n\n        $permissions = Permission::all();\n\n        return view('app.roles.edit')\n            ->with('role', $role)\n            ->with('permissions', $permissions);\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, Role $role): RedirectResponse\n    {\n        $this->authorize('update', $role);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:32|unique:roles,name,'.$role->id,\n            'permissions' => 'array',\n        ]);\n        \n        $role->update($data);\n\n        $permissions = Permission::find($request->permissions);\n        $role->syncPermissions($permissions);\n\n        return redirect()\n            ->route('roles.edit', $role->id)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Role $role): RedirectResponse\n    {\n        $this->authorize('delete', $role);\n\n        $role->delete();\n\n        return redirect()\n            ->route('roles.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}","module":"permissions","path":"/app/Http/Controllers/RoleController.php"},"/app/Http/Controllers/PermissionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Laravel\\Sanctum\\Sanctum;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Http\\RedirectResponse;\nuse Spatie\\Permission\\Models\\Permission;\n\nclass PermissionController extends Controller\n{\n    /**\n    * Display a listing of the resource.\n    */\n    public function index(Request $request): View\n    {\n        $this->authorize('list', Permission::class);\n\n        $search = $request->get('search', '');\n        $permissions = Permission::where('name', 'like', \"%{$search}%\")->paginate(10);\n\n        return view('app.permissions.index')\n            ->with('permissions', $permissions)\n            ->with('search', $search);\n    }\n\n    /**\n    * Show the form for creating a new resource.\n    */\n    public function create(): View\n    {\n        $this->authorize('create', Permission::class);\n\n        $roles = Role::all();\n        return view('app.permissions.create')->with('roles', $roles);\n    }\n\n    /**\n    * Store a newly created resource in storage.\n    */\n    public function store(Request $request): RedirectResponse\n    {\n        Sanctum::actingAs(request()->user(), [], 'web');\n\n        $this->authorize('create', Permission::class);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:64',\n            'roles' => 'array'\n        ]);\n\n        $permission = Permission::create($data);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return redirect()\n            ->route('permissions.edit', $permission->id)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n    * Display the specified resource.\n    */\n    public function show(Permission $permission): View\n    {\n        $this->authorize('view', Permission::class);\n\n        return view('app.permissions.show')->with('permission', $permission);\n    }\n\n    /**\n    * Show the form for editing the specified resource.\n    */\n    public function edit(Permission $permission): View\n    {\n        $this->authorize('update', $permission);\n\n        $roles = Role::get();\n\n        return view('app.permissions.edit')\n            ->with('permission', $permission)\n            ->with('roles', $roles);\n    }\n\n    /**\n    * Update the specified resource in storage.\n    */\n    public function update(Request $request, Permission $permission): RedirectResponse\n    {\n        $this->authorize('update', $permission);\n\n        $data = $this->validate($request, [\n            'name' => 'required|max:40',\n            'roles' => 'array'\n        ]);\n\n        $permission->update($data);\n        \n        $roles = Role::find($request->roles);\n        $permission->syncRoles($roles);\n\n        return redirect()\n            ->route('permissions.edit', $permission->id)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n    * Remove the specified resource from storage.\n    */\n    public function destroy(Permission $permission): RedirectResponse\n    {\n        $this->authorize('delete', $permission);\n\n        $permission->delete();\n\n        return redirect()\n            ->route('permissions.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"permissions","path":"/app/Http/Controllers/PermissionController.php"},"/tests/Feature/Controllers/RoleControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse Spatie\\Permission\\Models\\Role;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass RoleControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\n        \n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_roles(): void\n    {\n        $response = $this->get(route('roles.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.index')\n            ->assertViewHas('roles');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_role(): void\n    {\n        $response = $this->get(route('roles.create'));\n\n        $response->assertOk()->assertViewIs('app.roles.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_role(): void\n    {\n        $response = $this->post(route('roles.store'), [\n            'name' => 'secretary',\n            'permissions' => []\n        ]);\n\n        $this->assertDatabaseHas('roles', ['name' => 'secretary']);\n\n        $role = Role::latest('id')->first();\n\n        $response->assertRedirect(route('roles.edit', $role));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_role(): void\n    {\n        $role = Role::first();\n\n        $response = $this->get(route('roles.show', $role));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.show')\n            ->assertViewHas('role');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_role(): void\n    {\n        $role = Role::first();\n\n        $response = $this->get(route('roles.edit', $role));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.roles.edit')\n            ->assertViewHas('role');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_role(): void\n    {\n        $role = Role::first();\n\n        $data = [\n            'name' => 'manager',\n            'permissions' => [],\n        ];\n\n        $response = $this->put(route('roles.update', $role), $data);\n\n        $this->assertDatabaseHas('roles', [\n            'id' => $role->id,\n            'name' => 'manager'\n        ]);\n\n        $response->assertRedirect(route('roles.edit', $role));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_role(): void\n    {\n        $role = Role::first();\n\n        $response = $this->delete(route('roles.destroy', $role));\n\n        $response->assertRedirect(route('roles.index'));\n        \n        $this->assertModelMissing($role);\n    }\n}\n","module":"permissions","path":"/tests/Feature/Controllers/RoleControllerTest.php"},"/tests/Feature/Controllers/PermissionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse Spatie\\Permission\\Models\\Permission;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PermissionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(User::factory()->create(['email' => 'admin@admin.com']));\n        \n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_permissions(): void\n    {\n        $response = $this->get(route('permissions.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.index')\n            ->assertViewHas('permissions');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_permission(): void\n    {\n        $response = $this->get(route('permissions.create'));\n\n        $response->assertOk()->assertViewIs('app.permissions.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_permission(): void\n    {\n        $response = $this->post(route('permissions.store'), [\n            'name' => 'list secretaries',\n            'roles' => []\n        ]);\n\n        $this->assertDatabaseHas('permissions', ['name' => 'list secretaries']);\n\n        $permission = Permission::latest('id')->first();\n\n        $response->assertRedirect(route('permissions.edit', $permission));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_permission(): void\n    {\n        $permission = Permission::first();\n\n        $response = $this->get(route('permissions.show', $permission));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.show')\n            ->assertViewHas('permission');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_permission(): void\n    {\n        $permission = Permission::first();\n\n        $response = $this->get(route('permissions.edit', $permission));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.permissions.edit')\n            ->assertViewHas('permission');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_permission(): void\n    {\n        $permission = Permission::first();\n\n        $data = [\n            'name' => 'list managers',\n            'roles' => [],\n        ];\n\n        $response = $this->put(route('permissions.update', $permission), $data);\n\n        $this->assertDatabaseHas('permissions', [\n            'id' => $permission->id,\n            'name' => 'list managers'\n        ]);\n\n        $response->assertRedirect(route('permissions.edit', $permission));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_permission(): void\n    {\n        $permission = Permission::first();\n\n        $response = $this->delete(route('permissions.destroy', $permission));\n\n        $response->assertRedirect(route('permissions.index'));\n        \n        $this->assertModelMissing($permission);\n    }\n}\n","module":"permissions","path":"/tests/Feature/Controllers/PermissionControllerTest.php"},"/resources/views/app/roles/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('roles.update', $role) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.roles.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('roles.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/edit.blade.php"},"/resources/views/app/roles/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Role::class)\n                            <a\n                                href=\"{{ route('roles.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.roles.inputs.name')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($roles as $role)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $role->name ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $role)\n                                        <a\n                                            href=\"{{ route('roles.edit', $role) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $role)\n                                        <a\n                                            href=\"{{ route('roles.show', $role) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $role)\n                                        <form\n                                            action=\"{{ route('roles.destroy', $role) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $roles->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/index.blade.php"},"/resources/views/app/roles/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('roles.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.roles.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/create.blade.php"},"/resources/views/app/roles/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.roles.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.roles.inputs.name')\n                        </h5>\n                        <span>{{ $role->name ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('roles.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Role::class)\n                    <a href=\"{{ route('roles.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/roles/show.blade.php"},"/resources/views/app/roles/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($role) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $role->name : ''))\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.permissions.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($permissions as $permission)\n            <div>\n                <x-inputs.checkbox\n                    id=\"permission{{ $permission->id }}\"\n                    name=\"permissions[]\"\n                    label=\"{{ ucfirst($permission->name) }}\"\n                    value=\"{{ $permission->id }}\"\n                    :checked=\"isset($role) ? $role->hasPermissionTo($permission) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud","path":"/resources/views/app/roles/form-inputs.blade.php"},"/resources/views/app/permissions/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('permissions.update', $permission) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.permissions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('permissions.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('permissions.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/edit.blade.php"},"/resources/views/app/permissions/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Permission::class)\n                            <a\n                                href=\"{{ route('permissions.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.permissions.inputs.name')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($permissions as $permission)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $permission->name ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $permission)\n                                        <a\n                                            href=\"{{ route('permissions.edit', $permission) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $permission)\n                                        <a\n                                            href=\"{{ route('permissions.show', $permission) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $permission)\n                                        <form\n                                            action=\"{{ route('permissions.destroy', $permission) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"2\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $permissions->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/index.blade.php"},"/resources/views/app/permissions/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('permissions.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.permissions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('permissions.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/create.blade.php"},"/resources/views/app/permissions/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.permissions.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.permissions.inputs.name')\n                        </h5>\n                        <span>{{ $permission->name ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('permissions.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Permission::class)\n                    <a href=\"{{ route('permissions.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud","path":"/resources/views/app/permissions/show.blade.php"},"/resources/views/app/permissions/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($permission) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $permission->name : ''))\"\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.roles.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($roles as $role)\n            <div>\n                <x-inputs.checkbox\n                    id=\"role{{ $role->id }}\"\n                    name=\"roles[]\"\n                    label=\"{{ ucfirst($role->name) }}\"\n                    value=\"{{ $role->id }}\"\n                    :checked=\"isset($permission) ? $role->hasPermissionTo($permission) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud","path":"/resources/views/app/permissions/form-inputs.blade.php"},"/tailwind.config.js":{"deleteOnGeneration":true,"content":"import defaultTheme from 'tailwindcss/defaultTheme';\nimport forms from '@tailwindcss/forms';\nimport typography from '@tailwindcss/typography';\n\n/** @type {import('tailwindcss').Config} */\nexport default {\n    content: [\n        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',\n        './vendor/laravel/jetstream/**/*.blade.php',\n        './storage/framework/views/*.php',\n        './resources/views/**/*.blade.php',\n    ],\n\n    theme: {\n        extend: {\n            fontFamily: {\n                sans: ['Figtree', ...defaultTheme.fontFamily.sans],\n            },\n        },\n    },\n\n    plugins: [forms, typography],\n};\n","module":"base","path":"/tailwind.config.js"},"/resources/js/bootstrap.js":{"deleteOnGeneration":true,"content":"import _ from 'lodash';\nwindow._ = _;\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nimport axios from 'axios';\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// import Pusher from 'pusher-js';\n// window.Pusher = Pusher;\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: import.meta.env.VITE_PUSHER_APP_KEY,\n//     wsHost: import.meta.env.VITE_PUSHER_HOST ?? `ws-${import.meta.env.VITE_PUSHER_CLUSTER}.pusher.com`,\n//     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\n//     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\n//     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\n//     enabledTransports: ['ws', 'wss'],\n// });","module":"base","path":"/resources/js/bootstrap.js"},"app/Filament/Traits/HasDescendingOrder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Traits;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait HasDescendingOrder\n{\n    protected function getTableQuery(): Builder\n    {\n        return static::getModel()::query()->latest();\n    }\n}","module":"plugin:app.vemto.filament","path":"app/Filament/Traits/HasDescendingOrder.php"},"app/Filament/Filters/DateRangeFilter.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Filters;\n\nuse Filament\\Tables\\Filters\\Filter;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\n\nclass DateRangeFilter extends Filter\n{\n    public static function make(?string $name = null): static\n    {\n        return parent::make($name)\n            ->form([\n                DatePicker::make(\"{$name}_from\"),\n                DatePicker::make(\"{$name}_until\"),\n            ])\n            ->query(function (Builder $query, array $data) use (&$name): Builder {\n                return $query\n                    ->when(\n                        $data[\"{$name}_from\"],\n                        fn (Builder $query, $date): Builder => $query->whereDate($name, '>=', $date),\n                    )\n                    ->when(\n                        $data[\"{$name}_until\"],\n                        fn (Builder $query, $date): Builder => $query->whereDate($name, '<=', $date),\n                    );\n            });\n    }\n}","module":"plugin:app.vemto.filament","path":"app/Filament/Filters/DateRangeFilter.php"},"/app/Http/Requests/CategoryStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CategoryStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:317","path":"/app/Http/Requests/CategoryStoreRequest.php"},"/app/Http/Requests/CategoryUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass CategoryUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:317","path":"/app/Http/Requests/CategoryUpdateRequest.php"},"/app/Http/Controllers/CategoryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Category;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\CategoryStoreRequest;\nuse App\\Http\\Requests\\CategoryUpdateRequest;\n\nclass CategoryController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Category::class);\n\n        $search = $request->get('search', '');\n\n        $categories = Category::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.categories.index', compact('categories', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Category::class);\n\n        return view('app.categories.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(CategoryStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Category::class);\n\n        $validated = $request->validated();\n\n        $category = Category::create($validated);\n\n        return redirect()\n            ->route('categories.edit', $category)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Category $category): View\n    {\n        $this->authorize('view', $category);\n\n        return view('app.categories.show', compact('category'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Category $category): View\n    {\n        $this->authorize('update', $category);\n\n        return view('app.categories.edit', compact('category'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        CategoryUpdateRequest $request,\n        Category $category\n    ): RedirectResponse {\n        $this->authorize('update', $category);\n\n        $validated = $request->validated();\n\n        $category->update($validated);\n\n        return redirect()\n            ->route('categories.edit', $category)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Category $category\n    ): RedirectResponse {\n        $this->authorize('delete', $category);\n\n        $category->delete();\n\n        return redirect()\n            ->route('categories.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:317","path":"/app/Http/Controllers/CategoryController.php"},"/tests/Feature/Controllers/CategoryControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_categories(): void\n    {\n        $categories = Category::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('categories.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.index')\n            ->assertViewHas('categories');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_category(): void\n    {\n        $response = $this->get(route('categories.create'));\n\n        $response->assertOk()->assertViewIs('app.categories.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category(): void\n    {\n        $data = Category::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('categories.store'), $data);\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $category = Category::latest('id')->first();\n\n        $response->assertRedirect(route('categories.edit', $category));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->get(route('categories.show', $category));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.show')\n            ->assertViewHas('category');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->get(route('categories.edit', $category));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.categories.edit')\n            ->assertViewHas('category');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('categories.update', $category), $data);\n\n        $data['id'] = $category->id;\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertRedirect(route('categories.edit', $category));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->delete(route('categories.destroy', $category));\n\n        $response->assertRedirect(route('categories.index'));\n\n        $this->assertModelMissing($category);\n    }\n}\n","module":"crud:317","path":"/tests/Feature/Controllers/CategoryControllerTest.php"},"/resources/views/app/categories/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('categories.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.categories.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('categories.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:317","path":"/resources/views/app/categories/create.blade.php"},"/resources/views/app/categories/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('categories.update', $category) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.categories.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('categories.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('categories.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:317","path":"/resources/views/app/categories/edit.blade.php"},"/resources/views/app/categories/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($category) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $category->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $category->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $category->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:317","path":"/resources/views/app/categories/form-inputs.blade.php"},"/resources/views/app/categories/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.title')\n                        </h5>\n                        <span>{{ $category->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.slug')\n                        </h5>\n                        <span>{{ $category->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.categories.inputs.description')\n                        </h5>\n                        <span>{{ $category->description ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('categories.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Category::class)\n                    <a href=\"{{ route('categories.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:317","path":"/resources/views/app/categories/show.blade.php"},"/resources/views/app/categories/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.categories.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Category::class)\n                            <a\n                                href=\"{{ route('categories.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.categories.inputs.description')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($categories as $category)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $category->description ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $category)\n                                        <a\n                                            href=\"{{ route('categories.edit', $category) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $category)\n                                        <a\n                                            href=\"{{ route('categories.show', $category) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $category)\n                                        <form\n                                            action=\"{{ route('categories.destroy', $category) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $categories->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:317","path":"/resources/views/app/categories/index.blade.php"},"/app/Http/Requests/ItemStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ItemStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'vendor_id' => ['required', 'exists:vendors,id'],\n            'type_id' => ['required', 'exists:types,id'],\n            'website' => ['required', 'max:255', 'string'],\n            'rating' => ['required', 'max:255', 'string'],\n            'health' => ['required', 'max:255', 'string'],\n            'github_url' => ['required', 'max:255', 'string'],\n            'github_stars' => ['required', 'numeric'],\n            'github_forks' => ['required', 'numeric'],\n            'github_json' => ['required', 'max:255', 'json'],\n            'packagist_url' => ['required', 'max:255', 'string'],\n            'packagist_name' => ['required', 'max:255', 'string'],\n            'packagist_description' => ['required', 'max:255', 'string'],\n            'packagist_downloads' => ['required', 'numeric'],\n            'packagist_favers' => ['required', 'numeric'],\n            'npm_url' => ['required', 'max:255', 'string'],\n            'github_maintainers' => ['required', 'numeric'],\n        ];\n    }\n}\n","module":"crud:318","path":"/app/Http/Requests/ItemStoreRequest.php"},"/app/Http/Requests/ItemUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ItemUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'vendor_id' => ['required', 'exists:vendors,id'],\n            'type_id' => ['required', 'exists:types,id'],\n            'website' => ['required', 'max:255', 'string'],\n            'rating' => ['required', 'max:255', 'string'],\n            'health' => ['required', 'max:255', 'string'],\n            'github_url' => ['required', 'max:255', 'string'],\n            'github_stars' => ['required', 'numeric'],\n            'github_forks' => ['required', 'numeric'],\n            'github_json' => ['required', 'max:255', 'json'],\n            'packagist_url' => ['required', 'max:255', 'string'],\n            'packagist_name' => ['required', 'max:255', 'string'],\n            'packagist_description' => ['required', 'max:255', 'string'],\n            'packagist_downloads' => ['required', 'numeric'],\n            'packagist_favers' => ['required', 'numeric'],\n            'npm_url' => ['required', 'max:255', 'string'],\n            'github_maintainers' => ['required', 'numeric'],\n        ];\n    }\n}\n","module":"crud:318","path":"/app/Http/Requests/ItemUpdateRequest.php"},"/app/Http/Controllers/ItemController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Item;\nuse App\\Models\\Type;\nuse App\\Models\\Vendor;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\ItemStoreRequest;\nuse App\\Http\\Requests\\ItemUpdateRequest;\n\nclass ItemController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Item::class);\n\n        $search = $request->get('search', '');\n\n        $items = Item::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.items.index', compact('items', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Item::class);\n\n        $vendors = Vendor::pluck('title', 'id');\n        $types = Type::pluck('title', 'id');\n\n        return view('app.items.create', compact('vendors', 'types'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(ItemStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validated();\n        $validated['github_json'] = json_decode(\n            $validated['github_json'],\n            true\n        );\n\n        $item = Item::create($validated);\n\n        return redirect()\n            ->route('items.edit', $item)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Item $item): View\n    {\n        $this->authorize('view', $item);\n\n        return view('app.items.show', compact('item'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Item $item): View\n    {\n        $this->authorize('update', $item);\n\n        $vendors = Vendor::pluck('title', 'id');\n        $types = Type::pluck('title', 'id');\n\n        return view('app.items.edit', compact('item', 'vendors', 'types'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        ItemUpdateRequest $request,\n        Item $item\n    ): RedirectResponse {\n        $this->authorize('update', $item);\n\n        $validated = $request->validated();\n        $validated['github_json'] = json_decode(\n            $validated['github_json'],\n            true\n        );\n\n        $item->update($validated);\n\n        return redirect()\n            ->route('items.edit', $item)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Item $item): RedirectResponse\n    {\n        $this->authorize('delete', $item);\n\n        $item->delete();\n\n        return redirect()\n            ->route('items.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/ItemController.php"},"/tests/Feature/Controllers/ItemControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\n\nuse App\\Models\\Type;\nuse App\\Models\\Vendor;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    protected function castToJson($json)\n    {\n        if (is_array($json)) {\n            $json = addslashes(json_encode($json));\n        } elseif (is_null($json) || is_null(json_decode($json))) {\n            throw new \\Exception(\n                'A valid JSON string was not provided for casting.'\n            );\n        }\n\n        return \\DB::raw(\"CAST('{$json}' AS JSON)\");\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_items(): void\n    {\n        $items = Item::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('items.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.items.index')\n            ->assertViewHas('items');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_item(): void\n    {\n        $response = $this->get(route('items.create'));\n\n        $response->assertOk()->assertViewIs('app.items.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_item(): void\n    {\n        $data = Item::factory()\n            ->make()\n            ->toArray();\n\n        $data['github_json'] = json_encode($data['github_json']);\n\n        $response = $this->post(route('items.store'), $data);\n\n        $data['github_json'] = $this->castToJson($data['github_json']);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $item = Item::latest('id')->first();\n\n        $response->assertRedirect(route('items.edit', $item));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $response = $this->get(route('items.show', $item));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.items.show')\n            ->assertViewHas('item');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $response = $this->get(route('items.edit', $item));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.items.edit')\n            ->assertViewHas('item');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $vendor = Vendor::factory()->create();\n        $type = Type::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'website' => $this->faker->text(255),\n            'rating' => $this->faker->text(255),\n            'health' => $this->faker->text(255),\n            'github_url' => $this->faker->text(255),\n            'github_stars' => $this->faker->randomNumber(0),\n            'github_forks' => $this->faker->randomNumber(0),\n            'github_json' => [],\n            'packagist_url' => $this->faker->text(255),\n            'packagist_name' => $this->faker->text(255),\n            'packagist_description' => $this->faker->text(255),\n            'packagist_downloads' => $this->faker->randomNumber(0),\n            'packagist_favers' => $this->faker->randomNumber(0),\n            'npm_url' => $this->faker->text(255),\n            'github_maintainers' => $this->faker->randomNumber(0),\n            'vendor_id' => $vendor->id,\n            'type_id' => $type->id,\n        ];\n\n        $data['github_json'] = json_encode($data['github_json']);\n\n        $response = $this->put(route('items.update', $item), $data);\n\n        $data['id'] = $item->id;\n\n        $data['github_json'] = $this->castToJson($data['github_json']);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertRedirect(route('items.edit', $item));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $response = $this->delete(route('items.destroy', $item));\n\n        $response->assertRedirect(route('items.index'));\n\n        $this->assertModelMissing($item);\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Controllers/ItemControllerTest.php"},"/resources/views/app/items/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.items.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('items.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('items.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.items.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('items.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:318","path":"/resources/views/app/items/create.blade.php"},"/resources/views/app/items/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.items.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('items.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('items.update', $item) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.items.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('items.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('items.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:318","path":"/resources/views/app/items/edit.blade.php"},"/resources/views/app/items/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($item) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $item->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $item->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $item->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"vendor_id\" label=\"Vendor\" required>\n            @php $selected = old('vendor_id', ($editing ? $item->vendor_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Vendor</option>\n            @foreach($vendors as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"type_id\" label=\"Type\" required>\n            @php $selected = old('type_id', ($editing ? $item->type_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Type</option>\n            @foreach($types as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"website\"\n            label=\"Website\"\n            :value=\"old('website', ($editing ? $item->website : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Website\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"rating\"\n            label=\"Rating\"\n            :value=\"old('rating', ($editing ? $item->rating : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Rating\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"health\"\n            label=\"Health\"\n            :value=\"old('health', ($editing ? $item->health : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Health\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"github_url\"\n            label=\"Github Url\"\n            :value=\"old('github_url', ($editing ? $item->github_url : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Github Url\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"github_stars\"\n            label=\"Github Stars\"\n            :value=\"old('github_stars', ($editing ? $item->github_stars : ''))\"\n            max=\"255\"\n            placeholder=\"Github Stars\"\n            required\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"github_forks\"\n            label=\"Github Forks\"\n            :value=\"old('github_forks', ($editing ? $item->github_forks : ''))\"\n            max=\"255\"\n            placeholder=\"Github Forks\"\n            required\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"github_json\"\n            label=\"Github Json\"\n            maxlength=\"255\"\n            required\n            >{{ old('github_json', ($editing ? json_encode($item->github_json) :\n            '')) }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"packagist_url\"\n            label=\"Packagist Url\"\n            :value=\"old('packagist_url', ($editing ? $item->packagist_url : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Packagist Url\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"packagist_name\"\n            label=\"Packagist Name\"\n            :value=\"old('packagist_name', ($editing ? $item->packagist_name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Packagist Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"packagist_description\"\n            label=\"Packagist Description\"\n            :value=\"old('packagist_description', ($editing ? $item->packagist_description : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Packagist Description\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"packagist_downloads\"\n            label=\"Packagist Downloads\"\n            :value=\"old('packagist_downloads', ($editing ? $item->packagist_downloads : ''))\"\n            max=\"255\"\n            placeholder=\"Packagist Downloads\"\n            required\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"packagist_favers\"\n            label=\"Packagist Favers\"\n            :value=\"old('packagist_favers', ($editing ? $item->packagist_favers : ''))\"\n            max=\"255\"\n            placeholder=\"Packagist Favers\"\n            required\n        ></x-inputs.number>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"npm_url\"\n            label=\"Npm Url\"\n            :value=\"old('npm_url', ($editing ? $item->npm_url : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Npm Url\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.number\n            name=\"github_maintainers\"\n            label=\"Github Maintainers\"\n            :value=\"old('github_maintainers', ($editing ? $item->github_maintainers : ''))\"\n            max=\"255\"\n            placeholder=\"Github Maintainers\"\n            required\n        ></x-inputs.number>\n    </x-inputs.group>\n</div>\n","module":"crud:318","path":"/resources/views/app/items/form-inputs.blade.php"},"/resources/views/app/items/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.items.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('items.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.title')\n                        </h5>\n                        <span>{{ $item->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.slug')\n                        </h5>\n                        <span>{{ $item->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.description')\n                        </h5>\n                        <span>{{ $item->description ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.vendor_id')\n                        </h5>\n                        <span>{{ optional($item->vendor)->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.type_id')\n                        </h5>\n                        <span>{{ optional($item->type)->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.website')\n                        </h5>\n                        <span>{{ $item->website ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.rating')\n                        </h5>\n                        <span>{{ $item->rating ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.health')\n                        </h5>\n                        <span>{{ $item->health ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.github_url')\n                        </h5>\n                        <span>{{ $item->github_url ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.github_stars')\n                        </h5>\n                        <span>{{ $item->github_stars ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.github_forks')\n                        </h5>\n                        <span>{{ $item->github_forks ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.github_json')\n                        </h5>\n                        <pre>{{ json_encode($item->github_json) ?? '-' }}</pre>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.packagist_url')\n                        </h5>\n                        <span>{{ $item->packagist_url ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.packagist_name')\n                        </h5>\n                        <span>{{ $item->packagist_name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.packagist_description')\n                        </h5>\n                        <span>{{ $item->packagist_description ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.packagist_downloads')\n                        </h5>\n                        <span>{{ $item->packagist_downloads ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.packagist_favers')\n                        </h5>\n                        <span>{{ $item->packagist_favers ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.npm_url')\n                        </h5>\n                        <span>{{ $item->npm_url ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.items.inputs.github_maintainers')\n                        </h5>\n                        <span>{{ $item->github_maintainers ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('items.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Item::class)\n                    <a href=\"{{ route('items.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:318","path":"/resources/views/app/items/show.blade.php"},"/resources/views/app/items/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.items.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Item::class)\n                            <a\n                                href=\"{{ route('items.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.description')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.vendor_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.type_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.website')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.rating')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.health')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.github_url')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.items.inputs.github_stars')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.items.inputs.github_forks')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.github_json')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.packagist_url')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.packagist_name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.packagist_description')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.items.inputs.packagist_downloads')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.items.inputs.packagist_favers')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.items.inputs.npm_url')\n                                </th>\n                                <th class=\"px-4 py-3 text-right\">\n                                    @lang('crud.items.inputs.github_maintainers')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($items as $item)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->description ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($item->vendor)->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($item->type)->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->website ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->rating ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->health ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->github_url ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $item->github_stars ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $item->github_forks ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    <pre>\n{{ json_encode($item->github_json) ?? '-' }}</pre\n                                    >\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->packagist_url ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->packagist_name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->packagist_description ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $item->packagist_downloads ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $item->packagist_favers ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $item->npm_url ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-right\">\n                                    {{ $item->github_maintainers ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $item)\n                                        <a\n                                            href=\"{{ route('items.edit', $item) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $item)\n                                        <a\n                                            href=\"{{ route('items.show', $item) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $item)\n                                        <form\n                                            action=\"{{ route('items.destroy', $item) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"20\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"20\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $items->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:318","path":"/resources/views/app/items/index.blade.php"},"/app/Http/Requests/PlatformStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass PlatformStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:319","path":"/app/Http/Requests/PlatformStoreRequest.php"},"/app/Http/Requests/PlatformUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass PlatformUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:319","path":"/app/Http/Requests/PlatformUpdateRequest.php"},"/app/Http/Controllers/PlatformController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Platform;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\PlatformStoreRequest;\nuse App\\Http\\Requests\\PlatformUpdateRequest;\n\nclass PlatformController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Platform::class);\n\n        $search = $request->get('search', '');\n\n        $platforms = Platform::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.platforms.index', compact('platforms', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Platform::class);\n\n        return view('app.platforms.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(PlatformStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Platform::class);\n\n        $validated = $request->validated();\n\n        $platform = Platform::create($validated);\n\n        return redirect()\n            ->route('platforms.edit', $platform)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Platform $platform): View\n    {\n        $this->authorize('view', $platform);\n\n        return view('app.platforms.show', compact('platform'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Platform $platform): View\n    {\n        $this->authorize('update', $platform);\n\n        return view('app.platforms.edit', compact('platform'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        PlatformUpdateRequest $request,\n        Platform $platform\n    ): RedirectResponse {\n        $this->authorize('update', $platform);\n\n        $validated = $request->validated();\n\n        $platform->update($validated);\n\n        return redirect()\n            ->route('platforms.edit', $platform)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Platform $platform\n    ): RedirectResponse {\n        $this->authorize('delete', $platform);\n\n        $platform->delete();\n\n        return redirect()\n            ->route('platforms.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:319","path":"/app/Http/Controllers/PlatformController.php"},"/tests/Feature/Controllers/PlatformControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Platform;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PlatformControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_platforms(): void\n    {\n        $platforms = Platform::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('platforms.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.platforms.index')\n            ->assertViewHas('platforms');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_platform(): void\n    {\n        $response = $this->get(route('platforms.create'));\n\n        $response->assertOk()->assertViewIs('app.platforms.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_platform(): void\n    {\n        $data = Platform::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('platforms.store'), $data);\n\n        $this->assertDatabaseHas('platforms', $data);\n\n        $platform = Platform::latest('id')->first();\n\n        $response->assertRedirect(route('platforms.edit', $platform));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $response = $this->get(route('platforms.show', $platform));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.platforms.show')\n            ->assertViewHas('platform');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $response = $this->get(route('platforms.edit', $platform));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.platforms.edit')\n            ->assertViewHas('platform');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('platforms.update', $platform), $data);\n\n        $data['id'] = $platform->id;\n\n        $this->assertDatabaseHas('platforms', $data);\n\n        $response->assertRedirect(route('platforms.edit', $platform));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $response = $this->delete(route('platforms.destroy', $platform));\n\n        $response->assertRedirect(route('platforms.index'));\n\n        $this->assertModelMissing($platform);\n    }\n}\n","module":"crud:319","path":"/tests/Feature/Controllers/PlatformControllerTest.php"},"/resources/views/app/platforms/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.platforms.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('platforms.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('platforms.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.platforms.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('platforms.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:319","path":"/resources/views/app/platforms/create.blade.php"},"/resources/views/app/platforms/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.platforms.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('platforms.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('platforms.update', $platform) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.platforms.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('platforms.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('platforms.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:319","path":"/resources/views/app/platforms/edit.blade.php"},"/resources/views/app/platforms/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($platform) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $platform->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $platform->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $platform->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:319","path":"/resources/views/app/platforms/form-inputs.blade.php"},"/resources/views/app/platforms/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.platforms.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('platforms.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.platforms.inputs.title')\n                        </h5>\n                        <span>{{ $platform->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.platforms.inputs.slug')\n                        </h5>\n                        <span>{{ $platform->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.platforms.inputs.description')\n                        </h5>\n                        <span>{{ $platform->description ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('platforms.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Platform::class)\n                    <a href=\"{{ route('platforms.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:319","path":"/resources/views/app/platforms/show.blade.php"},"/resources/views/app/platforms/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.platforms.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Platform::class)\n                            <a\n                                href=\"{{ route('platforms.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.platforms.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.platforms.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.platforms.inputs.description')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($platforms as $platform)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $platform->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $platform->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $platform->description ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $platform)\n                                        <a\n                                            href=\"{{ route('platforms.edit', $platform) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $platform)\n                                        <a\n                                            href=\"{{ route('platforms.show', $platform) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $platform)\n                                        <form\n                                            action=\"{{ route('platforms.destroy', $platform) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $platforms->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:319","path":"/resources/views/app/platforms/index.blade.php"},"/app/Http/Requests/StackStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StackStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'public' => ['required', 'boolean'],\n            'major' => ['required', 'boolean'],\n            'user_id' => ['required', 'exists:users,id'],\n        ];\n    }\n}\n","module":"crud:320","path":"/app/Http/Requests/StackStoreRequest.php"},"/app/Http/Requests/StackUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StackUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'public' => ['required', 'boolean'],\n            'major' => ['required', 'boolean'],\n            'user_id' => ['required', 'exists:users,id'],\n        ];\n    }\n}\n","module":"crud:320","path":"/app/Http/Requests/StackUpdateRequest.php"},"/app/Http/Controllers/StackController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Stack;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\StackStoreRequest;\nuse App\\Http\\Requests\\StackUpdateRequest;\n\nclass StackController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Stack::class);\n\n        $search = $request->get('search', '');\n\n        $stacks = Stack::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.stacks.index', compact('stacks', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Stack::class);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.stacks.create', compact('users'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(StackStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Stack::class);\n\n        $validated = $request->validated();\n\n        $stack = Stack::create($validated);\n\n        return redirect()\n            ->route('stacks.edit', $stack)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Stack $stack): View\n    {\n        $this->authorize('view', $stack);\n\n        return view('app.stacks.show', compact('stack'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Stack $stack): View\n    {\n        $this->authorize('update', $stack);\n\n        $users = User::pluck('name', 'id');\n\n        return view('app.stacks.edit', compact('stack', 'users'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        StackUpdateRequest $request,\n        Stack $stack\n    ): RedirectResponse {\n        $this->authorize('update', $stack);\n\n        $validated = $request->validated();\n\n        $stack->update($validated);\n\n        return redirect()\n            ->route('stacks.edit', $stack)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Stack $stack): RedirectResponse\n    {\n        $this->authorize('delete', $stack);\n\n        $stack->delete();\n\n        return redirect()\n            ->route('stacks.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:320","path":"/app/Http/Controllers/StackController.php"},"/tests/Feature/Controllers/StackControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Stack;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass StackControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_stacks(): void\n    {\n        $stacks = Stack::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('stacks.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.stacks.index')\n            ->assertViewHas('stacks');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_stack(): void\n    {\n        $response = $this->get(route('stacks.create'));\n\n        $response->assertOk()->assertViewIs('app.stacks.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_stack(): void\n    {\n        $data = Stack::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('stacks.store'), $data);\n\n        $this->assertDatabaseHas('stacks', $data);\n\n        $stack = Stack::latest('id')->first();\n\n        $response->assertRedirect(route('stacks.edit', $stack));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $response = $this->get(route('stacks.show', $stack));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.stacks.show')\n            ->assertViewHas('stack');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $response = $this->get(route('stacks.edit', $stack));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.stacks.edit')\n            ->assertViewHas('stack');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'public' => $this->faker->boolean(),\n            'major' => $this->faker->boolean(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->put(route('stacks.update', $stack), $data);\n\n        $data['id'] = $stack->id;\n\n        $this->assertDatabaseHas('stacks', $data);\n\n        $response->assertRedirect(route('stacks.edit', $stack));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $response = $this->delete(route('stacks.destroy', $stack));\n\n        $response->assertRedirect(route('stacks.index'));\n\n        $this->assertModelMissing($stack);\n    }\n}\n","module":"crud:320","path":"/tests/Feature/Controllers/StackControllerTest.php"},"/resources/views/app/stacks/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.stacks.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('stacks.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('stacks.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.stacks.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('stacks.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:320","path":"/resources/views/app/stacks/create.blade.php"},"/resources/views/app/stacks/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.stacks.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('stacks.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('stacks.update', $stack) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.stacks.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('stacks.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('stacks.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:320","path":"/resources/views/app/stacks/edit.blade.php"},"/resources/views/app/stacks/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($stack) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $stack->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $stack->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $stack->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"public\"\n            label=\"Public\"\n            :checked=\"old('public', ($editing ? $stack->public : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.checkbox\n            name=\"major\"\n            label=\"Major\"\n            :checked=\"old('major', ($editing ? $stack->major : 0))\"\n        ></x-inputs.checkbox>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"user_id\" label=\"Created By\" required>\n            @php $selected = old('user_id', ($editing ? $stack->user_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n            @foreach($users as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:320","path":"/resources/views/app/stacks/form-inputs.blade.php"},"/resources/views/app/stacks/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.stacks.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('stacks.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.title')\n                        </h5>\n                        <span>{{ $stack->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.slug')\n                        </h5>\n                        <span>{{ $stack->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.description')\n                        </h5>\n                        <span>{{ $stack->description ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.public')\n                        </h5>\n                        <span>{{ $stack->public ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.major')\n                        </h5>\n                        <span>{{ $stack->major ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.stacks.inputs.user_id')\n                        </h5>\n                        <span\n                            >{{ optional($stack->created_by)->name ?? '-'\n                            }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('stacks.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Stack::class)\n                    <a href=\"{{ route('stacks.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:320","path":"/resources/views/app/stacks/show.blade.php"},"/resources/views/app/stacks/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.stacks.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Stack::class)\n                            <a\n                                href=\"{{ route('stacks.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.description')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.public')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.major')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.stacks.inputs.user_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($stacks as $stack)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $stack->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $stack->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $stack->description ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $stack->public ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $stack->major ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($stack->created_by)->name ?? '-'\n                                    }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $stack)\n                                        <a\n                                            href=\"{{ route('stacks.edit', $stack) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $stack)\n                                        <a\n                                            href=\"{{ route('stacks.show', $stack) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $stack)\n                                        <form\n                                            action=\"{{ route('stacks.destroy', $stack) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"7\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"7\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $stacks->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:320","path":"/resources/views/app/stacks/index.blade.php"},"/app/Http/Requests/TagStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:321","path":"/app/Http/Requests/TagStoreRequest.php"},"/app/Http/Requests/TagUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TagUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:321","path":"/app/Http/Requests/TagUpdateRequest.php"},"/app/Http/Controllers/TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Tag;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\TagStoreRequest;\nuse App\\Http\\Requests\\TagUpdateRequest;\n\nclass TagController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.tags.index', compact('tags', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Tag::class);\n\n        return view('app.tags.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(TagStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validated();\n\n        $tag = Tag::create($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Tag $tag): View\n    {\n        $this->authorize('view', $tag);\n\n        return view('app.tags.show', compact('tag'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Tag $tag): View\n    {\n        $this->authorize('update', $tag);\n\n        return view('app.tags.edit', compact('tag'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        TagUpdateRequest $request,\n        Tag $tag\n    ): RedirectResponse {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validated();\n\n        $tag->update($validated);\n\n        return redirect()\n            ->route('tags.edit', $tag)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Tag $tag): RedirectResponse\n    {\n        $this->authorize('delete', $tag);\n\n        $tag->delete();\n\n        return redirect()\n            ->route('tags.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:321","path":"/app/Http/Controllers/TagController.php"},"/tests/Feature/Controllers/TagControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_tags(): void\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('tags.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.index')\n            ->assertViewHas('tags');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_tag(): void\n    {\n        $response = $this->get(route('tags.create'));\n\n        $response->assertOk()->assertViewIs('app.tags.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag(): void\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('tags.store'), $data);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $tag = Tag::latest('id')->first();\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.show', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.show')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->get(route('tags.edit', $tag));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.tags.edit')\n            ->assertViewHas('tag');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertRedirect(route('tags.edit', $tag));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->delete(route('tags.destroy', $tag));\n\n        $response->assertRedirect(route('tags.index'));\n\n        $this->assertModelMissing($tag);\n    }\n}\n","module":"crud:321","path":"/tests/Feature/Controllers/TagControllerTest.php"},"/resources/views/app/tags/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('tags.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:321","path":"/resources/views/app/tags/create.blade.php"},"/resources/views/app/tags/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('tags.update', $tag) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.tags.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:321","path":"/resources/views/app/tags/edit.blade.php"},"/resources/views/app/tags/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($tag) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $tag->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $tag->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $tag->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:321","path":"/resources/views/app/tags/form-inputs.blade.php"},"/resources/views/app/tags/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.title')\n                        </h5>\n                        <span>{{ $tag->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.slug')\n                        </h5>\n                        <span>{{ $tag->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.tags.inputs.description')\n                        </h5>\n                        <span>{{ $tag->description ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('tags.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Tag::class)\n                    <a href=\"{{ route('tags.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:321","path":"/resources/views/app/tags/show.blade.php"},"/resources/views/app/tags/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.tags.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Tag::class)\n                            <a\n                                href=\"{{ route('tags.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.tags.inputs.description')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($tags as $tag)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $tag->description ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $tag)\n                                        <a\n                                            href=\"{{ route('tags.edit', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $tag)\n                                        <a\n                                            href=\"{{ route('tags.show', $tag) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $tag)\n                                        <form\n                                            action=\"{{ route('tags.destroy', $tag) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $tags->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:321","path":"/resources/views/app/tags/index.blade.php"},"/app/Http/Requests/TypeStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TypeStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:322","path":"/app/Http/Requests/TypeStoreRequest.php"},"/app/Http/Requests/TypeUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass TypeUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:322","path":"/app/Http/Requests/TypeUpdateRequest.php"},"/app/Http/Controllers/TypeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Type;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\TypeStoreRequest;\nuse App\\Http\\Requests\\TypeUpdateRequest;\n\nclass TypeController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Type::class);\n\n        $search = $request->get('search', '');\n\n        $types = Type::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.types.index', compact('types', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Type::class);\n\n        return view('app.types.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(TypeStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Type::class);\n\n        $validated = $request->validated();\n\n        $type = Type::create($validated);\n\n        return redirect()\n            ->route('types.edit', $type)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Type $type): View\n    {\n        $this->authorize('view', $type);\n\n        return view('app.types.show', compact('type'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Type $type): View\n    {\n        $this->authorize('update', $type);\n\n        return view('app.types.edit', compact('type'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        TypeUpdateRequest $request,\n        Type $type\n    ): RedirectResponse {\n        $this->authorize('update', $type);\n\n        $validated = $request->validated();\n\n        $type->update($validated);\n\n        return redirect()\n            ->route('types.edit', $type)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Type $type): RedirectResponse\n    {\n        $this->authorize('delete', $type);\n\n        $type->delete();\n\n        return redirect()\n            ->route('types.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:322","path":"/app/Http/Controllers/TypeController.php"},"/tests/Feature/Controllers/TypeControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Type;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TypeControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_types(): void\n    {\n        $types = Type::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('types.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.types.index')\n            ->assertViewHas('types');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_type(): void\n    {\n        $response = $this->get(route('types.create'));\n\n        $response->assertOk()->assertViewIs('app.types.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_type(): void\n    {\n        $data = Type::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('types.store'), $data);\n\n        $this->assertDatabaseHas('types', $data);\n\n        $type = Type::latest('id')->first();\n\n        $response->assertRedirect(route('types.edit', $type));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $response = $this->get(route('types.show', $type));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.types.show')\n            ->assertViewHas('type');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $response = $this->get(route('types.edit', $type));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.types.edit')\n            ->assertViewHas('type');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('types.update', $type), $data);\n\n        $data['id'] = $type->id;\n\n        $this->assertDatabaseHas('types', $data);\n\n        $response->assertRedirect(route('types.edit', $type));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $response = $this->delete(route('types.destroy', $type));\n\n        $response->assertRedirect(route('types.index'));\n\n        $this->assertModelMissing($type);\n    }\n}\n","module":"crud:322","path":"/tests/Feature/Controllers/TypeControllerTest.php"},"/resources/views/app/types/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.types.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('types.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('types.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.types.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('types.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:322","path":"/resources/views/app/types/create.blade.php"},"/resources/views/app/types/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.types.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('types.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('types.update', $type) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.types.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('types.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('types.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:322","path":"/resources/views/app/types/edit.blade.php"},"/resources/views/app/types/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($type) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $type->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $type->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $type->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:322","path":"/resources/views/app/types/form-inputs.blade.php"},"/resources/views/app/types/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.types.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('types.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.types.inputs.title')\n                        </h5>\n                        <span>{{ $type->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.types.inputs.slug')\n                        </h5>\n                        <span>{{ $type->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.types.inputs.description')\n                        </h5>\n                        <span>{{ $type->description ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('types.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Type::class)\n                    <a href=\"{{ route('types.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:322","path":"/resources/views/app/types/show.blade.php"},"/resources/views/app/types/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.types.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Type::class)\n                            <a\n                                href=\"{{ route('types.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.types.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.types.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.types.inputs.description')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($types as $type)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $type->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $type->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $type->description ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $type)\n                                        <a\n                                            href=\"{{ route('types.edit', $type) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $type)\n                                        <a\n                                            href=\"{{ route('types.show', $type) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $type)\n                                        <form\n                                            action=\"{{ route('types.destroy', $type) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"4\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"4\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $types->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:322","path":"/resources/views/app/types/index.blade.php"},"/app/Http/Requests/UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:323","path":"/app/Http/Requests/UserStoreRequest.php"},"/app/Http/Requests/UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n            'roles' => 'array',\n        ];\n    }\n}\n","module":"crud:323","path":"/app/Http/Requests/UserUpdateRequest.php"},"/app/Http/Controllers/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Spatie\\Permission\\Models\\Role;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', User::class);\n\n        $roles = Role::get();\n\n        return view('app.users.create', compact('roles'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, User $user): View\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, User $user): View\n    {\n        $this->authorize('update', $user);\n\n        $roles = Role::get();\n\n        return view('app.users.edit', compact('user', 'roles'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUpdateRequest $request,\n        User $user\n    ): RedirectResponse {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, User $user): RedirectResponse\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:323","path":"/app/Http/Controllers/UserController.php"},"/tests/Feature/Controllers/UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user(): void\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n","module":"crud:323","path":"/tests/Feature/Controllers/UserControllerTest.php"},"/resources/views/app/users/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('users.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:323","path":"/resources/views/app/users/create.blade.php"},"/resources/views/app/users/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('users.update', $user) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('users.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:323","path":"/resources/views/app/users/edit.blade.php"},"/resources/views/app/users/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $user->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            :value=\"old('email', ($editing ? $user->email : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            placeholder=\"Password\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n\n    <div class=\"px-4 my-4\">\n        <h4 class=\"font-bold text-lg text-gray-700\">\n            Assign @lang('crud.roles.name')\n        </h4>\n\n        <div class=\"py-2\">\n            @foreach ($roles as $role)\n            <div>\n                <x-inputs.checkbox\n                    id=\"role{{ $role->id }}\"\n                    name=\"roles[]\"\n                    label=\"{{ ucfirst($role->name) }}\"\n                    value=\"{{ $role->id }}\"\n                    :checked=\"isset($user) ? $user->hasRole($role) : false\"\n                    :add-hidden-value=\"false\"\n                ></x-inputs.checkbox>\n            </div>\n            @endforeach\n        </div>\n    </div>\n</div>\n","module":"crud:323","path":"/resources/views/app/users/form-inputs.blade.php"},"/resources/views/app/users/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span>{{ $user->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span>{{ $user->email ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.roles.name')\n                        </h5>\n                        <div>\n                            @forelse ($user->roles as $role)\n                            <div\n                                class=\"\n                                    inline-block\n                                    p-1\n                                    text-center text-sm\n                                    rounded\n                                    bg-blue-400\n                                    text-white\n                                \"\n                            >\n                                {{ $role->name }}\n                            </div>\n                            <br />\n                            @empty - @endforelse\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\User::class)\n                    <a href=\"{{ route('users.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:323","path":"/resources/views/app/users/show.blade.php"},"/resources/views/app/users/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $user)\n                                        <form\n                                            action=\"{{ route('users.destroy', $user) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:323","path":"/resources/views/app/users/index.blade.php"},"/app/Http/Requests/VendorStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VendorStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'github' => ['required', 'max:255', 'string'],\n            'packagist' => ['required', 'max:255', 'string'],\n            'npm' => ['required', 'max:255', 'string'],\n            'website' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:324","path":"/app/Http/Requests/VendorStoreRequest.php"},"/app/Http/Requests/VendorUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VendorUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'github' => ['required', 'max:255', 'string'],\n            'packagist' => ['required', 'max:255', 'string'],\n            'npm' => ['required', 'max:255', 'string'],\n            'website' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n        ];\n    }\n}\n","module":"crud:324","path":"/app/Http/Requests/VendorUpdateRequest.php"},"/app/Http/Controllers/VendorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Vendor;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\VendorStoreRequest;\nuse App\\Http\\Requests\\VendorUpdateRequest;\n\nclass VendorController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Vendor::class);\n\n        $search = $request->get('search', '');\n\n        $vendors = Vendor::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.vendors.index', compact('vendors', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Vendor::class);\n\n        return view('app.vendors.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(VendorStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Vendor::class);\n\n        $validated = $request->validated();\n\n        $vendor = Vendor::create($validated);\n\n        return redirect()\n            ->route('vendors.edit', $vendor)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Vendor $vendor): View\n    {\n        $this->authorize('view', $vendor);\n\n        return view('app.vendors.show', compact('vendor'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Vendor $vendor): View\n    {\n        $this->authorize('update', $vendor);\n\n        return view('app.vendors.edit', compact('vendor'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        VendorUpdateRequest $request,\n        Vendor $vendor\n    ): RedirectResponse {\n        $this->authorize('update', $vendor);\n\n        $validated = $request->validated();\n\n        $vendor->update($validated);\n\n        return redirect()\n            ->route('vendors.edit', $vendor)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, Vendor $vendor): RedirectResponse\n    {\n        $this->authorize('delete', $vendor);\n\n        $vendor->delete();\n\n        return redirect()\n            ->route('vendors.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:324","path":"/app/Http/Controllers/VendorController.php"},"/tests/Feature/Controllers/VendorControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Vendor;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VendorControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_vendors(): void\n    {\n        $vendors = Vendor::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('vendors.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.vendors.index')\n            ->assertViewHas('vendors');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_vendor(): void\n    {\n        $response = $this->get(route('vendors.create'));\n\n        $response->assertOk()->assertViewIs('app.vendors.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_vendor(): void\n    {\n        $data = Vendor::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('vendors.store'), $data);\n\n        $this->assertDatabaseHas('vendors', $data);\n\n        $vendor = Vendor::latest('id')->first();\n\n        $response->assertRedirect(route('vendors.edit', $vendor));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $response = $this->get(route('vendors.show', $vendor));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.vendors.show')\n            ->assertViewHas('vendor');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $response = $this->get(route('vendors.edit', $vendor));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.vendors.edit')\n            ->assertViewHas('vendor');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'github' => $this->faker->text(255),\n            'packagist' => $this->faker->text(255),\n            'npm' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->put(route('vendors.update', $vendor), $data);\n\n        $data['id'] = $vendor->id;\n\n        $this->assertDatabaseHas('vendors', $data);\n\n        $response->assertRedirect(route('vendors.edit', $vendor));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $response = $this->delete(route('vendors.destroy', $vendor));\n\n        $response->assertRedirect(route('vendors.index'));\n\n        $this->assertModelMissing($vendor);\n    }\n}\n","module":"crud:324","path":"/tests/Feature/Controllers/VendorControllerTest.php"},"/resources/views/app/vendors/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.vendors.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('vendors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('vendors.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.vendors.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('vendors.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:324","path":"/resources/views/app/vendors/create.blade.php"},"/resources/views/app/vendors/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.vendors.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('vendors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('vendors.update', $vendor) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.vendors.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('vendors.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('vendors.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:324","path":"/resources/views/app/vendors/edit.blade.php"},"/resources/views/app/vendors/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($vendor) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"title\"\n            label=\"Title\"\n            :value=\"old('title', ($editing ? $vendor->title : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Title\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"slug\"\n            label=\"Slug\"\n            :value=\"old('slug', ($editing ? $vendor->slug : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Slug\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"github\"\n            label=\"Github\"\n            :value=\"old('github', ($editing ? $vendor->github : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Github\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"packagist\"\n            label=\"Packagist\"\n            :value=\"old('packagist', ($editing ? $vendor->packagist : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Packagist\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"npm\"\n            label=\"Npm\"\n            :value=\"old('npm', ($editing ? $vendor->npm : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Npm\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"website\"\n            label=\"Website\"\n            :value=\"old('website', ($editing ? $vendor->website : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Website\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.textarea\n            name=\"description\"\n            label=\"Description\"\n            maxlength=\"255\"\n            required\n            >{{ old('description', ($editing ? $vendor->description : ''))\n            }}</x-inputs.textarea\n        >\n    </x-inputs.group>\n</div>\n","module":"crud:324","path":"/resources/views/app/vendors/form-inputs.blade.php"},"/resources/views/app/vendors/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.vendors.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('vendors.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.title')\n                        </h5>\n                        <span>{{ $vendor->title ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.slug')\n                        </h5>\n                        <span>{{ $vendor->slug ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.github')\n                        </h5>\n                        <span>{{ $vendor->github ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.packagist')\n                        </h5>\n                        <span>{{ $vendor->packagist ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.npm')\n                        </h5>\n                        <span>{{ $vendor->npm ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.website')\n                        </h5>\n                        <span>{{ $vendor->website ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.vendors.inputs.description')\n                        </h5>\n                        <span>{{ $vendor->description ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('vendors.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Vendor::class)\n                    <a href=\"{{ route('vendors.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:324","path":"/resources/views/app/vendors/show.blade.php"},"/resources/views/app/vendors/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.vendors.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Vendor::class)\n                            <a\n                                href=\"{{ route('vendors.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.title')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.slug')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.github')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.packagist')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.npm')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.website')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.vendors.inputs.description')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($vendors as $vendor)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->title ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->slug ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->github ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->packagist ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->npm ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->website ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $vendor->description ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $vendor)\n                                        <a\n                                            href=\"{{ route('vendors.edit', $vendor) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $vendor)\n                                        <a\n                                            href=\"{{ route('vendors.show', $vendor) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $vendor)\n                                        <form\n                                            action=\"{{ route('vendors.destroy', $vendor) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"8\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"8\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $vendors->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:324","path":"/resources/views/app/vendors/index.blade.php"},"/app/Http/Requests/VersionStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VersionStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'version' => ['required', 'max:255', 'string'],\n            'item_id' => ['required', 'exists:items,id'],\n        ];\n    }\n}\n","module":"crud:325","path":"/app/Http/Requests/VersionStoreRequest.php"},"/app/Http/Requests/VersionUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VersionUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'version' => ['required', 'max:255', 'string'],\n            'item_id' => ['required', 'exists:items,id'],\n        ];\n    }\n}\n","module":"crud:325","path":"/app/Http/Requests/VersionUpdateRequest.php"},"/app/Http/Controllers/VersionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Item;\nuse App\\Models\\Version;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\VersionStoreRequest;\nuse App\\Http\\Requests\\VersionUpdateRequest;\n\nclass VersionController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Version::class);\n\n        $search = $request->get('search', '');\n\n        $versions = Version::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.versions.index', compact('versions', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Version::class);\n\n        $items = Item::pluck('title', 'id');\n\n        return view('app.versions.create', compact('items'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(VersionStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Version::class);\n\n        $validated = $request->validated();\n\n        $version = Version::create($validated);\n\n        return redirect()\n            ->route('versions.edit', $version)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Version $version): View\n    {\n        $this->authorize('view', $version);\n\n        return view('app.versions.show', compact('version'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Version $version): View\n    {\n        $this->authorize('update', $version);\n\n        $items = Item::pluck('title', 'id');\n\n        return view('app.versions.edit', compact('version', 'items'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        VersionUpdateRequest $request,\n        Version $version\n    ): RedirectResponse {\n        $this->authorize('update', $version);\n\n        $validated = $request->validated();\n\n        $version->update($validated);\n\n        return redirect()\n            ->route('versions.edit', $version)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Version $version\n    ): RedirectResponse {\n        $this->authorize('delete', $version);\n\n        $version->delete();\n\n        return redirect()\n            ->route('versions.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:325","path":"/app/Http/Controllers/VersionController.php"},"/tests/Feature/Controllers/VersionControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Version;\n\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VersionControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_versions(): void\n    {\n        $versions = Version::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('versions.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.versions.index')\n            ->assertViewHas('versions');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_version(): void\n    {\n        $response = $this->get(route('versions.create'));\n\n        $response->assertOk()->assertViewIs('app.versions.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_version(): void\n    {\n        $data = Version::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('versions.store'), $data);\n\n        $this->assertDatabaseHas('versions', $data);\n\n        $version = Version::latest('id')->first();\n\n        $response->assertRedirect(route('versions.edit', $version));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $response = $this->get(route('versions.show', $version));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.versions.show')\n            ->assertViewHas('version');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $response = $this->get(route('versions.edit', $version));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.versions.edit')\n            ->assertViewHas('version');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $item = Item::factory()->create();\n\n        $data = [\n            'version' => $this->faker->text(255),\n            'item_id' => $item->id,\n        ];\n\n        $response = $this->put(route('versions.update', $version), $data);\n\n        $data['id'] = $version->id;\n\n        $this->assertDatabaseHas('versions', $data);\n\n        $response->assertRedirect(route('versions.edit', $version));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $response = $this->delete(route('versions.destroy', $version));\n\n        $response->assertRedirect(route('versions.index'));\n\n        $this->assertModelMissing($version);\n    }\n}\n","module":"crud:325","path":"/tests/Feature/Controllers/VersionControllerTest.php"},"/resources/views/app/versions/create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.versions.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('versions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('versions.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.versions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('versions.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:325","path":"/resources/views/app/versions/create.blade.php"},"/resources/views/app/versions/edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.versions.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('versions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('versions.update', $version) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.versions.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('versions.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('versions.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:325","path":"/resources/views/app/versions/edit.blade.php"},"/resources/views/app/versions/form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($version) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"version\"\n            label=\"Version\"\n            :value=\"old('version', ($editing ? $version->version : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Version\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"item_id\" label=\"Item\" required>\n            @php $selected = old('item_id', ($editing ? $version->item_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Item</option>\n            @foreach($items as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:325","path":"/resources/views/app/versions/form-inputs.blade.php"},"/resources/views/app/versions/show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.versions.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('versions.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.versions.inputs.version')\n                        </h5>\n                        <span>{{ $version->version ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.versions.inputs.item_id')\n                        </h5>\n                        <span\n                            >{{ optional($version->item)->title ?? '-' }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('versions.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Version::class)\n                    <a href=\"{{ route('versions.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:325","path":"/resources/views/app/versions/show.blade.php"},"/resources/views/app/versions/index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.versions.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Version::class)\n                            <a\n                                href=\"{{ route('versions.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.versions.inputs.version')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.versions.inputs.item_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($versions as $version)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $version->version ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($version->item)->title ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $version)\n                                        <a\n                                            href=\"{{ route('versions.edit', $version) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $version)\n                                        <a\n                                            href=\"{{ route('versions.show', $version) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $version)\n                                        <form\n                                            action=\"{{ route('versions.destroy', $version) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $versions->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:325","path":"/resources/views/app/versions/index.blade.php"},"/app/Http/Controllers/Api/CategoryController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CategoryResource;\nuse App\\Http\\Resources\\CategoryCollection;\nuse App\\Http\\Requests\\CategoryStoreRequest;\nuse App\\Http\\Requests\\CategoryUpdateRequest;\n\nclass CategoryController extends Controller\n{\n    public function index(Request $request): CategoryCollection\n    {\n        $this->authorize('view-any', Category::class);\n\n        $search = $request->get('search', '');\n\n        $categories = Category::search($search)\n            ->latest()\n            ->paginate();\n\n        return new CategoryCollection($categories);\n    }\n\n    public function store(CategoryStoreRequest $request): CategoryResource\n    {\n        $this->authorize('create', Category::class);\n\n        $validated = $request->validated();\n\n        $category = Category::create($validated);\n\n        return new CategoryResource($category);\n    }\n\n    public function show(Request $request, Category $category): CategoryResource\n    {\n        $this->authorize('view', $category);\n\n        return new CategoryResource($category);\n    }\n\n    public function update(\n        CategoryUpdateRequest $request,\n        Category $category\n    ): CategoryResource {\n        $this->authorize('update', $category);\n\n        $validated = $request->validated();\n\n        $category->update($validated);\n\n        return new CategoryResource($category);\n    }\n\n    public function destroy(Request $request, Category $category): Response\n    {\n        $this->authorize('delete', $category);\n\n        $category->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:317","path":"/app/Http/Controllers/Api/CategoryController.php"},"/tests/Feature/Api/CategoryTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_categories_list(): void\n    {\n        $categories = Category::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.categories.index'));\n\n        $response->assertOk()->assertSee($categories[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_category(): void\n    {\n        $data = Category::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.categories.store'), $data);\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(\n            route('api.categories.update', $category),\n            $data\n        );\n\n        $data['id'] = $category->id;\n\n        $this->assertDatabaseHas('categories', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_category(): void\n    {\n        $category = Category::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.categories.destroy', $category)\n        );\n\n        $this->assertModelMissing($category);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:317","path":"/tests/Feature/Api/CategoryTest.php"},"/app/Http/Controllers/Api/CategoryItemsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass CategoryItemsController extends Controller\n{\n    public function index(Request $request, Category $category): ItemCollection\n    {\n        $this->authorize('view', $category);\n\n        $search = $request->get('search', '');\n\n        $items = $category\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(\n        Request $request,\n        Category $category,\n        Item $item\n    ): Response {\n        $this->authorize('update', $category);\n\n        $category->items()->syncWithoutDetaching([$item->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Category $category,\n        Item $item\n    ): Response {\n        $this->authorize('update', $category);\n\n        $category->items()->detach($item);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:317","path":"/app/Http/Controllers/Api/CategoryItemsController.php"},"/tests/Feature/Api/CategoryItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass CategoryItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_category_items(): void\n    {\n        $category = Category::factory()->create();\n        $item = Item::factory()->create();\n\n        $category->items()->attach($item);\n\n        $response = $this->getJson(\n            route('api.categories.items.index', $category)\n        );\n\n        $response->assertOk()->assertSee($item->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_items_to_category(): void\n    {\n        $category = Category::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->postJson(\n            route('api.categories.items.store', [$category, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $category\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_items_from_category(): void\n    {\n        $category = Category::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.categories.items.store', [$category, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $category\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:317","path":"/tests/Feature/Api/CategoryItemsTest.php"},"/app/Http/Controllers/Api/ItemController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\nuse App\\Http\\Requests\\ItemStoreRequest;\nuse App\\Http\\Requests\\ItemUpdateRequest;\n\nclass ItemController extends Controller\n{\n    public function index(Request $request): ItemCollection\n    {\n        $this->authorize('view-any', Item::class);\n\n        $search = $request->get('search', '');\n\n        $items = Item::search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(ItemStoreRequest $request): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validated();\n        $validated['github_json'] = json_decode(\n            $validated['github_json'],\n            true\n        );\n\n        $item = Item::create($validated);\n\n        return new ItemResource($item);\n    }\n\n    public function show(Request $request, Item $item): ItemResource\n    {\n        $this->authorize('view', $item);\n\n        return new ItemResource($item);\n    }\n\n    public function update(ItemUpdateRequest $request, Item $item): ItemResource\n    {\n        $this->authorize('update', $item);\n\n        $validated = $request->validated();\n\n        $validated['github_json'] = json_decode(\n            $validated['github_json'],\n            true\n        );\n\n        $item->update($validated);\n\n        return new ItemResource($item);\n    }\n\n    public function destroy(Request $request, Item $item): Response\n    {\n        $this->authorize('delete', $item);\n\n        $item->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemController.php"},"/tests/Feature/Api/ItemTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\n\nuse App\\Models\\Type;\nuse App\\Models\\Vendor;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_items_list(): void\n    {\n        $items = Item::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.items.index'));\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_item(): void\n    {\n        $data = Item::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.items.store'), $data);\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $vendor = Vendor::factory()->create();\n        $type = Type::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'website' => $this->faker->text(255),\n            'rating' => $this->faker->text(255),\n            'health' => $this->faker->text(255),\n            'github_url' => $this->faker->text(255),\n            'github_stars' => $this->faker->randomNumber(0),\n            'github_forks' => $this->faker->randomNumber(0),\n            'github_json' => [],\n            'packagist_url' => $this->faker->text(255),\n            'packagist_name' => $this->faker->text(255),\n            'packagist_description' => $this->faker->text(255),\n            'packagist_downloads' => $this->faker->randomNumber(0),\n            'packagist_favers' => $this->faker->randomNumber(0),\n            'npm_url' => $this->faker->text(255),\n            'github_maintainers' => $this->faker->randomNumber(0),\n            'vendor_id' => $vendor->id,\n            'type_id' => $type->id,\n        ];\n\n        $response = $this->putJson(route('api.items.update', $item), $data);\n\n        $data['id'] = $item->id;\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_item(): void\n    {\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(route('api.items.destroy', $item));\n\n        $this->assertModelMissing($item);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemTest.php"},"/app/Http/Controllers/Api/ItemVersionsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\VersionResource;\nuse App\\Http\\Resources\\VersionCollection;\n\nclass ItemVersionsController extends Controller\n{\n    public function index(Request $request, Item $item): VersionCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $versions = $item\n            ->versions()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new VersionCollection($versions);\n    }\n\n    public function store(Request $request, Item $item): VersionResource\n    {\n        $this->authorize('create', Version::class);\n\n        $validated = $request->validate([\n            'version' => ['required', 'max:255', 'string'],\n        ]);\n\n        $version = $item->versions()->create($validated);\n\n        return new VersionResource($version);\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemVersionsController.php"},"/tests/Feature/Api/ItemVersionsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Version;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemVersionsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_versions(): void\n    {\n        $item = Item::factory()->create();\n        $versions = Version::factory()\n            ->count(2)\n            ->create([\n                'item_id' => $item->id,\n            ]);\n\n        $response = $this->getJson(route('api.items.versions.index', $item));\n\n        $response->assertOk()->assertSee($versions[0]->version);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_item_versions(): void\n    {\n        $item = Item::factory()->create();\n        $data = Version::factory()\n            ->make([\n                'item_id' => $item->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.items.versions.store', $item),\n            $data\n        );\n\n        $this->assertDatabaseHas('versions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $version = Version::latest('id')->first();\n\n        $this->assertEquals($item->id, $version->item_id);\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemVersionsTest.php"},"/app/Http/Controllers/Api/ItemPlatformsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Platform;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PlatformCollection;\n\nclass ItemPlatformsController extends Controller\n{\n    public function index(Request $request, Item $item): PlatformCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $platforms = $item\n            ->platforms()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new PlatformCollection($platforms);\n    }\n\n    public function store(\n        Request $request,\n        Item $item,\n        Platform $platform\n    ): Response {\n        $this->authorize('update', $item);\n\n        $item->platforms()->syncWithoutDetaching([$platform->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Item $item,\n        Platform $platform\n    ): Response {\n        $this->authorize('update', $item);\n\n        $item->platforms()->detach($platform);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemPlatformsController.php"},"/tests/Feature/Api/ItemPlatformsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Platform;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemPlatformsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_platforms(): void\n    {\n        $item = Item::factory()->create();\n        $platform = Platform::factory()->create();\n\n        $item->platforms()->attach($platform);\n\n        $response = $this->getJson(route('api.items.platforms.index', $item));\n\n        $response->assertOk()->assertSee($platform->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_platforms_to_item(): void\n    {\n        $item = Item::factory()->create();\n        $platform = Platform::factory()->create();\n\n        $response = $this->postJson(\n            route('api.items.platforms.store', [$item, $platform])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $item\n                ->platforms()\n                ->where('platforms.id', $platform->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_platforms_from_item(): void\n    {\n        $item = Item::factory()->create();\n        $platform = Platform::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.items.platforms.store', [$item, $platform])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $item\n                ->platforms()\n                ->where('platforms.id', $platform->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemPlatformsTest.php"},"/app/Http/Controllers/Api/ItemTagsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\Item;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\n\nclass ItemTagsController extends Controller\n{\n    public function index(Request $request, Item $item): TagCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $tags = $item\n            ->tags()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    public function store(Request $request, Item $item, Tag $tag): Response\n    {\n        $this->authorize('update', $item);\n\n        $item->tags()->syncWithoutDetaching([$tag->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(Request $request, Item $item, Tag $tag): Response\n    {\n        $this->authorize('update', $item);\n\n        $item->tags()->detach($tag);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemTagsController.php"},"/tests/Feature/Api/ItemTagsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemTagsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_tags(): void\n    {\n        $item = Item::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $item->tags()->attach($tag);\n\n        $response = $this->getJson(route('api.items.tags.index', $item));\n\n        $response->assertOk()->assertSee($tag->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_tags_to_item(): void\n    {\n        $item = Item::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $response = $this->postJson(\n            route('api.items.tags.store', [$item, $tag])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $item\n                ->tags()\n                ->where('tags.id', $tag->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_tags_from_item(): void\n    {\n        $item = Item::factory()->create();\n        $tag = Tag::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.items.tags.store', [$item, $tag])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $item\n                ->tags()\n                ->where('tags.id', $tag->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemTagsTest.php"},"/app/Http/Controllers/Api/ItemCategoriesController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Category;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\CategoryCollection;\n\nclass ItemCategoriesController extends Controller\n{\n    public function index(Request $request, Item $item): CategoryCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $categories = $item\n            ->categories()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new CategoryCollection($categories);\n    }\n\n    public function store(\n        Request $request,\n        Item $item,\n        Category $category\n    ): Response {\n        $this->authorize('update', $item);\n\n        $item->categories()->syncWithoutDetaching([$category->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Item $item,\n        Category $category\n    ): Response {\n        $this->authorize('update', $item);\n\n        $item->categories()->detach($category);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemCategoriesController.php"},"/tests/Feature/Api/ItemCategoriesTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Category;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemCategoriesTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_categories(): void\n    {\n        $item = Item::factory()->create();\n        $category = Category::factory()->create();\n\n        $item->categories()->attach($category);\n\n        $response = $this->getJson(route('api.items.categories.index', $item));\n\n        $response->assertOk()->assertSee($category->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_categories_to_item(): void\n    {\n        $item = Item::factory()->create();\n        $category = Category::factory()->create();\n\n        $response = $this->postJson(\n            route('api.items.categories.store', [$item, $category])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $item\n                ->categories()\n                ->where('categories.id', $category->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_categories_from_item(): void\n    {\n        $item = Item::factory()->create();\n        $category = Category::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.items.categories.store', [$item, $category])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $item\n                ->categories()\n                ->where('categories.id', $category->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemCategoriesTest.php"},"/app/Http/Controllers/Api/ItemStacksController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Stack;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\StackCollection;\n\nclass ItemStacksController extends Controller\n{\n    public function index(Request $request, Item $item): StackCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $stacks = $item\n            ->stacks()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new StackCollection($stacks);\n    }\n\n    public function store(Request $request, Item $item, Stack $stack): Response\n    {\n        $this->authorize('update', $item);\n\n        $item->stacks()->syncWithoutDetaching([$stack->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Item $item,\n        Stack $stack\n    ): Response {\n        $this->authorize('update', $item);\n\n        $item->stacks()->detach($stack);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemStacksController.php"},"/tests/Feature/Api/ItemStacksTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Stack;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemStacksTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_stacks(): void\n    {\n        $item = Item::factory()->create();\n        $stack = Stack::factory()->create();\n\n        $item->stacks()->attach($stack);\n\n        $response = $this->getJson(route('api.items.stacks.index', $item));\n\n        $response->assertOk()->assertSee($stack->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_stacks_to_item(): void\n    {\n        $item = Item::factory()->create();\n        $stack = Stack::factory()->create();\n\n        $response = $this->postJson(\n            route('api.items.stacks.store', [$item, $stack])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $item\n                ->stacks()\n                ->where('stacks.id', $stack->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_stacks_from_item(): void\n    {\n        $item = Item::factory()->create();\n        $stack = Stack::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.items.stacks.store', [$item, $stack])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $item\n                ->stacks()\n                ->where('stacks.id', $stack->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemStacksTest.php"},"/app/Http/Controllers/Api/ItemItemsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass ItemItemsController extends Controller\n{\n    public function index(Request $request, Item $item): ItemCollection\n    {\n        $this->authorize('view', $item);\n\n        $search = $request->get('search', '');\n\n        $items = $item\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Item $item, Item $item): Response\n    {\n        $this->authorize('update', $item);\n\n        $item->items()->syncWithoutDetaching([$item->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(Request $request, Item $item, Item $item): Response\n    {\n        $this->authorize('update', $item);\n\n        $item->items()->detach($item);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:318","path":"/app/Http/Controllers/Api/ItemItemsController.php"},"/tests/Feature/Api/ItemItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ItemItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_item_items(): void\n    {\n        $item = Item::factory()->create();\n        $item = Item::factory()->create();\n\n        $item->items()->attach($item);\n\n        $response = $this->getJson(route('api.items.items.index', $item));\n\n        $response->assertOk()->assertSee($item->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_items_to_item(): void\n    {\n        $item = Item::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->postJson(\n            route('api.items.items.store', [$item, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $item\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_items_from_item(): void\n    {\n        $item = Item::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.items.items.store', [$item, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $item\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:318","path":"/tests/Feature/Api/ItemItemsTest.php"},"/app/Http/Controllers/Api/PlatformController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Platform;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\PlatformResource;\nuse App\\Http\\Resources\\PlatformCollection;\nuse App\\Http\\Requests\\PlatformStoreRequest;\nuse App\\Http\\Requests\\PlatformUpdateRequest;\n\nclass PlatformController extends Controller\n{\n    public function index(Request $request): PlatformCollection\n    {\n        $this->authorize('view-any', Platform::class);\n\n        $search = $request->get('search', '');\n\n        $platforms = Platform::search($search)\n            ->latest()\n            ->paginate();\n\n        return new PlatformCollection($platforms);\n    }\n\n    public function store(PlatformStoreRequest $request): PlatformResource\n    {\n        $this->authorize('create', Platform::class);\n\n        $validated = $request->validated();\n\n        $platform = Platform::create($validated);\n\n        return new PlatformResource($platform);\n    }\n\n    public function show(Request $request, Platform $platform): PlatformResource\n    {\n        $this->authorize('view', $platform);\n\n        return new PlatformResource($platform);\n    }\n\n    public function update(\n        PlatformUpdateRequest $request,\n        Platform $platform\n    ): PlatformResource {\n        $this->authorize('update', $platform);\n\n        $validated = $request->validated();\n\n        $platform->update($validated);\n\n        return new PlatformResource($platform);\n    }\n\n    public function destroy(Request $request, Platform $platform): Response\n    {\n        $this->authorize('delete', $platform);\n\n        $platform->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:319","path":"/app/Http/Controllers/Api/PlatformController.php"},"/tests/Feature/Api/PlatformTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Platform;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PlatformTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_platforms_list(): void\n    {\n        $platforms = Platform::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.platforms.index'));\n\n        $response->assertOk()->assertSee($platforms[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_platform(): void\n    {\n        $data = Platform::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.platforms.store'), $data);\n\n        $this->assertDatabaseHas('platforms', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(\n            route('api.platforms.update', $platform),\n            $data\n        );\n\n        $data['id'] = $platform->id;\n\n        $this->assertDatabaseHas('platforms', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_platform(): void\n    {\n        $platform = Platform::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.platforms.destroy', $platform)\n        );\n\n        $this->assertModelMissing($platform);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:319","path":"/tests/Feature/Api/PlatformTest.php"},"/app/Http/Controllers/Api/PlatformItemsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Platform;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass PlatformItemsController extends Controller\n{\n    public function index(Request $request, Platform $platform): ItemCollection\n    {\n        $this->authorize('view', $platform);\n\n        $search = $request->get('search', '');\n\n        $items = $platform\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(\n        Request $request,\n        Platform $platform,\n        Item $item\n    ): Response {\n        $this->authorize('update', $platform);\n\n        $platform->items()->syncWithoutDetaching([$item->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Platform $platform,\n        Item $item\n    ): Response {\n        $this->authorize('update', $platform);\n\n        $platform->items()->detach($item);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:319","path":"/app/Http/Controllers/Api/PlatformItemsController.php"},"/tests/Feature/Api/PlatformItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Platform;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass PlatformItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_platform_items(): void\n    {\n        $platform = Platform::factory()->create();\n        $item = Item::factory()->create();\n\n        $platform->items()->attach($item);\n\n        $response = $this->getJson(\n            route('api.platforms.items.index', $platform)\n        );\n\n        $response->assertOk()->assertSee($item->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_items_to_platform(): void\n    {\n        $platform = Platform::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->postJson(\n            route('api.platforms.items.store', [$platform, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $platform\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_items_from_platform(): void\n    {\n        $platform = Platform::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.platforms.items.store', [$platform, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $platform\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:319","path":"/tests/Feature/Api/PlatformItemsTest.php"},"/app/Http/Controllers/Api/StackController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Stack;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\StackResource;\nuse App\\Http\\Resources\\StackCollection;\nuse App\\Http\\Requests\\StackStoreRequest;\nuse App\\Http\\Requests\\StackUpdateRequest;\n\nclass StackController extends Controller\n{\n    public function index(Request $request): StackCollection\n    {\n        $this->authorize('view-any', Stack::class);\n\n        $search = $request->get('search', '');\n\n        $stacks = Stack::search($search)\n            ->latest()\n            ->paginate();\n\n        return new StackCollection($stacks);\n    }\n\n    public function store(StackStoreRequest $request): StackResource\n    {\n        $this->authorize('create', Stack::class);\n\n        $validated = $request->validated();\n\n        $stack = Stack::create($validated);\n\n        return new StackResource($stack);\n    }\n\n    public function show(Request $request, Stack $stack): StackResource\n    {\n        $this->authorize('view', $stack);\n\n        return new StackResource($stack);\n    }\n\n    public function update(\n        StackUpdateRequest $request,\n        Stack $stack\n    ): StackResource {\n        $this->authorize('update', $stack);\n\n        $validated = $request->validated();\n\n        $stack->update($validated);\n\n        return new StackResource($stack);\n    }\n\n    public function destroy(Request $request, Stack $stack): Response\n    {\n        $this->authorize('delete', $stack);\n\n        $stack->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:320","path":"/app/Http/Controllers/Api/StackController.php"},"/tests/Feature/Api/StackTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Stack;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass StackTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_stacks_list(): void\n    {\n        $stacks = Stack::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.stacks.index'));\n\n        $response->assertOk()->assertSee($stacks[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_stack(): void\n    {\n        $data = Stack::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.stacks.store'), $data);\n\n        $this->assertDatabaseHas('stacks', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $user = User::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n            'public' => $this->faker->boolean(),\n            'major' => $this->faker->boolean(),\n            'user_id' => $user->id,\n        ];\n\n        $response = $this->putJson(route('api.stacks.update', $stack), $data);\n\n        $data['id'] = $stack->id;\n\n        $this->assertDatabaseHas('stacks', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_stack(): void\n    {\n        $stack = Stack::factory()->create();\n\n        $response = $this->deleteJson(route('api.stacks.destroy', $stack));\n\n        $this->assertModelMissing($stack);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:320","path":"/tests/Feature/Api/StackTest.php"},"/app/Http/Controllers/Api/StackItemsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Item;\nuse App\\Models\\Stack;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass StackItemsController extends Controller\n{\n    public function index(Request $request, Stack $stack): ItemCollection\n    {\n        $this->authorize('view', $stack);\n\n        $search = $request->get('search', '');\n\n        $items = $stack\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Stack $stack, Item $item): Response\n    {\n        $this->authorize('update', $stack);\n\n        $stack->items()->syncWithoutDetaching([$item->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Stack $stack,\n        Item $item\n    ): Response {\n        $this->authorize('update', $stack);\n\n        $stack->items()->detach($item);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:320","path":"/app/Http/Controllers/Api/StackItemsController.php"},"/tests/Feature/Api/StackItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Stack;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass StackItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_stack_items(): void\n    {\n        $stack = Stack::factory()->create();\n        $item = Item::factory()->create();\n\n        $stack->items()->attach($item);\n\n        $response = $this->getJson(route('api.stacks.items.index', $stack));\n\n        $response->assertOk()->assertSee($item->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_items_to_stack(): void\n    {\n        $stack = Stack::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->postJson(\n            route('api.stacks.items.store', [$stack, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $stack\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_items_from_stack(): void\n    {\n        $stack = Stack::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.stacks.items.store', [$stack, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $stack\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:320","path":"/tests/Feature/Api/StackItemsTest.php"},"/app/Http/Controllers/Api/TagController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\TagResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TagCollection;\nuse App\\Http\\Requests\\TagStoreRequest;\nuse App\\Http\\Requests\\TagUpdateRequest;\n\nclass TagController extends Controller\n{\n    public function index(Request $request): TagCollection\n    {\n        $this->authorize('view-any', Tag::class);\n\n        $search = $request->get('search', '');\n\n        $tags = Tag::search($search)\n            ->latest()\n            ->paginate();\n\n        return new TagCollection($tags);\n    }\n\n    public function store(TagStoreRequest $request): TagResource\n    {\n        $this->authorize('create', Tag::class);\n\n        $validated = $request->validated();\n\n        $tag = Tag::create($validated);\n\n        return new TagResource($tag);\n    }\n\n    public function show(Request $request, Tag $tag): TagResource\n    {\n        $this->authorize('view', $tag);\n\n        return new TagResource($tag);\n    }\n\n    public function update(TagUpdateRequest $request, Tag $tag): TagResource\n    {\n        $this->authorize('update', $tag);\n\n        $validated = $request->validated();\n\n        $tag->update($validated);\n\n        return new TagResource($tag);\n    }\n\n    public function destroy(Request $request, Tag $tag): Response\n    {\n        $this->authorize('delete', $tag);\n\n        $tag->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:321","path":"/app/Http/Controllers/Api/TagController.php"},"/tests/Feature/Api/TagTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_tags_list(): void\n    {\n        $tags = Tag::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.tags.index'));\n\n        $response->assertOk()->assertSee($tags[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_tag(): void\n    {\n        $data = Tag::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.tags.store'), $data);\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(route('api.tags.update', $tag), $data);\n\n        $data['id'] = $tag->id;\n\n        $this->assertDatabaseHas('tags', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_tag(): void\n    {\n        $tag = Tag::factory()->create();\n\n        $response = $this->deleteJson(route('api.tags.destroy', $tag));\n\n        $this->assertModelMissing($tag);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:321","path":"/tests/Feature/Api/TagTest.php"},"/app/Http/Controllers/Api/TagItemsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\Item;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass TagItemsController extends Controller\n{\n    public function index(Request $request, Tag $tag): ItemCollection\n    {\n        $this->authorize('view', $tag);\n\n        $search = $request->get('search', '');\n\n        $items = $tag\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Tag $tag, Item $item): Response\n    {\n        $this->authorize('update', $tag);\n\n        $tag->items()->syncWithoutDetaching([$item->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(Request $request, Tag $tag, Item $item): Response\n    {\n        $this->authorize('update', $tag);\n\n        $tag->items()->detach($item);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:321","path":"/app/Http/Controllers/Api/TagItemsController.php"},"/tests/Feature/Api/TagItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\Tag;\nuse App\\Models\\User;\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TagItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_tag_items(): void\n    {\n        $tag = Tag::factory()->create();\n        $item = Item::factory()->create();\n\n        $tag->items()->attach($item);\n\n        $response = $this->getJson(route('api.tags.items.index', $tag));\n\n        $response->assertOk()->assertSee($item->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_items_to_tag(): void\n    {\n        $tag = Tag::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->postJson(\n            route('api.tags.items.store', [$tag, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $tag\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_items_from_tag(): void\n    {\n        $tag = Tag::factory()->create();\n        $item = Item::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.tags.items.store', [$tag, $item])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $tag\n                ->items()\n                ->where('items.id', $item->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:321","path":"/tests/Feature/Api/TagItemsTest.php"},"/app/Http/Controllers/Api/TypeController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Type;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\TypeResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\TypeCollection;\nuse App\\Http\\Requests\\TypeStoreRequest;\nuse App\\Http\\Requests\\TypeUpdateRequest;\n\nclass TypeController extends Controller\n{\n    public function index(Request $request): TypeCollection\n    {\n        $this->authorize('view-any', Type::class);\n\n        $search = $request->get('search', '');\n\n        $types = Type::search($search)\n            ->latest()\n            ->paginate();\n\n        return new TypeCollection($types);\n    }\n\n    public function store(TypeStoreRequest $request): TypeResource\n    {\n        $this->authorize('create', Type::class);\n\n        $validated = $request->validated();\n\n        $type = Type::create($validated);\n\n        return new TypeResource($type);\n    }\n\n    public function show(Request $request, Type $type): TypeResource\n    {\n        $this->authorize('view', $type);\n\n        return new TypeResource($type);\n    }\n\n    public function update(TypeUpdateRequest $request, Type $type): TypeResource\n    {\n        $this->authorize('update', $type);\n\n        $validated = $request->validated();\n\n        $type->update($validated);\n\n        return new TypeResource($type);\n    }\n\n    public function destroy(Request $request, Type $type): Response\n    {\n        $this->authorize('delete', $type);\n\n        $type->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:322","path":"/app/Http/Controllers/Api/TypeController.php"},"/tests/Feature/Api/TypeTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Type;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TypeTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_types_list(): void\n    {\n        $types = Type::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.types.index'));\n\n        $response->assertOk()->assertSee($types[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_type(): void\n    {\n        $data = Type::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.types.store'), $data);\n\n        $this->assertDatabaseHas('types', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(route('api.types.update', $type), $data);\n\n        $data['id'] = $type->id;\n\n        $this->assertDatabaseHas('types', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_type(): void\n    {\n        $type = Type::factory()->create();\n\n        $response = $this->deleteJson(route('api.types.destroy', $type));\n\n        $this->assertModelMissing($type);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:322","path":"/tests/Feature/Api/TypeTest.php"},"/app/Http/Controllers/Api/TypeItemsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Type;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass TypeItemsController extends Controller\n{\n    public function index(Request $request, Type $type): ItemCollection\n    {\n        $this->authorize('view', $type);\n\n        $search = $request->get('search', '');\n\n        $items = $type\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Type $type): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validate([\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'vendor_id' => ['required', 'exists:vendors,id'],\n            'website' => ['required', 'max:255', 'string'],\n            'rating' => ['required', 'max:255', 'string'],\n            'health' => ['required', 'max:255', 'string'],\n            'github_url' => ['required', 'max:255', 'string'],\n            'github_stars' => ['required', 'numeric'],\n            'github_forks' => ['required', 'numeric'],\n            'github_json' => ['required', 'max:255', 'json'],\n            'packagist_url' => ['required', 'max:255', 'string'],\n            'packagist_name' => ['required', 'max:255', 'string'],\n            'packagist_description' => ['required', 'max:255', 'string'],\n            'packagist_downloads' => ['required', 'numeric'],\n            'packagist_favers' => ['required', 'numeric'],\n            'npm_url' => ['required', 'max:255', 'string'],\n            'github_maintainers' => ['required', 'numeric'],\n        ]);\n\n        $item = $type->items()->create($validated);\n\n        return new ItemResource($item);\n    }\n}\n","module":"crud:322","path":"/app/Http/Controllers/Api/TypeItemsController.php"},"/tests/Feature/Api/TypeItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Type;\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass TypeItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_type_items(): void\n    {\n        $type = Type::factory()->create();\n        $items = Item::factory()\n            ->count(2)\n            ->create([\n                'type_id' => $type->id,\n            ]);\n\n        $response = $this->getJson(route('api.types.items.index', $type));\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_type_items(): void\n    {\n        $type = Type::factory()->create();\n        $data = Item::factory()\n            ->make([\n                'type_id' => $type->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.types.items.store', $type),\n            $data\n        );\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $item = Item::latest('id')->first();\n\n        $this->assertEquals($type->id, $item->type_id);\n    }\n}\n","module":"crud:322","path":"/tests/Feature/Api/TypeItemsTest.php"},"/app/Http/Controllers/Api/UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    public function index(Request $request): UserCollection\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    public function store(UserStoreRequest $request): UserResource\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    public function show(Request $request, User $user): UserResource\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    public function update(UserUpdateRequest $request, User $user): UserResource\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        $user->syncRoles($request->roles);\n\n        return new UserResource($user);\n    }\n\n    public function destroy(Request $request, User $user): Response\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:323","path":"/app/Http/Controllers/Api/UserController.php"},"/tests/Feature/Api/UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertModelMissing($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:323","path":"/tests/Feature/Api/UserTest.php"},"/app/Http/Controllers/Api/UserStacksController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\StackResource;\nuse App\\Http\\Resources\\StackCollection;\n\nclass UserStacksController extends Controller\n{\n    public function index(Request $request, User $user): StackCollection\n    {\n        $this->authorize('view', $user);\n\n        $search = $request->get('search', '');\n\n        $stacks = $user\n            ->stacks()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new StackCollection($stacks);\n    }\n\n    public function store(Request $request, User $user): StackResource\n    {\n        $this->authorize('create', Stack::class);\n\n        $validated = $request->validate([\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'public' => ['required', 'boolean'],\n            'major' => ['required', 'boolean'],\n        ]);\n\n        $stack = $user->stacks()->create($validated);\n\n        return new StackResource($stack);\n    }\n}\n","module":"crud:323","path":"/app/Http/Controllers/Api/UserStacksController.php"},"/tests/Feature/Api/UserStacksTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Stack;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserStacksTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_stacks(): void\n    {\n        $user = User::factory()->create();\n        $stacks = Stack::factory()\n            ->count(2)\n            ->create([\n                'user_id' => $user->id,\n            ]);\n\n        $response = $this->getJson(route('api.users.stacks.index', $user));\n\n        $response->assertOk()->assertSee($stacks[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_stacks(): void\n    {\n        $user = User::factory()->create();\n        $data = Stack::factory()\n            ->make([\n                'user_id' => $user->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.users.stacks.store', $user),\n            $data\n        );\n\n        $this->assertDatabaseHas('stacks', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $stack = Stack::latest('id')->first();\n\n        $this->assertEquals($user->id, $stack->user_id);\n    }\n}\n","module":"crud:323","path":"/tests/Feature/Api/UserStacksTest.php"},"/app/Http/Controllers/Api/VendorController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Vendor;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\VendorResource;\nuse App\\Http\\Resources\\VendorCollection;\nuse App\\Http\\Requests\\VendorStoreRequest;\nuse App\\Http\\Requests\\VendorUpdateRequest;\n\nclass VendorController extends Controller\n{\n    public function index(Request $request): VendorCollection\n    {\n        $this->authorize('view-any', Vendor::class);\n\n        $search = $request->get('search', '');\n\n        $vendors = Vendor::search($search)\n            ->latest()\n            ->paginate();\n\n        return new VendorCollection($vendors);\n    }\n\n    public function store(VendorStoreRequest $request): VendorResource\n    {\n        $this->authorize('create', Vendor::class);\n\n        $validated = $request->validated();\n\n        $vendor = Vendor::create($validated);\n\n        return new VendorResource($vendor);\n    }\n\n    public function show(Request $request, Vendor $vendor): VendorResource\n    {\n        $this->authorize('view', $vendor);\n\n        return new VendorResource($vendor);\n    }\n\n    public function update(\n        VendorUpdateRequest $request,\n        Vendor $vendor\n    ): VendorResource {\n        $this->authorize('update', $vendor);\n\n        $validated = $request->validated();\n\n        $vendor->update($validated);\n\n        return new VendorResource($vendor);\n    }\n\n    public function destroy(Request $request, Vendor $vendor): Response\n    {\n        $this->authorize('delete', $vendor);\n\n        $vendor->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:324","path":"/app/Http/Controllers/Api/VendorController.php"},"/tests/Feature/Api/VendorTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Vendor;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VendorTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_vendors_list(): void\n    {\n        $vendors = Vendor::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.vendors.index'));\n\n        $response->assertOk()->assertSee($vendors[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_vendor(): void\n    {\n        $data = Vendor::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.vendors.store'), $data);\n\n        $this->assertDatabaseHas('vendors', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $data = [\n            'title' => $this->faker->sentence(10),\n            'slug' => $this->faker->slug(),\n            'github' => $this->faker->text(255),\n            'packagist' => $this->faker->text(255),\n            'npm' => $this->faker->text(255),\n            'website' => $this->faker->text(255),\n            'description' => $this->faker->sentence(15),\n        ];\n\n        $response = $this->putJson(route('api.vendors.update', $vendor), $data);\n\n        $data['id'] = $vendor->id;\n\n        $this->assertDatabaseHas('vendors', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_vendor(): void\n    {\n        $vendor = Vendor::factory()->create();\n\n        $response = $this->deleteJson(route('api.vendors.destroy', $vendor));\n\n        $this->assertModelMissing($vendor);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:324","path":"/tests/Feature/Api/VendorTest.php"},"/app/Http/Controllers/Api/VendorItemsController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Vendor;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Resources\\ItemResource;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ItemCollection;\n\nclass VendorItemsController extends Controller\n{\n    public function index(Request $request, Vendor $vendor): ItemCollection\n    {\n        $this->authorize('view', $vendor);\n\n        $search = $request->get('search', '');\n\n        $items = $vendor\n            ->items()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new ItemCollection($items);\n    }\n\n    public function store(Request $request, Vendor $vendor): ItemResource\n    {\n        $this->authorize('create', Item::class);\n\n        $validated = $request->validate([\n            'title' => ['required', 'max:255', 'string'],\n            'slug' => ['required', 'max:255', 'string'],\n            'description' => ['required', 'max:255', 'string'],\n            'type_id' => ['required', 'exists:types,id'],\n            'website' => ['required', 'max:255', 'string'],\n            'rating' => ['required', 'max:255', 'string'],\n            'health' => ['required', 'max:255', 'string'],\n            'github_url' => ['required', 'max:255', 'string'],\n            'github_stars' => ['required', 'numeric'],\n            'github_forks' => ['required', 'numeric'],\n            'github_json' => ['required', 'max:255', 'json'],\n            'packagist_url' => ['required', 'max:255', 'string'],\n            'packagist_name' => ['required', 'max:255', 'string'],\n            'packagist_description' => ['required', 'max:255', 'string'],\n            'packagist_downloads' => ['required', 'numeric'],\n            'packagist_favers' => ['required', 'numeric'],\n            'npm_url' => ['required', 'max:255', 'string'],\n            'github_maintainers' => ['required', 'numeric'],\n        ]);\n\n        $item = $vendor->items()->create($validated);\n\n        return new ItemResource($item);\n    }\n}\n","module":"crud:324","path":"/app/Http/Controllers/Api/VendorItemsController.php"},"/tests/Feature/Api/VendorItemsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Item;\nuse App\\Models\\Vendor;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VendorItemsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_vendor_items(): void\n    {\n        $vendor = Vendor::factory()->create();\n        $items = Item::factory()\n            ->count(2)\n            ->create([\n                'vendor_id' => $vendor->id,\n            ]);\n\n        $response = $this->getJson(route('api.vendors.items.index', $vendor));\n\n        $response->assertOk()->assertSee($items[0]->title);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_vendor_items(): void\n    {\n        $vendor = Vendor::factory()->create();\n        $data = Item::factory()\n            ->make([\n                'vendor_id' => $vendor->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.vendors.items.store', $vendor),\n            $data\n        );\n\n        $this->assertDatabaseHas('items', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $item = Item::latest('id')->first();\n\n        $this->assertEquals($vendor->id, $item->vendor_id);\n    }\n}\n","module":"crud:324","path":"/tests/Feature/Api/VendorItemsTest.php"},"/app/Http/Controllers/Api/VersionController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Version;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\VersionResource;\nuse App\\Http\\Resources\\VersionCollection;\nuse App\\Http\\Requests\\VersionStoreRequest;\nuse App\\Http\\Requests\\VersionUpdateRequest;\n\nclass VersionController extends Controller\n{\n    public function index(Request $request): VersionCollection\n    {\n        $this->authorize('view-any', Version::class);\n\n        $search = $request->get('search', '');\n\n        $versions = Version::search($search)\n            ->latest()\n            ->paginate();\n\n        return new VersionCollection($versions);\n    }\n\n    public function store(VersionStoreRequest $request): VersionResource\n    {\n        $this->authorize('create', Version::class);\n\n        $validated = $request->validated();\n\n        $version = Version::create($validated);\n\n        return new VersionResource($version);\n    }\n\n    public function show(Request $request, Version $version): VersionResource\n    {\n        $this->authorize('view', $version);\n\n        return new VersionResource($version);\n    }\n\n    public function update(\n        VersionUpdateRequest $request,\n        Version $version\n    ): VersionResource {\n        $this->authorize('update', $version);\n\n        $validated = $request->validated();\n\n        $version->update($validated);\n\n        return new VersionResource($version);\n    }\n\n    public function destroy(Request $request, Version $version): Response\n    {\n        $this->authorize('delete', $version);\n\n        $version->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:325","path":"/app/Http/Controllers/Api/VersionController.php"},"/tests/Feature/Api/VersionTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Version;\n\nuse App\\Models\\Item;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VersionTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_versions_list(): void\n    {\n        $versions = Version::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.versions.index'));\n\n        $response->assertOk()->assertSee($versions[0]->version);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_version(): void\n    {\n        $data = Version::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.versions.store'), $data);\n\n        $this->assertDatabaseHas('versions', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $item = Item::factory()->create();\n\n        $data = [\n            'version' => $this->faker->text(255),\n            'item_id' => $item->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.versions.update', $version),\n            $data\n        );\n\n        $data['id'] = $version->id;\n\n        $this->assertDatabaseHas('versions', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_version(): void\n    {\n        $version = Version::factory()->create();\n\n        $response = $this->deleteJson(route('api.versions.destroy', $version));\n\n        $this->assertModelMissing($version);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:325","path":"/tests/Feature/Api/VersionTest.php"},"/app/Http/Controllers/Api/VersionVersionsController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Version;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\VersionCollection;\n\nclass VersionVersionsController extends Controller\n{\n    public function index(Request $request, Version $version): VersionCollection\n    {\n        $this->authorize('view', $version);\n\n        $search = $request->get('search', '');\n\n        $versions = $version\n            ->versions()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new VersionCollection($versions);\n    }\n\n    public function store(\n        Request $request,\n        Version $version,\n        Version $version\n    ): Response {\n        $this->authorize('update', $version);\n\n        $version->versions()->syncWithoutDetaching([$version->id]);\n\n        return response()->noContent();\n    }\n\n    public function destroy(\n        Request $request,\n        Version $version,\n        Version $version\n    ): Response {\n        $this->authorize('update', $version);\n\n        $version->versions()->detach($version);\n\n        return response()->noContent();\n    }\n}\n","module":"crud:325","path":"/app/Http/Controllers/Api/VersionVersionsController.php"},"/tests/Feature/Api/VersionVersionsTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Version;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass VersionVersionsTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->seed(\\Database\\Seeders\\PermissionsSeeder::class);\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_version_versions(): void\n    {\n        $version = Version::factory()->create();\n        $version = Version::factory()->create();\n\n        $version->versions()->attach($version);\n\n        $response = $this->getJson(\n            route('api.versions.versions.index', $version)\n        );\n\n        $response->assertOk()->assertSee($version->version);\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_attach_versions_to_version(): void\n    {\n        $version = Version::factory()->create();\n        $version = Version::factory()->create();\n\n        $response = $this->postJson(\n            route('api.versions.versions.store', [$version, $version])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertTrue(\n            $version\n                ->versions()\n                ->where('versions.id', $version->id)\n                ->exists()\n        );\n    }\n\n    /**\n     * @test\n     */\n    public function it_can_detach_versions_from_version(): void\n    {\n        $version = Version::factory()->create();\n        $version = Version::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.versions.versions.store', [$version, $version])\n        );\n\n        $response->assertNoContent();\n\n        $this->assertFalse(\n            $version\n                ->versions()\n                ->where('versions.id', $version->id)\n                ->exists()\n        );\n    }\n}\n","module":"crud:325","path":"/tests/Feature/Api/VersionVersionsTest.php"},"app/Filament/Resources/CategoryResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Category;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\CategoryResource\\Pages;\n\nclass CategoryResource extends Resource\n{\n    protected static ?string $model = Category::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [CategoryResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCategories::route('/'),\n            'create' => Pages\\CreateCategory::route('/create'),\n            'view' => Pages\\ViewCategory::route('/{record}'),\n            'edit' => Pages\\EditCategory::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/CategoryResource.php"},"app/Filament/Resources/CategoryResource/Pages/EditCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass EditCategory extends EditRecord\n{\n    protected static string $resource = CategoryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/CategoryResource/Pages/EditCategory.php"},"app/Filament/Resources/CategoryResource/Pages/ViewCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass ViewCategory extends ViewRecord\n{\n    protected static string $resource = CategoryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/CategoryResource/Pages/ViewCategory.php"},"app/Filament/Resources/CategoryResource/Pages/ListCategories.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass ListCategories extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = CategoryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/CategoryResource/Pages/ListCategories.php"},"app/Filament/Resources/CategoryResource/Pages/CreateCategory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\CategoryResource;\n\nclass CreateCategory extends CreateRecord\n{\n    protected static string $resource = CategoryResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/CategoryResource/Pages/CreateCategory.php"},"app/Filament/Resources/CategoryResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\CategoryResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/CategoryResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/ItemResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Item;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\ItemResource\\Pages;\n\nclass ItemResource extends Resource\n{\n    protected static ?string $model = Item::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('vendor_id')\n                        ->rules(['exists:vendors,id'])\n                        ->required()\n                        ->relationship('vendor', 'title')\n                        ->searchable()\n                        ->placeholder('Vendor')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('type_id')\n                        ->rules(['exists:types,id'])\n                        ->required()\n                        ->relationship('type', 'title')\n                        ->searchable()\n                        ->placeholder('Type')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('website')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Website')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('rating')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Rating')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('health')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Health')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('github_url')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Github Url')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('github_stars')\n                        ->rules(['numeric'])\n                        ->required()\n                        ->numeric()\n                        ->placeholder('Github Stars')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('github_forks')\n                        ->rules(['numeric'])\n                        ->required()\n                        ->numeric()\n                        ->placeholder('Github Forks')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    KeyValue::make('github_json')\n                        ->required()\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist_url')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Packagist Url')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist_name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Packagist Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist_description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Packagist Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist_downloads')\n                        ->rules(['numeric'])\n                        ->required()\n                        ->numeric()\n                        ->placeholder('Packagist Downloads')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist_favers')\n                        ->rules(['numeric'])\n                        ->required()\n                        ->numeric()\n                        ->placeholder('Packagist Favers')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('npm_url')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Npm Url')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('github_maintainers')\n                        ->rules(['numeric'])\n                        ->required()\n                        ->numeric()\n                        ->placeholder('Github Maintainers')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')\n                    ->toggleable()\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('website')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('health')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n                Tables\\Columns\\TextColumn::make('github_forks')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n                Tables\\Columns\\TextColumn::make('packagist_url')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_downloads')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n                Tables\\Columns\\TextColumn::make('packagist_favers')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n                Tables\\Columns\\TextColumn::make('npm_url')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers')\n                    ->toggleable()\n                    ->searchable(true, null, true),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('vendor_id')\n                    ->relationship('vendor', 'title')\n                    ->indicator('Vendor')\n                    ->multiple()\n                    ->label('Vendor'),\n\n                SelectFilter::make('type_id')\n                    ->relationship('type', 'title')\n                    ->indicator('Type')\n                    ->multiple()\n                    ->label('Type'),\n            ]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            ItemResource\\RelationManagers\\VersionsRelationManager::class,\n            ItemResource\\RelationManagers\\PlatformsRelationManager::class,\n            ItemResource\\RelationManagers\\TagsRelationManager::class,\n            ItemResource\\RelationManagers\\CategoriesRelationManager::class,\n            ItemResource\\RelationManagers\\StacksRelationManager::class,\n            ItemResource\\RelationManagers\\ItemsRelationManager::class,\n            ItemResource\\RelationManagers\\ItemsRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListItems::route('/'),\n            'create' => Pages\\CreateItem::route('/create'),\n            'view' => Pages\\ViewItem::route('/{record}'),\n            'edit' => Pages\\EditItem::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource.php"},"app/Filament/Resources/ItemResource/Pages/EditItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditItem extends EditRecord\n{\n    protected static string $resource = ItemResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource/Pages/EditItem.php"},"app/Filament/Resources/ItemResource/Pages/ViewItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\ItemResource;\n\nclass ViewItem extends ViewRecord\n{\n    protected static string $resource = ItemResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource/Pages/ViewItem.php"},"app/Filament/Resources/ItemResource/Pages/ListItems.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListItems extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = ItemResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource/Pages/ListItems.php"},"app/Filament/Resources/ItemResource/Pages/CreateItem.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\Pages;\n\nuse App\\Filament\\Resources\\ItemResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateItem extends CreateRecord\n{\n    protected static string $resource = ItemResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource/Pages/CreateItem.php"},"app/Filament/Resources/ItemResource/RelationManagers/VersionsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass VersionsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'versions';\n\n    protected static ?string $recordTitleAttribute = 'version';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('version')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Version')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('version')->limit(50),\n                Tables\\Columns\\TextColumn::make('item.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('item_id')->relationship(\n                    'item',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/ItemResource/RelationManagers/VersionsRelationManager.php"},"app/Filament/Resources/ItemResource/RelationManagers/PlatformsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass PlatformsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'platforms';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/ItemResource/RelationManagers/PlatformsRelationManager.php"},"app/Filament/Resources/ItemResource/RelationManagers/TagsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass TagsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'tags';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/ItemResource/RelationManagers/TagsRelationManager.php"},"app/Filament/Resources/ItemResource/RelationManagers/CategoriesRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass CategoriesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'categories';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:317|crud-settings:317","path":"app/Filament/Resources/ItemResource/RelationManagers/CategoriesRelationManager.php"},"app/Filament/Resources/ItemResource/RelationManagers/StacksRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass StacksRelationManager extends RelationManager\n{\n    protected static string $relationship = 'stacks';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('public')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('major')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('user_id')\n                    ->rules(['exists:users,id'])\n                    ->relationship('created_by', 'name')\n                    ->searchable()\n                    ->placeholder('Created By')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\IconColumn::make('public'),\n                Tables\\Columns\\IconColumn::make('major'),\n                Tables\\Columns\\TextColumn::make('createdBy.name')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('user_id')->relationship(\n                    'createdBy',\n                    'name'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/ItemResource/RelationManagers/StacksRelationManager.php"},"app/Filament/Resources/ItemResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/ItemResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/PlatformResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Platform;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\PlatformResource\\Pages;\n\nclass PlatformResource extends Resource\n{\n    protected static ?string $model = Platform::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [PlatformResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPlatforms::route('/'),\n            'create' => Pages\\CreatePlatform::route('/create'),\n            'view' => Pages\\ViewPlatform::route('/{record}'),\n            'edit' => Pages\\EditPlatform::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/PlatformResource.php"},"app/Filament/Resources/PlatformResource/Pages/EditPlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass EditPlatform extends EditRecord\n{\n    protected static string $resource = PlatformResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/PlatformResource/Pages/EditPlatform.php"},"app/Filament/Resources/PlatformResource/Pages/ViewPlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass ViewPlatform extends ViewRecord\n{\n    protected static string $resource = PlatformResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/PlatformResource/Pages/ViewPlatform.php"},"app/Filament/Resources/PlatformResource/Pages/ListPlatforms.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass ListPlatforms extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = PlatformResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/PlatformResource/Pages/ListPlatforms.php"},"app/Filament/Resources/PlatformResource/Pages/CreatePlatform.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\PlatformResource;\n\nclass CreatePlatform extends CreateRecord\n{\n    protected static string $resource = PlatformResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:319|crud-settings:319","path":"app/Filament/Resources/PlatformResource/Pages/CreatePlatform.php"},"app/Filament/Resources/PlatformResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\PlatformResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/PlatformResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/StackResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Stack;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\StackResource\\Pages;\n\nclass StackResource extends Resource\n{\n    protected static ?string $model = Stack::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Toggle::make('public')\n                        ->rules(['boolean'])\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Toggle::make('major')\n                        ->rules(['boolean'])\n                        ->required()\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('user_id')\n                        ->rules(['exists:users,id'])\n                        ->required()\n                        ->relationship('created_by', 'name')\n                        ->searchable()\n                        ->placeholder('Created By')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n                Tables\\Columns\\IconColumn::make('public')\n                    ->toggleable()\n                    ->boolean(),\n                Tables\\Columns\\IconColumn::make('major')\n                    ->toggleable()\n                    ->boolean(),\n                Tables\\Columns\\TextColumn::make('createdBy.name')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('user_id')\n                    ->relationship('created_by', 'name')\n                    ->indicator('User')\n                    ->multiple()\n                    ->label('User'),\n            ]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [StackResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStacks::route('/'),\n            'create' => Pages\\CreateStack::route('/create'),\n            'view' => Pages\\ViewStack::route('/{record}'),\n            'edit' => Pages\\EditStack::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/StackResource.php"},"app/Filament/Resources/StackResource/Pages/EditStack.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\StackResource\\Pages;\n\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\StackResource;\n\nclass EditStack extends EditRecord\n{\n    protected static string $resource = StackResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/StackResource/Pages/EditStack.php"},"app/Filament/Resources/StackResource/Pages/ViewStack.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\StackResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\StackResource;\n\nclass ViewStack extends ViewRecord\n{\n    protected static string $resource = StackResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/StackResource/Pages/ViewStack.php"},"app/Filament/Resources/StackResource/Pages/ListStacks.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\StackResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\StackResource;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListStacks extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = StackResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/StackResource/Pages/ListStacks.php"},"app/Filament/Resources/StackResource/Pages/CreateStack.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\StackResource\\Pages;\n\nuse App\\Filament\\Resources\\StackResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateStack extends CreateRecord\n{\n    protected static string $resource = StackResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/StackResource/Pages/CreateStack.php"},"app/Filament/Resources/StackResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\StackResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/StackResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/TagResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Tag;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\TagResource\\Pages;\n\nclass TagResource extends Resource\n{\n    protected static ?string $model = Tag::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [TagResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTags::route('/'),\n            'create' => Pages\\CreateTag::route('/create'),\n            'view' => Pages\\ViewTag::route('/{record}'),\n            'edit' => Pages\\EditTag::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/TagResource.php"},"app/Filament/Resources/TagResource/Pages/EditTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditTag extends EditRecord\n{\n    protected static string $resource = TagResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/TagResource/Pages/EditTag.php"},"app/Filament/Resources/TagResource/Pages/ViewTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\ViewRecord;\n\nclass ViewTag extends ViewRecord\n{\n    protected static string $resource = TagResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/TagResource/Pages/ViewTag.php"},"app/Filament/Resources/TagResource/Pages/ListTags.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListTags extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = TagResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/TagResource/Pages/ListTags.php"},"app/Filament/Resources/TagResource/Pages/CreateTag.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\Pages;\n\nuse App\\Filament\\Resources\\TagResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateTag extends CreateRecord\n{\n    protected static string $resource = TagResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:321|crud-settings:321","path":"app/Filament/Resources/TagResource/Pages/CreateTag.php"},"app/Filament/Resources/TagResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TagResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/TagResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/TypeResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Type;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\TypeResource\\Pages;\n\nclass TypeResource extends Resource\n{\n    protected static ?string $model = Type::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [TypeResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTypes::route('/'),\n            'create' => Pages\\CreateType::route('/create'),\n            'view' => Pages\\ViewType::route('/{record}'),\n            'edit' => Pages\\EditType::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:322|crud-settings:322","path":"app/Filament/Resources/TypeResource.php"},"app/Filament/Resources/TypeResource/Pages/EditType.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TypeResource\\Pages;\n\nuse App\\Filament\\Resources\\TypeResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditType extends EditRecord\n{\n    protected static string $resource = TypeResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:322|crud-settings:322","path":"app/Filament/Resources/TypeResource/Pages/EditType.php"},"app/Filament/Resources/TypeResource/Pages/ViewType.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TypeResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\TypeResource;\n\nclass ViewType extends ViewRecord\n{\n    protected static string $resource = TypeResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:322|crud-settings:322","path":"app/Filament/Resources/TypeResource/Pages/ViewType.php"},"app/Filament/Resources/TypeResource/Pages/ListTypes.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TypeResource\\Pages;\n\nuse App\\Filament\\Resources\\TypeResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListTypes extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = TypeResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:322|crud-settings:322","path":"app/Filament/Resources/TypeResource/Pages/ListTypes.php"},"app/Filament/Resources/TypeResource/Pages/CreateType.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TypeResource\\Pages;\n\nuse App\\Filament\\Resources\\TypeResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateType extends CreateRecord\n{\n    protected static string $resource = TypeResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:322|crud-settings:322","path":"app/Filament/Resources/TypeResource/Pages/CreateType.php"},"app/Filament/Resources/TypeResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\TypeResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('vendor_id')\n                    ->rules(['exists:vendors,id'])\n                    ->relationship('vendor', 'title')\n                    ->searchable()\n                    ->placeholder('Vendor')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/TypeResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\User;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Livewire\\Component;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Filament\\Forms\\Components\\TextInput;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\UserResource\\Pages;\n\nclass UserResource extends Resource\n{\n    protected static ?string $model = User::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('name')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Name')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('email')\n                        ->rules(['email'])\n                        ->required()\n                        ->unique(\n                            'users',\n                            'email',\n                            fn(?Model $record) => $record\n                        )\n                        ->email()\n                        ->placeholder('Email')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('password')\n                        ->required()\n                        ->password()\n                        ->dehydrateStateUsing(fn($state) => \\Hash::make($state))\n                        ->required(\n                            fn(Component $livewire) => $livewire instanceof\n                                Pages\\CreateUser\n                        )\n                        ->placeholder('Password')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('name')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('email')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [UserResource\\RelationManagers\\StacksRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListUsers::route('/'),\n            'create' => Pages\\CreateUser::route('/create'),\n            'view' => Pages\\ViewUser::route('/{record}'),\n            'edit' => Pages\\EditUser::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:323|crud-settings:323","path":"app/Filament/Resources/UserResource.php"},"app/Filament/Resources/UserResource/Pages/EditUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\EditRecord;\n\nclass EditUser extends EditRecord\n{\n    protected static string $resource = UserResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:323|crud-settings:323","path":"app/Filament/Resources/UserResource/Pages/EditUser.php"},"app/Filament/Resources/UserResource/Pages/ViewUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\UserResource;\n\nclass ViewUser extends ViewRecord\n{\n    protected static string $resource = UserResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:323|crud-settings:323","path":"app/Filament/Resources/UserResource/Pages/ViewUser.php"},"app/Filament/Resources/UserResource/Pages/ListUsers.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListUsers extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = UserResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:323|crud-settings:323","path":"app/Filament/Resources/UserResource/Pages/ListUsers.php"},"app/Filament/Resources/UserResource/Pages/CreateUser.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\Pages;\n\nuse App\\Filament\\Resources\\UserResource;\nuse Filament\\Resources\\Pages\\CreateRecord;\n\nclass CreateUser extends CreateRecord\n{\n    protected static string $resource = UserResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:323|crud-settings:323","path":"app/Filament/Resources/UserResource/Pages/CreateUser.php"},"app/Filament/Resources/UserResource/RelationManagers/StacksRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\UserResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass StacksRelationManager extends RelationManager\n{\n    protected static string $relationship = 'stacks';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('public')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Toggle::make('major')\n                    ->rules(['boolean'])\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\IconColumn::make('public'),\n                Tables\\Columns\\IconColumn::make('major'),\n                Tables\\Columns\\TextColumn::make('createdBy.name')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('user_id')->relationship(\n                    'createdBy',\n                    'name'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:320|crud-settings:320","path":"app/Filament/Resources/UserResource/RelationManagers/StacksRelationManager.php"},"app/Filament/Resources/VendorResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Vendor;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\VendorResource\\Pages;\n\nclass VendorResource extends Resource\n{\n    protected static ?string $model = Vendor::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('title')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Title')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('slug')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Slug')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('github')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Github')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('packagist')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Packagist')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('npm')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Npm')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    TextInput::make('website')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Website')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    RichEditor::make('description')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Description')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('github')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('npm')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('website')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('description')\n                    ->toggleable()\n                    ->searchable()\n                    ->limit(50),\n            ])\n            ->filters([DateRangeFilter::make('created_at')]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [VendorResource\\RelationManagers\\ItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVendors::route('/'),\n            'create' => Pages\\CreateVendor::route('/create'),\n            'view' => Pages\\ViewVendor::route('/{record}'),\n            'edit' => Pages\\EditVendor::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:324|crud-settings:324","path":"app/Filament/Resources/VendorResource.php"},"app/Filament/Resources/VendorResource/Pages/EditVendor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VendorResource\\Pages;\n\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\VendorResource;\n\nclass EditVendor extends EditRecord\n{\n    protected static string $resource = VendorResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:324|crud-settings:324","path":"app/Filament/Resources/VendorResource/Pages/EditVendor.php"},"app/Filament/Resources/VendorResource/Pages/ViewVendor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VendorResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\VendorResource;\n\nclass ViewVendor extends ViewRecord\n{\n    protected static string $resource = VendorResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:324|crud-settings:324","path":"app/Filament/Resources/VendorResource/Pages/ViewVendor.php"},"app/Filament/Resources/VendorResource/Pages/ListVendors.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VendorResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\VendorResource;\nuse App\\Filament\\Traits\\HasDescendingOrder;\n\nclass ListVendors extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = VendorResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:324|crud-settings:324","path":"app/Filament/Resources/VendorResource/Pages/ListVendors.php"},"app/Filament/Resources/VendorResource/Pages/CreateVendor.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VendorResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\VendorResource;\n\nclass CreateVendor extends CreateRecord\n{\n    protected static string $resource = VendorResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:324|crud-settings:324","path":"app/Filament/Resources/VendorResource/Pages/CreateVendor.php"},"app/Filament/Resources/VendorResource/RelationManagers/ItemsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VendorResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\KeyValue;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'title';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('title')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Title')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('slug')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Slug')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                RichEditor::make('description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('type_id')\n                    ->rules(['exists:types,id'])\n                    ->relationship('type', 'title')\n                    ->searchable()\n                    ->placeholder('Type')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('website')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Website')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('rating')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Rating')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('health')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Health')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Github Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_stars')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Stars')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_forks')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Forks')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                KeyValue::make('github_json')\n                    ->required()\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_name')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Name')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_description')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Packagist Description')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_downloads')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Downloads')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('packagist_favers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Packagist Favers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('npm_url')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Npm Url')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                TextInput::make('github_maintainers')\n                    ->rules(['numeric'])\n                    ->numeric()\n                    ->placeholder('Github Maintainers')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('title')->limit(50),\n                Tables\\Columns\\TextColumn::make('slug')->limit(50),\n                Tables\\Columns\\TextColumn::make('description')->limit(50),\n                Tables\\Columns\\TextColumn::make('vendor.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('type.title')->limit(50),\n                Tables\\Columns\\TextColumn::make('website')->limit(50),\n                Tables\\Columns\\TextColumn::make('rating')->limit(50),\n                Tables\\Columns\\TextColumn::make('health')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_stars'),\n                Tables\\Columns\\TextColumn::make('github_forks'),\n                Tables\\Columns\\TextColumn::make('packagist_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_name')->limit(50),\n                Tables\\Columns\\TextColumn::make('packagist_description')->limit(\n                    50\n                ),\n                Tables\\Columns\\TextColumn::make('packagist_downloads'),\n                Tables\\Columns\\TextColumn::make('packagist_favers'),\n                Tables\\Columns\\TextColumn::make('npm_url')->limit(50),\n                Tables\\Columns\\TextColumn::make('github_maintainers'),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('vendor_id')->relationship(\n                    'vendor',\n                    'title'\n                ),\n\n                MultiSelectFilter::make('type_id')->relationship(\n                    'type',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:318|crud-settings:318","path":"app/Filament/Resources/VendorResource/RelationManagers/ItemsRelationManager.php"},"app/Filament/Resources/VersionResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Models\\Version;\nuse Filament\\{Tables, Forms};\nuse Filament\\Resources\\{Form, Table, Resource};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Card;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse App\\Filament\\Filters\\DateRangeFilter;\nuse App\\Filament\\Resources\\VersionResource\\Pages;\n\nclass VersionResource extends Resource\n{\n    protected static ?string $model = Version::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-collection';\n\n    protected static ?string $recordTitleAttribute = 'version';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Card::make()->schema([\n                Grid::make(['default' => 0])->schema([\n                    TextInput::make('version')\n                        ->rules(['max:255', 'string'])\n                        ->required()\n                        ->placeholder('Version')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n\n                    Select::make('item_id')\n                        ->rules(['exists:items,id'])\n                        ->required()\n                        ->relationship('item', 'title')\n                        ->searchable()\n                        ->placeholder('Item')\n                        ->columnSpan([\n                            'default' => 12,\n                            'md' => 12,\n                            'lg' => 12,\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                Tables\\Columns\\TextColumn::make('version')\n                    ->toggleable()\n                    ->searchable(true, null, true)\n                    ->limit(50),\n                Tables\\Columns\\TextColumn::make('item.title')\n                    ->toggleable()\n                    ->limit(50),\n            ])\n            ->filters([\n                DateRangeFilter::make('created_at'),\n\n                SelectFilter::make('item_id')\n                    ->relationship('item', 'title')\n                    ->indicator('Item')\n                    ->multiple()\n                    ->label('Item'),\n            ]);\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            VersionResource\\RelationManagers\\VersionsRelationManager::class,\n            VersionResource\\RelationManagers\\VersionsRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVersions::route('/'),\n            'create' => Pages\\CreateVersion::route('/create'),\n            'view' => Pages\\ViewVersion::route('/{record}'),\n            'edit' => Pages\\EditVersion::route('/{record}/edit'),\n        ];\n    }\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource.php"},"app/Filament/Resources/VersionResource/Pages/EditVersion.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VersionResource\\Pages;\n\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\VersionResource;\n\nclass EditVersion extends EditRecord\n{\n    protected static string $resource = VersionResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource/Pages/EditVersion.php"},"app/Filament/Resources/VersionResource/Pages/ViewVersion.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VersionResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\VersionResource;\n\nclass ViewVersion extends ViewRecord\n{\n    protected static string $resource = VersionResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource/Pages/ViewVersion.php"},"app/Filament/Resources/VersionResource/Pages/ListVersions.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VersionResource\\Pages;\n\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Traits\\HasDescendingOrder;\nuse App\\Filament\\Resources\\VersionResource;\n\nclass ListVersions extends ListRecords\n{\n    use HasDescendingOrder;\n\n    protected static string $resource = VersionResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource/Pages/ListVersions.php"},"app/Filament/Resources/VersionResource/Pages/CreateVersion.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VersionResource\\Pages;\n\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\VersionResource;\n\nclass CreateVersion extends CreateRecord\n{\n    protected static string $resource = VersionResource::class;\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource/Pages/CreateVersion.php"},"app/Filament/Resources/VersionResource/RelationManagers/VersionsRelationManager.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Filament\\Resources\\VersionResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Resources\\{Form, Table};\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\BelongsToSelect;\nuse Filament\\Tables\\Filters\\MultiSelectFilter;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass VersionsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'versions';\n\n    protected static ?string $recordTitleAttribute = 'version';\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 0])->schema([\n                TextInput::make('version')\n                    ->rules(['max:255', 'string'])\n                    ->placeholder('Version')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n\n                Select::make('item_id')\n                    ->rules(['exists:items,id'])\n                    ->relationship('item', 'title')\n                    ->searchable()\n                    ->placeholder('Item')\n                    ->columnSpan([\n                        'default' => 12,\n                        'md' => 12,\n                        'lg' => 12,\n                    ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                Tables\\Columns\\TextColumn::make('version')->limit(50),\n                Tables\\Columns\\TextColumn::make('item.title')->limit(50),\n            ])\n            ->filters([\n                Tables\\Filters\\Filter::make('created_at')\n                    ->form([\n                        Forms\\Components\\DatePicker::make('created_from'),\n                        Forms\\Components\\DatePicker::make('created_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['created_from'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '>=',\n                                    $date\n                                )\n                            )\n                            ->when(\n                                $data['created_until'],\n                                fn(\n                                    Builder $query,\n                                    $date\n                                ): Builder => $query->whereDate(\n                                    'created_at',\n                                    '<=',\n                                    $date\n                                )\n                            );\n                    }),\n\n                MultiSelectFilter::make('item_id')->relationship(\n                    'item',\n                    'title'\n                ),\n            ])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([Tables\\Actions\\DeleteBulkAction::make()]);\n    }\n}\n","module":"plugin:app.vemto.filament|crud:325|crud-settings:325","path":"app/Filament/Resources/VersionResource/RelationManagers/VersionsRelationManager.php"}},"skippedFiles":{},"removedModules":["entity:126","entity:123","crud:325"],"migrationsDate":"2023_08_03","lastForeignAlias":0,"cascadeDeleteAsDefault":true,"cascadeUpdateAsDefault":true,"hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"hasFixedHasManyDetailOnPageFields":true,"hasFixedLongForeignIndexName":true,"hasFixedEntityMigrationsGeneration":true,"pluginsData":{"app.vemto.filament":{"cruds":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true,"id":308,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":309,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true},null,null,{"selected":true},{"selected":true},null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true}]},{"selected":true,"id":310,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":311,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":312,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":313,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":314,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":315,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":316,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":317,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":318,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true},null,null,{"selected":true},{"selected":true},null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,{"selected":true}]},{"selected":true,"id":319,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":320,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":321,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":322,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":323,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":324,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]},{"selected":true,"id":325,"inputs":true,"relationships":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true},{"selected":true},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"selected":true}]}],"allSelected":true}},"templatesData":{},"usesVite":true,"id":7,"createdAt":"2023-08-03 15:25:05","updatedAt":"2023-08-08 09:14:34"}},"hasmanydetails":{},"dependentselects":{},"hasmanythroughrelatioships":{},"comments":{}},"exportedItems":["projects:7"],"exportedRelationships":["Project:7:cruds","Crud:317:inputs","Crud:317:manyToManyComponents","Crud:317:hasManyDetails","Crud:317:manyToManyDetails","Crud:317:dependentSelects","Crud:318:inputs","Crud:318:manyToManyComponents","Crud:318:hasManyDetails","Crud:318:manyToManyDetails","Crud:318:dependentSelects","Crud:319:inputs","Crud:319:manyToManyComponents","Crud:319:hasManyDetails","Crud:319:manyToManyDetails","Crud:319:dependentSelects","Crud:320:inputs","Crud:320:manyToManyComponents","Crud:320:hasManyDetails","Crud:320:manyToManyDetails","Crud:320:dependentSelects","Crud:321:inputs","Crud:321:manyToManyComponents","Crud:321:hasManyDetails","Crud:321:manyToManyDetails","Crud:321:dependentSelects","Crud:322:inputs","Crud:322:manyToManyComponents","Crud:322:hasManyDetails","Crud:322:manyToManyDetails","Crud:322:dependentSelects","Crud:323:inputs","Crud:323:manyToManyComponents","Crud:323:hasManyDetails","Crud:323:manyToManyDetails","Crud:323:dependentSelects","Crud:324:inputs","Crud:324:manyToManyComponents","Crud:324:hasManyDetails","Crud:324:manyToManyDetails","Crud:324:dependentSelects","Project:7:entities","Entity:119:authProject","Entity:119:cruds","Entity:119:fields","Field:732:inputs","Field:732:foreign","Field:732:relatedForeigns","Foreign:217:inputs","Field:732:basicParentRelationships","Field:732:basicForeignRelationships","Field:732:manyToManyModelRelationships","Field:732:manyToManylocalModelRelationships","Field:732:typedMorphRelationships","Field:732:identifiedMorphRelationships","Field:773:inputs","Field:773:foreign","Field:773:relatedForeigns","Field:773:basicParentRelationships","Field:773:basicForeignRelationships","Field:773:manyToManyModelRelationships","Field:773:manyToManylocalModelRelationships","Field:773:typedMorphRelationships","Field:773:identifiedMorphRelationships","Field:776:inputs","Field:776:foreign","Field:776:relatedForeigns","Field:776:basicParentRelationships","Field:776:basicForeignRelationships","Field:776:manyToManyModelRelationships","Field:776:manyToManylocalModelRelationships","Field:776:typedMorphRelationships","Field:776:identifiedMorphRelationships","Field:785:inputs","Field:785:foreign","Field:785:relatedForeigns","Field:785:basicParentRelationships","Field:785:basicForeignRelationships","Field:785:manyToManyModelRelationships","Field:785:manyToManylocalModelRelationships","Field:785:typedMorphRelationships","Field:785:identifiedMorphRelationships","Entity:119:foreigns","Entity:119:pivotRelationships","Entity:119:pivotMorphRelationships","Entity:119:basicRelationships","Entity:119:hasManyThroughRelationships","Entity:119:basicRelatedRelationships","Entity:119:manyToManyRelationships","ManyToManyRelationship:75:contrary","ManyToManyRelationship:76:contrary","ManyToManyRelationship:75:components","ManyToManyRelationship:75:manyToManyDetails","ManyToManyRelationship:76:components","ManyToManyRelationship:76:manyToManyDetails","Entity:119:manyToManyRelatedRelationships","Entity:119:morphRelationships","Entity:119:morphRelatedRelationships","Entity:132:authProject","Entity:132:cruds","Entity:132:fields","Field:774:inputs","Field:774:foreign","Foreign:216:inputs","Field:774:relatedForeigns","Field:774:basicParentRelationships","Field:774:basicForeignRelationships","Field:774:manyToManyModelRelationships","Field:774:manyToManylocalModelRelationships","Field:774:typedMorphRelationships","Field:774:identifiedMorphRelationships","Field:775:inputs","Field:775:foreign","Field:775:relatedForeigns","Field:775:basicParentRelationships","Field:775:basicForeignRelationships","Field:775:manyToManyModelRelationships","Field:775:manyToManylocalModelRelationships","Field:775:typedMorphRelationships","Field:775:identifiedMorphRelationships","Entity:132:foreigns","Entity:132:pivotRelationships","Entity:132:pivotMorphRelationships","Entity:132:basicRelationships","Entity:132:hasManyThroughRelationships","Entity:132:basicRelatedRelationships","Entity:132:manyToManyRelationships","Entity:132:manyToManyRelatedRelationships","Entity:132:morphRelationships","Entity:132:morphRelatedRelationships","Entity:117:authProject","Entity:117:cruds","Entity:117:fields","Field:730:inputs","Field:730:foreign","Field:730:relatedForeigns","Foreign:210:inputs","Foreign:215:inputs","Foreign:219:inputs","Foreign:221:inputs","Foreign:222:inputs","Field:730:basicParentRelationships","Field:730:basicForeignRelationships","Field:730:manyToManyModelRelationships","Field:730:manyToManylocalModelRelationships","Field:730:typedMorphRelationships","Field:730:identifiedMorphRelationships","Field:769:inputs","Field:769:foreign","Field:769:relatedForeigns","Field:769:basicParentRelationships","Field:769:basicForeignRelationships","Field:769:manyToManyModelRelationships","Field:769:manyToManylocalModelRelationships","Field:769:typedMorphRelationships","Field:769:identifiedMorphRelationships","Field:770:inputs","Field:770:foreign","Field:770:relatedForeigns","Field:770:basicParentRelationships","Field:770:basicForeignRelationships","Field:770:manyToManyModelRelationships","Field:770:manyToManylocalModelRelationships","Field:770:typedMorphRelationships","Field:770:identifiedMorphRelationships","Field:789:inputs","Field:789:foreign","Field:789:relatedForeigns","Field:789:basicParentRelationships","Field:789:basicForeignRelationships","Field:789:manyToManyModelRelationships","Field:789:manyToManylocalModelRelationships","Field:789:typedMorphRelationships","Field:789:identifiedMorphRelationships","Field:839:inputs","Field:839:foreign","Field:839:relatedForeigns","Field:839:basicParentRelationships","Field:839:basicForeignRelationships","Field:839:manyToManyModelRelationships","Field:839:manyToManylocalModelRelationships","Field:839:typedMorphRelationships","Field:839:identifiedMorphRelationships","Field:838:inputs","Field:838:foreign","Field:838:relatedForeigns","Field:838:basicParentRelationships","Field:838:basicForeignRelationships","Field:838:manyToManyModelRelationships","Field:838:manyToManylocalModelRelationships","Field:838:typedMorphRelationships","Field:838:identifiedMorphRelationships","Field:759:inputs","Field:759:foreign","Foreign:207:inputs","Field:759:relatedForeigns","Field:759:basicParentRelationships","Field:759:basicForeignRelationships","BasicRelationship:290:inputs","BasicRelationship:290:contrary","BasicRelationship:289:inputs","BasicRelationship:289:contrary","BasicRelationship:290:hasManyDetails","BasicRelationship:289:hasManyDetails","Field:759:manyToManyModelRelationships","Field:759:manyToManylocalModelRelationships","Field:759:typedMorphRelationships","Field:759:identifiedMorphRelationships","Field:763:inputs","Field:763:foreign","Foreign:211:inputs","Field:763:relatedForeigns","Field:763:basicParentRelationships","Field:763:basicForeignRelationships","BasicRelationship:294:inputs","BasicRelationship:294:contrary","BasicRelationship:293:inputs","BasicRelationship:293:contrary","BasicRelationship:294:hasManyDetails","BasicRelationship:293:hasManyDetails","Field:763:manyToManyModelRelationships","Field:763:manyToManylocalModelRelationships","Field:763:typedMorphRelationships","Field:763:identifiedMorphRelationships","Field:795:inputs","Field:795:foreign","Field:795:relatedForeigns","Field:795:basicParentRelationships","Field:795:basicForeignRelationships","Field:795:manyToManyModelRelationships","Field:795:manyToManylocalModelRelationships","Field:795:typedMorphRelationships","Field:795:identifiedMorphRelationships","Field:793:inputs","Field:793:foreign","Field:793:relatedForeigns","Field:793:basicParentRelationships","Field:793:basicForeignRelationships","Field:793:manyToManyModelRelationships","Field:793:manyToManylocalModelRelationships","Field:793:typedMorphRelationships","Field:793:identifiedMorphRelationships","Field:794:inputs","Field:794:foreign","Field:794:relatedForeigns","Field:794:basicParentRelationships","Field:794:basicForeignRelationships","Field:794:manyToManyModelRelationships","Field:794:manyToManylocalModelRelationships","Field:794:typedMorphRelationships","Field:794:identifiedMorphRelationships","Field:790:inputs","Field:790:foreign","Field:790:relatedForeigns","Field:790:basicParentRelationships","Field:790:basicForeignRelationships","Field:790:manyToManyModelRelationships","Field:790:manyToManylocalModelRelationships","Field:790:typedMorphRelationships","Field:790:identifiedMorphRelationships","Field:796:inputs","Field:796:foreign","Field:796:relatedForeigns","Field:796:basicParentRelationships","Field:796:basicForeignRelationships","Field:796:manyToManyModelRelationships","Field:796:manyToManylocalModelRelationships","Field:796:typedMorphRelationships","Field:796:identifiedMorphRelationships","Field:797:inputs","Field:797:foreign","Field:797:relatedForeigns","Field:797:basicParentRelationships","Field:797:basicForeignRelationships","Field:797:manyToManyModelRelationships","Field:797:manyToManylocalModelRelationships","Field:797:typedMorphRelationships","Field:797:identifiedMorphRelationships","Field:812:inputs","Field:812:foreign","Field:812:relatedForeigns","Field:812:basicParentRelationships","Field:812:basicForeignRelationships","Field:812:manyToManyModelRelationships","Field:812:manyToManylocalModelRelationships","Field:812:typedMorphRelationships","Field:812:identifiedMorphRelationships","Field:791:inputs","Field:791:foreign","Field:791:relatedForeigns","Field:791:basicParentRelationships","Field:791:basicForeignRelationships","Field:791:manyToManyModelRelationships","Field:791:manyToManylocalModelRelationships","Field:791:typedMorphRelationships","Field:791:identifiedMorphRelationships","Field:800:inputs","Field:800:foreign","Field:800:relatedForeigns","Field:800:basicParentRelationships","Field:800:basicForeignRelationships","Field:800:manyToManyModelRelationships","Field:800:manyToManylocalModelRelationships","Field:800:typedMorphRelationships","Field:800:identifiedMorphRelationships","Field:801:inputs","Field:801:foreign","Field:801:relatedForeigns","Field:801:basicParentRelationships","Field:801:basicForeignRelationships","Field:801:manyToManyModelRelationships","Field:801:manyToManylocalModelRelationships","Field:801:typedMorphRelationships","Field:801:identifiedMorphRelationships","Field:798:inputs","Field:798:foreign","Field:798:relatedForeigns","Field:798:basicParentRelationships","Field:798:basicForeignRelationships","Field:798:manyToManyModelRelationships","Field:798:manyToManylocalModelRelationships","Field:798:typedMorphRelationships","Field:798:identifiedMorphRelationships","Field:799:inputs","Field:799:foreign","Field:799:relatedForeigns","Field:799:basicParentRelationships","Field:799:basicForeignRelationships","Field:799:manyToManyModelRelationships","Field:799:manyToManylocalModelRelationships","Field:799:typedMorphRelationships","Field:799:identifiedMorphRelationships","Field:792:inputs","Field:792:foreign","Field:792:relatedForeigns","Field:792:basicParentRelationships","Field:792:basicForeignRelationships","Field:792:manyToManyModelRelationships","Field:792:manyToManylocalModelRelationships","Field:792:typedMorphRelationships","Field:792:identifiedMorphRelationships","Field:811:inputs","Field:811:foreign","Field:811:relatedForeigns","Field:811:basicParentRelationships","Field:811:basicForeignRelationships","Field:811:manyToManyModelRelationships","Field:811:manyToManylocalModelRelationships","Field:811:typedMorphRelationships","Field:811:identifiedMorphRelationships","Entity:117:foreigns","Entity:117:pivotRelationships","Entity:117:pivotMorphRelationships","Entity:117:basicRelationships","Entity:117:hasManyThroughRelationships","Entity:117:basicRelatedRelationships","Entity:117:manyToManyRelationships","ManyToManyRelationship:69:contrary","ManyToManyRelationship:70:contrary","ManyToManyRelationship:69:components","ManyToManyRelationship:69:manyToManyDetails","ManyToManyRelationship:70:components","ManyToManyRelationship:70:manyToManyDetails","ManyToManyRelationship:73:contrary","ManyToManyRelationship:74:contrary","ManyToManyRelationship:73:components","ManyToManyRelationship:73:manyToManyDetails","ManyToManyRelationship:74:components","ManyToManyRelationship:74:manyToManyDetails","ManyToManyRelationship:77:contrary","ManyToManyRelationship:78:contrary","ManyToManyRelationship:77:components","ManyToManyRelationship:77:manyToManyDetails","ManyToManyRelationship:78:components","ManyToManyRelationship:78:manyToManyDetails","ManyToManyRelationship:79:contrary","ManyToManyRelationship:80:contrary","ManyToManyRelationship:79:components","ManyToManyRelationship:79:manyToManyDetails","ManyToManyRelationship:80:components","ManyToManyRelationship:80:manyToManyDetails","Entity:117:manyToManyRelatedRelationships","Entity:117:morphRelationships","Entity:117:morphRelatedRelationships","Entity:135:authProject","Entity:135:cruds","Entity:135:fields","Field:813:inputs","Field:813:foreign","Field:813:relatedForeigns","Field:813:basicParentRelationships","Field:813:basicForeignRelationships","Field:813:manyToManyModelRelationships","Field:813:manyToManylocalModelRelationships","Field:813:typedMorphRelationships","Field:813:identifiedMorphRelationships","Field:814:inputs","Field:814:foreign","Field:814:relatedForeigns","Field:814:basicParentRelationships","Field:814:basicForeignRelationships","Field:814:manyToManyModelRelationships","Field:814:manyToManylocalModelRelationships","Field:814:typedMorphRelationships","Field:814:identifiedMorphRelationships","Field:816:inputs","Field:816:foreign","Field:816:relatedForeigns","Field:816:basicParentRelationships","Field:816:basicForeignRelationships","Field:816:manyToManyModelRelationships","Field:816:manyToManylocalModelRelationships","Field:816:typedMorphRelationships","Field:816:identifiedMorphRelationships","Field:817:inputs","Field:817:foreign","Field:817:relatedForeigns","Field:817:basicParentRelationships","Field:817:basicForeignRelationships","Field:817:manyToManyModelRelationships","Field:817:manyToManylocalModelRelationships","Field:817:typedMorphRelationships","Field:817:identifiedMorphRelationships","Field:818:inputs","Field:818:foreign","Field:818:relatedForeigns","Field:818:basicParentRelationships","Field:818:basicForeignRelationships","Field:818:manyToManyModelRelationships","Field:818:manyToManylocalModelRelationships","Field:818:typedMorphRelationships","Field:818:identifiedMorphRelationships","Field:819:inputs","Field:819:foreign","Field:819:relatedForeigns","Field:819:basicParentRelationships","Field:819:basicForeignRelationships","Field:819:manyToManyModelRelationships","Field:819:manyToManylocalModelRelationships","Field:819:typedMorphRelationships","Field:819:identifiedMorphRelationships","Field:820:inputs","Field:820:foreign","Field:820:relatedForeigns","Field:820:basicParentRelationships","Field:820:basicForeignRelationships","Field:820:manyToManyModelRelationships","Field:820:manyToManylocalModelRelationships","Field:820:typedMorphRelationships","Field:820:identifiedMorphRelationships","Field:821:inputs","Field:821:foreign","Field:821:relatedForeigns","Field:821:basicParentRelationships","Field:821:basicForeignRelationships","Field:821:manyToManyModelRelationships","Field:821:manyToManylocalModelRelationships","Field:821:typedMorphRelationships","Field:821:identifiedMorphRelationships","Field:822:inputs","Field:822:foreign","Field:822:relatedForeigns","Field:822:basicParentRelationships","Field:822:basicForeignRelationships","Field:822:manyToManyModelRelationships","Field:822:manyToManylocalModelRelationships","Field:822:typedMorphRelationships","Field:822:identifiedMorphRelationships","Field:823:inputs","Field:823:foreign","Field:823:relatedForeigns","Field:823:basicParentRelationships","Field:823:basicForeignRelationships","Field:823:manyToManyModelRelationships","Field:823:manyToManylocalModelRelationships","Field:823:typedMorphRelationships","Field:823:identifiedMorphRelationships","Field:824:inputs","Field:824:foreign","Field:824:relatedForeigns","Field:824:basicParentRelationships","Field:824:basicForeignRelationships","Field:824:manyToManyModelRelationships","Field:824:manyToManylocalModelRelationships","Field:824:typedMorphRelationships","Field:824:identifiedMorphRelationships","Field:825:inputs","Field:825:foreign","Field:825:relatedForeigns","Field:825:basicParentRelationships","Field:825:basicForeignRelationships","Field:825:manyToManyModelRelationships","Field:825:manyToManylocalModelRelationships","Field:825:typedMorphRelationships","Field:825:identifiedMorphRelationships","Field:830:inputs","Field:830:foreign","Field:830:relatedForeigns","Field:830:basicParentRelationships","Field:830:basicForeignRelationships","Field:830:manyToManyModelRelationships","Field:830:manyToManylocalModelRelationships","Field:830:typedMorphRelationships","Field:830:identifiedMorphRelationships","Field:831:inputs","Field:831:foreign","Field:831:relatedForeigns","Field:831:basicParentRelationships","Field:831:basicForeignRelationships","Field:831:manyToManyModelRelationships","Field:831:manyToManylocalModelRelationships","Field:831:typedMorphRelationships","Field:831:identifiedMorphRelationships","Field:832:inputs","Field:832:foreign","Field:832:relatedForeigns","Field:832:basicParentRelationships","Field:832:basicForeignRelationships","Field:832:manyToManyModelRelationships","Field:832:manyToManylocalModelRelationships","Field:832:typedMorphRelationships","Field:832:identifiedMorphRelationships","Field:834:inputs","Field:834:foreign","Field:834:relatedForeigns","Field:834:basicParentRelationships","Field:834:basicForeignRelationships","Field:834:manyToManyModelRelationships","Field:834:manyToManylocalModelRelationships","Field:834:typedMorphRelationships","Field:834:identifiedMorphRelationships","Field:835:inputs","Field:835:foreign","Field:835:relatedForeigns","Field:835:basicParentRelationships","Field:835:basicForeignRelationships","Field:835:manyToManyModelRelationships","Field:835:manyToManylocalModelRelationships","Field:835:typedMorphRelationships","Field:835:identifiedMorphRelationships","Field:836:inputs","Field:836:foreign","Field:836:relatedForeigns","Field:836:basicParentRelationships","Field:836:basicForeignRelationships","Field:836:manyToManyModelRelationships","Field:836:manyToManylocalModelRelationships","Field:836:typedMorphRelationships","Field:836:identifiedMorphRelationships","Field:837:inputs","Field:837:foreign","Field:837:relatedForeigns","Field:837:basicParentRelationships","Field:837:basicForeignRelationships","Field:837:manyToManyModelRelationships","Field:837:manyToManylocalModelRelationships","Field:837:typedMorphRelationships","Field:837:identifiedMorphRelationships","Entity:135:foreigns","Entity:135:pivotRelationships","Entity:135:pivotMorphRelationships","Entity:135:basicRelationships","Entity:135:hasManyThroughRelationships","Entity:135:basicRelatedRelationships","Entity:135:manyToManyRelationships","Entity:135:manyToManyRelatedRelationships","Entity:135:morphRelationships","Entity:135:morphRelatedRelationships","Entity:128:authProject","Entity:128:cruds","Entity:128:fields","Field:761:inputs","Field:761:foreign","Foreign:209:inputs","Field:761:relatedForeigns","Field:761:basicParentRelationships","Field:761:basicForeignRelationships","Field:761:manyToManyModelRelationships","Field:761:manyToManylocalModelRelationships","Field:761:typedMorphRelationships","Field:761:identifiedMorphRelationships","Field:762:inputs","Field:762:foreign","Field:762:relatedForeigns","Field:762:basicParentRelationships","Field:762:basicForeignRelationships","Field:762:manyToManyModelRelationships","Field:762:manyToManylocalModelRelationships","Field:762:typedMorphRelationships","Field:762:identifiedMorphRelationships","Entity:128:foreigns","Entity:128:pivotRelationships","Entity:128:pivotMorphRelationships","Entity:128:basicRelationships","Entity:128:hasManyThroughRelationships","Entity:128:basicRelatedRelationships","Entity:128:manyToManyRelationships","Entity:128:manyToManyRelatedRelationships","Entity:128:morphRelationships","Entity:128:morphRelatedRelationships","Entity:134:authProject","Entity:134:cruds","Entity:134:fields","Field:803:inputs","Field:803:foreign","Foreign:218:inputs","Field:803:relatedForeigns","Field:803:basicParentRelationships","Field:803:basicForeignRelationships","Field:803:manyToManyModelRelationships","Field:803:manyToManylocalModelRelationships","Field:803:typedMorphRelationships","Field:803:identifiedMorphRelationships","Field:804:inputs","Field:804:foreign","Field:804:relatedForeigns","Field:804:basicParentRelationships","Field:804:basicForeignRelationships","Field:804:manyToManyModelRelationships","Field:804:manyToManylocalModelRelationships","Field:804:typedMorphRelationships","Field:804:identifiedMorphRelationships","Entity:134:foreigns","Entity:134:pivotRelationships","Entity:134:pivotMorphRelationships","Entity:134:basicRelationships","Entity:134:hasManyThroughRelationships","Entity:134:basicRelatedRelationships","Entity:134:manyToManyRelationships","Entity:134:manyToManyRelatedRelationships","Entity:134:morphRelationships","Entity:134:morphRelatedRelationships","Entity:131:authProject","Entity:131:cruds","Entity:131:fields","Field:767:inputs","Field:767:foreign","Foreign:214:inputs","Field:767:relatedForeigns","Field:767:basicParentRelationships","Field:767:basicForeignRelationships","Field:767:manyToManyModelRelationships","Field:767:manyToManylocalModelRelationships","Field:767:typedMorphRelationships","Field:767:identifiedMorphRelationships","Field:768:inputs","Field:768:foreign","Field:768:relatedForeigns","Field:768:basicParentRelationships","Field:768:basicForeignRelationships","Field:768:manyToManyModelRelationships","Field:768:manyToManylocalModelRelationships","Field:768:typedMorphRelationships","Field:768:identifiedMorphRelationships","Entity:131:foreigns","Entity:131:pivotRelationships","Entity:131:pivotMorphRelationships","Entity:131:basicRelationships","Entity:131:hasManyThroughRelationships","Entity:131:basicRelatedRelationships","Entity:131:manyToManyRelationships","Entity:131:manyToManyRelatedRelationships","Entity:131:morphRelationships","Entity:131:morphRelatedRelationships","Entity:120:authProject","Entity:120:cruds","Entity:120:fields","Field:733:inputs","Field:733:foreign","Field:733:relatedForeigns","Field:733:basicParentRelationships","Field:733:basicForeignRelationships","Field:733:manyToManyModelRelationships","Field:733:manyToManylocalModelRelationships","Field:733:typedMorphRelationships","Field:733:identifiedMorphRelationships","Field:771:inputs","Field:771:foreign","Field:771:relatedForeigns","Field:771:basicParentRelationships","Field:771:basicForeignRelationships","Field:771:manyToManyModelRelationships","Field:771:manyToManylocalModelRelationships","Field:771:typedMorphRelationships","Field:771:identifiedMorphRelationships","Field:772:inputs","Field:772:foreign","Field:772:relatedForeigns","Field:772:basicParentRelationships","Field:772:basicForeignRelationships","Field:772:manyToManyModelRelationships","Field:772:manyToManylocalModelRelationships","Field:772:typedMorphRelationships","Field:772:identifiedMorphRelationships","Field:784:inputs","Field:784:foreign","Field:784:relatedForeigns","Field:784:basicParentRelationships","Field:784:basicForeignRelationships","Field:784:manyToManyModelRelationships","Field:784:manyToManylocalModelRelationships","Field:784:typedMorphRelationships","Field:784:identifiedMorphRelationships","Entity:120:foreigns","Entity:120:pivotRelationships","Entity:120:pivotMorphRelationships","Entity:120:basicRelationships","Entity:120:hasManyThroughRelationships","Entity:120:basicRelatedRelationships","Entity:120:manyToManyRelationships","Entity:120:manyToManyRelatedRelationships","Entity:120:morphRelationships","Entity:120:morphRelatedRelationships","Entity:133:authProject","Entity:133:cruds","Entity:133:fields","Field:802:inputs","Field:802:foreign","Field:802:relatedForeigns","Field:802:basicParentRelationships","Field:802:basicForeignRelationships","Field:802:manyToManyModelRelationships","Field:802:manyToManylocalModelRelationships","Field:802:typedMorphRelationships","Field:802:identifiedMorphRelationships","Field:807:inputs","Field:807:foreign","Field:807:relatedForeigns","Field:807:basicParentRelationships","Field:807:basicForeignRelationships","Field:807:manyToManyModelRelationships","Field:807:manyToManylocalModelRelationships","Field:807:typedMorphRelationships","Field:807:identifiedMorphRelationships","Field:808:inputs","Field:808:foreign","Field:808:relatedForeigns","Field:808:basicParentRelationships","Field:808:basicForeignRelationships","Field:808:manyToManyModelRelationships","Field:808:manyToManylocalModelRelationships","Field:808:typedMorphRelationships","Field:808:identifiedMorphRelationships","Field:809:inputs","Field:809:foreign","Field:809:relatedForeigns","Field:809:basicParentRelationships","Field:809:basicForeignRelationships","Field:809:manyToManyModelRelationships","Field:809:manyToManylocalModelRelationships","Field:809:typedMorphRelationships","Field:809:identifiedMorphRelationships","Field:806:inputs","Field:806:foreign","Field:806:relatedForeigns","Field:806:basicParentRelationships","Field:806:basicForeignRelationships","Field:806:manyToManyModelRelationships","Field:806:manyToManylocalModelRelationships","Field:806:typedMorphRelationships","Field:806:identifiedMorphRelationships","Field:829:inputs","Field:829:foreign","Field:829:relatedForeigns","Field:829:basicParentRelationships","Field:829:basicForeignRelationships","Field:829:manyToManyModelRelationships","Field:829:manyToManylocalModelRelationships","Field:829:typedMorphRelationships","Field:829:identifiedMorphRelationships","Field:805:inputs","Field:805:foreign","Foreign:220:inputs","Field:805:relatedForeigns","Field:805:basicParentRelationships","Field:805:basicForeignRelationships","BasicRelationship:296:inputs","BasicRelationship:296:contrary","BasicRelationship:295:inputs","BasicRelationship:295:contrary","BasicRelationship:296:hasManyDetails","BasicRelationship:295:hasManyDetails","Field:805:manyToManyModelRelationships","Field:805:manyToManylocalModelRelationships","Field:805:typedMorphRelationships","Field:805:identifiedMorphRelationships","Entity:133:foreigns","Entity:133:pivotRelationships","Entity:133:pivotMorphRelationships","Entity:133:basicRelationships","Entity:133:hasManyThroughRelationships","Entity:133:basicRelatedRelationships","Entity:133:manyToManyRelationships","Entity:133:manyToManyRelatedRelationships","Entity:133:morphRelationships","Entity:133:morphRelatedRelationships","Entity:130:authProject","Entity:130:cruds","Entity:130:fields","Field:766:inputs","Field:766:foreign","Field:766:relatedForeigns","Field:766:basicParentRelationships","Field:766:basicForeignRelationships","Field:766:manyToManyModelRelationships","Field:766:manyToManylocalModelRelationships","Field:766:typedMorphRelationships","Field:766:identifiedMorphRelationships","Field:786:inputs","Field:786:foreign","Field:786:relatedForeigns","Field:786:basicParentRelationships","Field:786:basicForeignRelationships","Field:786:manyToManyModelRelationships","Field:786:manyToManylocalModelRelationships","Field:786:typedMorphRelationships","Field:786:identifiedMorphRelationships","Field:787:inputs","Field:787:foreign","Field:787:relatedForeigns","Field:787:basicParentRelationships","Field:787:basicForeignRelationships","Field:787:manyToManyModelRelationships","Field:787:manyToManylocalModelRelationships","Field:787:typedMorphRelationships","Field:787:identifiedMorphRelationships","Field:788:inputs","Field:788:foreign","Field:788:relatedForeigns","Field:788:basicParentRelationships","Field:788:basicForeignRelationships","Field:788:manyToManyModelRelationships","Field:788:manyToManylocalModelRelationships","Field:788:typedMorphRelationships","Field:788:identifiedMorphRelationships","Entity:130:foreigns","Entity:130:pivotRelationships","Entity:130:pivotMorphRelationships","Entity:130:basicRelationships","Entity:130:hasManyThroughRelationships","Entity:130:basicRelatedRelationships","Entity:130:manyToManyRelationships","Entity:130:manyToManyRelatedRelationships","Entity:130:morphRelationships","Entity:130:morphRelatedRelationships","Entity:118:authProject","Entity:118:cruds","Entity:118:fields","Field:731:inputs","Field:731:foreign","Field:731:relatedForeigns","Field:731:basicParentRelationships","Field:731:basicForeignRelationships","Field:731:manyToManyModelRelationships","Field:731:manyToManylocalModelRelationships","Field:731:typedMorphRelationships","Field:731:identifiedMorphRelationships","Field:826:inputs","Field:826:foreign","Field:826:relatedForeigns","Field:826:basicParentRelationships","Field:826:basicForeignRelationships","Field:826:manyToManyModelRelationships","Field:826:manyToManylocalModelRelationships","Field:826:typedMorphRelationships","Field:826:identifiedMorphRelationships","Field:827:inputs","Field:827:foreign","Field:827:relatedForeigns","Field:827:basicParentRelationships","Field:827:basicForeignRelationships","Field:827:manyToManyModelRelationships","Field:827:manyToManylocalModelRelationships","Field:827:typedMorphRelationships","Field:827:identifiedMorphRelationships","Field:828:inputs","Field:828:foreign","Field:828:relatedForeigns","Field:828:basicParentRelationships","Field:828:basicForeignRelationships","Field:828:manyToManyModelRelationships","Field:828:manyToManylocalModelRelationships","Field:828:typedMorphRelationships","Field:828:identifiedMorphRelationships","Entity:118:foreigns","Entity:118:pivotRelationships","Entity:118:pivotMorphRelationships","Entity:118:basicRelationships","Entity:118:hasManyThroughRelationships","Entity:118:basicRelatedRelationships","Entity:118:manyToManyRelationships","Entity:118:manyToManyRelatedRelationships","Entity:118:morphRelationships","Entity:118:morphRelatedRelationships","Entity:116:authProject","Project:7:comments","Entity:116:cruds","Entity:116:fields","Field:724:inputs","Field:724:foreign","Field:724:relatedForeigns","Field:724:basicParentRelationships","Field:724:basicForeignRelationships","Field:724:manyToManyModelRelationships","Field:724:manyToManylocalModelRelationships","Field:724:typedMorphRelationships","Field:724:identifiedMorphRelationships","Field:725:inputs","Field:725:foreign","Field:725:relatedForeigns","Field:725:basicParentRelationships","Field:725:basicForeignRelationships","Field:725:manyToManyModelRelationships","Field:725:manyToManylocalModelRelationships","Field:725:typedMorphRelationships","Field:725:identifiedMorphRelationships","Field:726:inputs","Field:726:foreign","Field:726:relatedForeigns","Field:726:basicParentRelationships","Field:726:basicForeignRelationships","Field:726:manyToManyModelRelationships","Field:726:manyToManylocalModelRelationships","Field:726:typedMorphRelationships","Field:726:identifiedMorphRelationships","Field:727:inputs","Field:727:foreign","Field:727:relatedForeigns","Field:727:basicParentRelationships","Field:727:basicForeignRelationships","Field:727:manyToManyModelRelationships","Field:727:manyToManylocalModelRelationships","Field:727:typedMorphRelationships","Field:727:identifiedMorphRelationships","Field:728:inputs","Field:728:foreign","Field:728:relatedForeigns","Field:728:basicParentRelationships","Field:728:basicForeignRelationships","Field:728:manyToManyModelRelationships","Field:728:manyToManylocalModelRelationships","Field:728:typedMorphRelationships","Field:728:identifiedMorphRelationships","Field:729:inputs","Field:729:foreign","Field:729:relatedForeigns","Field:729:basicParentRelationships","Field:729:basicForeignRelationships","Field:729:manyToManyModelRelationships","Field:729:manyToManylocalModelRelationships","Field:729:typedMorphRelationships","Field:729:identifiedMorphRelationships","Entity:116:foreigns","Entity:116:pivotRelationships","Entity:116:pivotMorphRelationships","Entity:116:basicRelationships","Entity:116:hasManyThroughRelationships","Entity:116:basicRelatedRelationships","Entity:116:manyToManyRelationships","Entity:116:manyToManyRelatedRelationships","Entity:116:morphRelationships","Entity:116:morphRelatedRelationships","Entity:121:authProject","Entity:121:cruds","Entity:121:fields","Field:734:inputs","Field:734:foreign","Field:734:relatedForeigns","Field:734:basicParentRelationships","Field:734:basicForeignRelationships","Field:734:manyToManyModelRelationships","Field:734:manyToManylocalModelRelationships","Field:734:typedMorphRelationships","Field:734:identifiedMorphRelationships","Field:777:inputs","Field:777:foreign","Field:777:relatedForeigns","Field:777:basicParentRelationships","Field:777:basicForeignRelationships","Field:777:manyToManyModelRelationships","Field:777:manyToManylocalModelRelationships","Field:777:typedMorphRelationships","Field:777:identifiedMorphRelationships","Field:778:inputs","Field:778:foreign","Field:778:relatedForeigns","Field:778:basicParentRelationships","Field:778:basicForeignRelationships","Field:778:manyToManyModelRelationships","Field:778:manyToManylocalModelRelationships","Field:778:typedMorphRelationships","Field:778:identifiedMorphRelationships","Field:779:inputs","Field:779:foreign","Field:779:relatedForeigns","Field:779:basicParentRelationships","Field:779:basicForeignRelationships","Field:779:manyToManyModelRelationships","Field:779:manyToManylocalModelRelationships","Field:779:typedMorphRelationships","Field:779:identifiedMorphRelationships","Field:780:inputs","Field:780:foreign","Field:780:relatedForeigns","Field:780:basicParentRelationships","Field:780:basicForeignRelationships","Field:780:manyToManyModelRelationships","Field:780:manyToManylocalModelRelationships","Field:780:typedMorphRelationships","Field:780:identifiedMorphRelationships","Field:781:inputs","Field:781:foreign","Field:781:relatedForeigns","Field:781:basicParentRelationships","Field:781:basicForeignRelationships","Field:781:manyToManyModelRelationships","Field:781:manyToManylocalModelRelationships","Field:781:typedMorphRelationships","Field:781:identifiedMorphRelationships","Field:782:inputs","Field:782:foreign","Field:782:relatedForeigns","Field:782:basicParentRelationships","Field:782:basicForeignRelationships","Field:782:manyToManyModelRelationships","Field:782:manyToManylocalModelRelationships","Field:782:typedMorphRelationships","Field:782:identifiedMorphRelationships","Field:783:inputs","Field:783:foreign","Field:783:relatedForeigns","Field:783:basicParentRelationships","Field:783:basicForeignRelationships","Field:783:manyToManyModelRelationships","Field:783:manyToManylocalModelRelationships","Field:783:typedMorphRelationships","Field:783:identifiedMorphRelationships","Entity:121:foreigns","Entity:121:pivotRelationships","Entity:121:pivotMorphRelationships","Entity:121:basicRelationships","Entity:121:hasManyThroughRelationships","Entity:121:basicRelatedRelationships","Entity:121:manyToManyRelationships","Entity:121:manyToManyRelatedRelationships","Entity:121:morphRelationships","Entity:121:morphRelatedRelationships"]}